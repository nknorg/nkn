(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{162:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("var middleware = {};\nmiddleware['clipboard'] = __webpack_require__(412);\nmiddleware['clipboard'] = middleware['clipboard'].default || middleware['clipboard'];\n/* harmony default export */ __webpack_exports__[\"a\"] = (middleware);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi8ubnV4dC9taWRkbGV3YXJlLmpzP2YzNWIiXSwibmFtZXMiOlsibWlkZGxld2FyZSIsInJlcXVpcmUiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxVQUFVLEdBQUcsQ0FBQyxDQUFDO0FBRXJCQSxVQUFVLENBQUMsV0FBVyxDQUFDLEdBQUdDLG1CQUFPLENBQUMsR0FBNEIsQ0FBQztBQUMvREQsVUFBVSxDQUFDLFdBQVcsQ0FBQyxHQUFHQSxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUNFLE9BQU8sSUFBSUYsVUFBVSxDQUFDLFdBQVcsQ0FBQztBQUVyRUEsbUVBQVUiLCJmaWxlIjoiMTYyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWlkZGxld2FyZSA9IHt9XG5cbm1pZGRsZXdhcmVbJ2NsaXBib2FyZCddID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9jbGlwYm9hcmQuanMnKVxubWlkZGxld2FyZVsnY2xpcGJvYXJkJ10gPSBtaWRkbGV3YXJlWydjbGlwYm9hcmQnXS5kZWZhdWx0IHx8IG1pZGRsZXdhcmVbJ2NsaXBib2FyZCddXG5cbmV4cG9ydCBkZWZhdWx0IG1pZGRsZXdhcmVcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///162\n")},193:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VBadge/VBadge.js\nvar VBadge = __webpack_require__(608);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VIcon/VIcon.js\nvar VIcon = __webpack_require__(160);\n\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./components/status/NodeRunStatus.vue?vue&type=template&id=40a05d52&scoped=true\n\n\n\nvar NodeRunStatusvue_type_template_id_40a05d52_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(VBadge[\"a\" /* default */], {\n    staticClass: \"breathe mr-4\",\n    attrs: {\n      \"color\": \"transparent\"\n    },\n    scopedSlots: _vm._u([{\n      key: \"badge\",\n      fn: function fn() {\n        return [_c(VIcon[\"a\" /* default */], {\n          attrs: {\n            \"dark\": \"\",\n            \"small\": \"\",\n            \"color\": _vm.getStatusColor(_vm.nodeStatus.syncState)\n          }\n        }, [_vm._v(\"fa-circle\")])];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\" \"), _c('span', [_vm._v(\" \" + _vm._s(_vm.getStatus(_vm.nodeStatus.syncState)))])]);\n};\nvar staticRenderFns = [];\n\n// CONCATENATED MODULE: ./components/status/NodeRunStatus.vue?vue&type=template&id=40a05d52&scoped=true\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js\nvar es_symbol = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js\nvar es_object_get_own_property_descriptor = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js\nvar es_object_get_own_property_descriptors = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js\nvar es_object_keys = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(56);\n\n// EXTERNAL MODULE: ./helpers/consts.js\nvar consts = __webpack_require__(65);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./components/status/NodeRunStatus.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty[\"a\" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n/* harmony default export */ var NodeRunStatusvue_type_script_lang_js = ({\n  name: \"NodeStatus\",\n  props: {\n    nodeStatus: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      color: {\n        'DEFAULT': 'grey',\n        'WAIT_FOR_SYNCING': 'yellow accent-2',\n        'SYNC_STARTED': 'green accent-4',\n        'SYNC_FINISHED': 'green accent-4',\n        'PERSIST_FINISHED': 'green accent-4'\n      }\n    };\n  },\n  computed: _objectSpread({}, Object(vuex_esm[\"d\" /* mapState */])({\n    serviceStatus: function serviceStatus(state) {\n      return state.serviceStatus;\n    }\n  })),\n  mounted: function mounted() {},\n  methods: {\n    // get node status\n    getStatus: function getStatus(stateStr) {\n      var statusEnum = {\n        'WAIT_FOR_SYNCING': this.$t('node.state.WAIT_FOR_SYNCING'),\n        'SYNC_STARTED': this.$t('node.state.SYNC_STARTED'),\n        'SYNC_FINISHED': this.$t('node.state.SYNC_FINISHED'),\n        'PERSIST_FINISHED': this.$t('node.state.PERSIST_FINISHED')\n      };\n      return statusEnum[stateStr] || this.getServiceStatus(this.serviceStatus) || this.$t('node.state.DEFAULT');\n    },\n    getServiceStatus: function getServiceStatus(state) {\n      if ((state & consts[\"a\" /* ServiceStatusEnum */].SERVICE_STATUS_CREATE_ID) > 0) {\n        return this.$t('node.serviceStatus.SERVICE_STATUS_CREATE_ID');\n      }\n      return undefined;\n    },\n    getStatusColor: function getStatusColor(stateStr) {\n      stateStr = stateStr || 'DEFAULT';\n      return this.color[stateStr];\n    }\n  }\n});\n// CONCATENATED MODULE: ./components/status/NodeRunStatus.vue?vue&type=script&lang=js\n /* harmony default export */ var status_NodeRunStatusvue_type_script_lang_js = (NodeRunStatusvue_type_script_lang_js); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(57);\n\n// CONCATENATED MODULE: ./components/status/NodeRunStatus.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  status_NodeRunStatusvue_type_script_lang_js,\n  NodeRunStatusvue_type_template_id_40a05d52_scoped_true_render,\n  staticRenderFns,\n  false,\n  null,\n  \"40a05d52\",\n  null\n  \n)\n\n/* harmony default export */ var NodeRunStatus = __webpack_exports__[\"a\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3N0YXR1cy9Ob2RlUnVuU3RhdHVzLnZ1ZT9lMDEyIiwid2VicGFjazovLy9jb21wb25lbnRzL3N0YXR1cy9Ob2RlUnVuU3RhdHVzLnZ1ZT81YmM1Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc3RhdHVzL05vZGVSdW5TdGF0dXMudnVlP2Q1MTciLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zdGF0dXMvTm9kZVJ1blN0YXR1cy52dWU/MTIxNCJdLCJuYW1lcyI6WyJfYyIsInN0YXRpY0NsYXNzIiwiYXR0cnMiLCJzY29wZWRTbG90cyIsImtleSIsIl92bSIsIl92IiwicHJveHkiLCJzdGF0aWNSZW5kZXJGbnMiLCJyZW5kZXIiLCJuYW1lIiwicHJvcHMiLCJub2RlU3RhdHVzIiwidHlwZSIsIk9iamVjdCIsInJlcXVpcmVkIiwiZGF0YSIsImNvbG9yIiwiY29tcHV0ZWQiLCJfb2JqZWN0U3ByZWFkIiwibWFwU3RhdGUiLCJzZXJ2aWNlU3RhdHVzIiwic3RhdGUiLCJtb3VudGVkIiwibWV0aG9kcyIsImdldFN0YXR1cyIsInN0YXRlU3RyIiwic3RhdHVzRW51bSIsIiR0IiwiZ2V0U2VydmljZVN0YXR1cyIsIlNlcnZpY2VTdGF0dXNFbnVtIiwiU0VSVklDRV9TVEFUVVNfQ1JFQVRFX0lEIiwidW5kZWZpbmVkIiwiZ2V0U3RhdHVzQ29sb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThCO0FBQWE7QUFBZ0I7RUFBQywrREFBT0EsQ0FBRSxDQUFDLFNBQVMsRUFBQztJQUFDQyxXQUFXLEVBQWU7SUFBQ0MsS0FBSyxFQUFDO01BQUMsK0JBQVE7SUFBYSxDQUFDO0lBQUNDLFFBQW9CO01BQUNDLEdBQUcsRUFBQyxPQUFPO01BQWM7UUFBQyxPQUFPLENBQUNKLEVBQUUsQ0FBQyxPQUFTO1VBQUNFLEtBQUssRUFBQztZQUFDLE1BQU0sRUFBQyxFQUFFO1lBQUMsT0FBTyx3QkFBRztZQUFDLE1BQW1EO1VBQUM7UUFBQyxDQUFDLEVBQUMsQ0FBQ0csR0FBRyxDQUFDQyxFQUFFLENBQUMsS0FBZTtNQUFBLENBQUM7TUFBQ0MsS0FBTTtJQUFJLENBQUMsQ0FBQztFQUFDLENBQUMsRUFBQyxDQUFDRixFQUF1RjtBQUNqYSxDQUFDO0FBQ0QsSUFBSUcsR0FBb0I7QUFFeEIsU0FBU0MsTUFBTSxFQUFFRCxlQUFlOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ01oQztBQUNBO0FBRUE7RUFDQUUsSUFBQTtFQUNBQyxLQUFBO0lBQ0FDLFVBQUE7TUFDQUMsSUFBQSxFQUFBQyxNQUFBO01BQ0FDLFFBQUE7SUFDQTtFQUNBO0VBQ0FDLElBQUEsV0FBQUEsS0FBQTtJQUFBO01BQ0FDLEtBQUE7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO01BQ0E7SUFDQTtFQUFBO0VBQ0FDLFFBQUEsRUFBQUMsYUFBQSxLQUNBQyxvQ0FBQTtJQUNBQyxhQUFBLFdBQUFBLGNBQUFDLEtBQUE7TUFBQSxPQUFBQSxLQUFBLENBQUFELGFBQUE7SUFBQTtFQUNBLEdBQ0E7RUFDQUUsT0FBQSxXQUFBQSxRQUFBLEdBRUE7RUFDQUMsT0FBQTtJQUNBO0lBQ0FDLFNBQUEsV0FBQUEsVUFBQUMsUUFBQTtNQUNBLElBQUFDLFVBQUE7UUFDQSx5QkFBQUMsRUFBQTtRQUNBLHFCQUFBQSxFQUFBO1FBQ0Esc0JBQUFBLEVBQUE7UUFDQSx5QkFBQUEsRUFBQTtNQUNBO01BRUEsT0FBQUQsVUFBQSxDQUFBRCxRQUFBLFVBQUFHLGdCQUFBLE1BQUFSLGFBQUEsVUFBQU8sRUFBQTtJQUNBO0lBQ0FDLGdCQUFBLFdBQUFBLGlCQUFBUCxLQUFBO01BQ0EsS0FBQUEsS0FBQSxHQUFBUSxtQ0FBQSxDQUFBQyx3QkFBQTtRQUNBLFlBQUFILEVBQUE7TUFDQTtNQUNBLE9BQUFJLFNBQUE7SUFDQTtJQUNBQyxjQUFBLFdBQUFBLGVBQUFQLFFBQUE7TUFDQUEsUUFBQSxHQUFBQSxRQUFBO01BQ0EsWUFBQVQsS0FBQSxDQUFBUyxRQUFBO0lBQ0E7RUFDQTtBQUNBLEc7O0FDN0RzTCxDQUFnQixvSEFBRyxFQUFDLEM7Ozs7O0FDQW5HO0FBQ3ZDO0FBQ0w7OztBQUczRDtBQUMwRjtBQUMxRixnQkFBZ0IsOENBQVU7QUFDMUIsRUFBRSwyQ0FBTTtBQUNSLEVBQUUsNkRBQU07QUFDUixFQUFFLGVBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRWUsOEYiLCJmaWxlIjoiMTkzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpe3ZhciBfdm09dGhpcyxfYz1fdm0uX3NlbGYuX2M7cmV0dXJuIF9jKCd2LWJhZGdlJyx7c3RhdGljQ2xhc3M6XCJicmVhdGhlIG1yLTRcIixhdHRyczp7XCJjb2xvclwiOlwidHJhbnNwYXJlbnRcIn0sc2NvcGVkU2xvdHM6X3ZtLl91KFt7a2V5OlwiYmFkZ2VcIixmbjpmdW5jdGlvbigpe3JldHVybiBbX2MoJ3YtaWNvbicse2F0dHJzOntcImRhcmtcIjpcIlwiLFwic21hbGxcIjpcIlwiLFwiY29sb3JcIjpfdm0uZ2V0U3RhdHVzQ29sb3IoX3ZtLm5vZGVTdGF0dXMuc3luY1N0YXRlKX19LFtfdm0uX3YoXCJmYS1jaXJjbGVcIildKV19LHByb3h5OnRydWV9XSl9LFtfdm0uX3YoXCIgXCIpLF9jKCdzcGFuJyxbX3ZtLl92KFwiIFwiK192bS5fcyhfdm0uZ2V0U3RhdHVzKCBfdm0ubm9kZVN0YXR1cy5zeW5jU3RhdGUpKSldKV0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cbiAgICA8di1iYWRnZSBjb2xvcj1cInRyYW5zcGFyZW50XCIgY2xhc3M9XCJicmVhdGhlIG1yLTRcIj5cbiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpiYWRnZT5cbiAgICAgICAgICAgIDx2LWljb24gZGFyayBzbWFsbCA6Y29sb3I9XCJnZXRTdGF0dXNDb2xvcihub2RlU3RhdHVzLnN5bmNTdGF0ZSlcIj5mYS1jaXJjbGU8L3YtaWNvbj5cbiAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPHNwYW4+IHt7Z2V0U3RhdHVzKCBub2RlU3RhdHVzLnN5bmNTdGF0ZSl9fTwvc3Bhbj5cbiAgICA8L3YtYmFkZ2U+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuICBpbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4J1xuICBpbXBvcnQge1NlcnZpY2VTdGF0dXNFbnVtfSBmcm9tICd+L2hlbHBlcnMvY29uc3RzJ1xuXG4gIGV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiBcIk5vZGVTdGF0dXNcIixcbiAgICBwcm9wczoge1xuICAgICAgbm9kZVN0YXR1czoge1xuICAgICAgICB0eXBlOiBPYmplY3QsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICB9XG4gICAgfSxcbiAgICBkYXRhOiAoKSA9PiAoe1xuICAgICAgY29sb3I6IHtcbiAgICAgICAgJ0RFRkFVTFQnOiAnZ3JleScsXG4gICAgICAgICdXQUlUX0ZPUl9TWU5DSU5HJzogJ3llbGxvdyBhY2NlbnQtMicsXG4gICAgICAgICdTWU5DX1NUQVJURUQnOiAnZ3JlZW4gYWNjZW50LTQnLFxuICAgICAgICAnU1lOQ19GSU5JU0hFRCc6ICdncmVlbiBhY2NlbnQtNCcsXG4gICAgICAgICdQRVJTSVNUX0ZJTklTSEVEJzogJ2dyZWVuIGFjY2VudC00J1xuICAgICAgfVxuICAgIH0pLFxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAuLi5tYXBTdGF0ZSh7XG4gICAgICAgIHNlcnZpY2VTdGF0dXM6IHN0YXRlID0+IHN0YXRlLnNlcnZpY2VTdGF0dXNcbiAgICAgIH0pXG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuXG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAvLyBnZXQgbm9kZSBzdGF0dXNcbiAgICAgIGdldFN0YXR1cyhzdGF0ZVN0cikge1xuICAgICAgICBjb25zdCBzdGF0dXNFbnVtID0ge1xuICAgICAgICAgICdXQUlUX0ZPUl9TWU5DSU5HJzogdGhpcy4kdCgnbm9kZS5zdGF0ZS5XQUlUX0ZPUl9TWU5DSU5HJyksXG4gICAgICAgICAgJ1NZTkNfU1RBUlRFRCc6IHRoaXMuJHQoJ25vZGUuc3RhdGUuU1lOQ19TVEFSVEVEJyksXG4gICAgICAgICAgJ1NZTkNfRklOSVNIRUQnOiB0aGlzLiR0KCdub2RlLnN0YXRlLlNZTkNfRklOSVNIRUQnKSxcbiAgICAgICAgICAnUEVSU0lTVF9GSU5JU0hFRCc6IHRoaXMuJHQoJ25vZGUuc3RhdGUuUEVSU0lTVF9GSU5JU0hFRCcpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3RhdHVzRW51bVtzdGF0ZVN0cl0gfHwgdGhpcy5nZXRTZXJ2aWNlU3RhdHVzKHRoaXMuc2VydmljZVN0YXR1cykgfHwgdGhpcy4kdCgnbm9kZS5zdGF0ZS5ERUZBVUxUJylcbiAgICAgIH0sXG4gICAgICBnZXRTZXJ2aWNlU3RhdHVzKHN0YXRlKSB7XG4gICAgICAgIGlmICgoc3RhdGUgJiBTZXJ2aWNlU3RhdHVzRW51bS5TRVJWSUNFX1NUQVRVU19DUkVBVEVfSUQpID4gMCkge1xuICAgICAgICAgIHJldHVybiB0aGlzLiR0KCdub2RlLnNlcnZpY2VTdGF0dXMuU0VSVklDRV9TVEFUVVNfQ1JFQVRFX0lEJylcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9LFxuICAgICAgZ2V0U3RhdHVzQ29sb3Ioc3RhdGVTdHIpIHtcbiAgICAgICAgc3RhdGVTdHIgPSBzdGF0ZVN0ciB8fCAnREVGQVVMVCdcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sb3Jbc3RhdGVTdHJdXG4gICAgICB9XG4gICAgfVxuICB9XG48L3NjcmlwdD5cblxuPHN0eWxlIHNjb3BlZD5cblxuPC9zdHlsZT5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0wIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vTm9kZVJ1blN0YXR1cy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTAhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Ob2RlUnVuU3RhdHVzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9Ob2RlUnVuU3RhdHVzLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD00MGEwNWQ1MiZzY29wZWQ9dHJ1ZVwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL05vZGVSdW5TdGF0dXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcbmV4cG9ydCAqIGZyb20gXCIuL05vZGVSdW5TdGF0dXMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjQwYTA1ZDUyXCIsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///193\n")},204:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(47);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(46);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(67);\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(37);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(26);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(23);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(36);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(68);\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(33);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(9);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(38);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(50);\n/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(2);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar requestIdleCallback = window.requestIdleCallback || function (cb) {\n  var start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\nvar cancelIdleCallback = window.cancelIdleCallback || function (id) {\n  clearTimeout(id);\n};\nvar observer = window.IntersectionObserver && new window.IntersectionObserver(function (entries) {\n  entries.forEach(function (_ref) {\n    var intersectionRatio = _ref.intersectionRatio,\n      link = _ref.target;\n    if (intersectionRatio <= 0 || !link.__prefetch) {\n      return;\n    }\n    link.__prefetch();\n  });\n});\n/* harmony default export */ __webpack_exports__["a"] = ({\n  name: \'NuxtLink\',\n  extends: vue__WEBPACK_IMPORTED_MODULE_17__[/* default */ "a"].component(\'RouterLink\'),\n  props: {\n    prefetch: {\n      type: Boolean,\n      default: true\n    },\n    noPrefetch: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    if (this.prefetch && !this.noPrefetch) {\n      this.handleId = requestIdleCallback(this.observe, {\n        timeout: 2e3\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    cancelIdleCallback(this.handleId);\n    if (this.__observed) {\n      observer.unobserve(this.$el);\n      delete this.$el.__prefetch;\n    }\n  },\n  methods: {\n    observe: function observe() {\n      // If no IntersectionObserver, avoid prefetching\n      if (!observer) {\n        return;\n      }\n      // Add to observer\n      if (this.shouldPrefetch()) {\n        this.$el.__prefetch = this.prefetchLink.bind(this);\n        observer.observe(this.$el);\n        this.__observed = true;\n      }\n    },\n    shouldPrefetch: function shouldPrefetch() {\n      return this.getPrefetchComponents().length > 0;\n    },\n    canPrefetch: function canPrefetch() {\n      var conn = navigator.connection;\n      var hasBadConnection = this.$nuxt.isOffline || conn && ((conn.effectiveType || \'\').includes(\'2g\') || conn.saveData);\n      return !hasBadConnection;\n    },\n    getPrefetchComponents: function getPrefetchComponents() {\n      var ref = this.$router.resolve(this.to, this.$route, this.append);\n      var Components = ref.resolved.matched.map(function (r) {\n        return r.components.default;\n      });\n      return Components.filter(function (Component) {\n        return typeof Component === \'function\' && !Component.options && !Component.__prefetched;\n      });\n    },\n    prefetchLink: function prefetchLink() {\n      if (!this.canPrefetch()) {\n        return;\n      }\n      // Stop observing this link (in case of internet connection changes)\n      observer.unobserve(this.$el);\n      var Components = this.getPrefetchComponents();\n      var _iterator = _createForOfIteratorHelper(Components),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var Component = _step.value;\n          var componentOrPromise = Component();\n          if (componentOrPromise instanceof Promise) {\n            componentOrPromise.catch(function () {});\n          }\n          Component.__prefetched = true;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///204\n')},255:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _helpers_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35);\n/* harmony import */ var _helpers_consts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(65);\n\n\n\n\n\nvar _state = {\n  token: undefined,\n  unix: Date.now(),\n  beneficiaryAddr: \'\',\n  serviceStatus: _helpers_consts__WEBPACK_IMPORTED_MODULE_4__[/* ServiceStatusEnum */ "a"].SERVICE_STATUS_DEFAULT,\n  allowEmptyBeneficiaryAddress: false,\n  webGuiCreateWallet: false\n};\nvar getters = {\n  beneficiaryAddrRequired: function beneficiaryAddrRequired(state) {\n    return !state.allowEmptyBeneficiaryAddress && state.webGuiCreateWallet;\n  }\n};\nvar mutations = {\n  syncServiceStatus: function syncServiceStatus(state, data) {\n    state.serviceStatus = data.status;\n    state.allowEmptyBeneficiaryAddress = data.allowEmptyBeneficiaryAddress;\n    state.webGuiCreateWallet = data.webGuiCreateWallet;\n    state.beneficiaryAddr = data.beneficiaryAddr;\n  },\n  syncToken: function syncToken(state, data) {\n    state.token = data.token;\n    state.unix = data.unix;\n    console.log("sync service unix: ".concat(state.unix, ", token: ").concat(state.token));\n  },\n  syncUnix: function syncUnix(state, unix) {\n    state.unix = unix;\n    console.log(\'sync service unix: \' + state.unix);\n  },\n  tick: function tick(state) {\n    state.unix++;\n  }\n};\nvar actions = {\n  getServiceStatus: function getServiceStatus(_ref) {\n    var _this = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n            _context.next = 4;\n            return _this.$axios.get(\'/api/sync/status\');\n          case 4:\n            res = _context.sent;\n            commit(\'syncServiceStatus\', res.data);\n            _context.next = 13;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context["catch"](1);\n            if (!(_context.t0.response.status !== 200)) {\n              _context.next = 13;\n              break;\n            }\n            _context.t0.code = _context.t0.response.status;\n            throw _context.t0;\n          case 13:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 8]]);\n    }))();\n  },\n  getToken: function getToken(_ref2) {\n    var _this2 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref2.commit;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _this2.$axios.get(\'/api/sync/token\');\n          case 4:\n            res = _context2.sent;\n            commit(\'syncToken\', res.data);\n            _context2.next = 13;\n            break;\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2["catch"](1);\n            if (!(_context2.t0.response.status !== 200)) {\n              _context2.next = 13;\n              break;\n            }\n            _context2.t0.code = _context2.t0.response.status;\n            throw _context2.t0;\n          case 13:\n          case "end":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 8]]);\n    }))();\n  },\n  getUnix: function getUnix(_ref3) {\n    var _this3 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref3.commit;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _this3.$axios.get(\'/api/sync/unix\');\n          case 4:\n            res = _context3.sent;\n            commit(\'syncUnix\', parseInt(res.data.unix));\n            _context3.next = 13;\n            break;\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3["catch"](1);\n            if (!(_context3.t0.response.status === 400)) {\n              _context3.next = 13;\n              break;\n            }\n            _context3.t0.code = _context3.t0.response.status;\n            throw _context3.t0;\n          case 13:\n          case "end":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 8]]);\n    }))();\n  },\n  verification: function verification(_ref4, payload) {\n    var _this4 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, rootState, res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref4.commit, rootState = _ref4.rootState;\n            _context4.prev = 1;\n            _this4.$axios.setHeader("Authorization", Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* passwordHash */ "e"])(payload, Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* hmacSHA256 */ "d"])(Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* authHash */ "c"])(payload), rootState.token + rootState.unix)));\n            _context4.next = 5;\n            return _this4.$axios.head(\'/api/verification\');\n          case 5:\n            res = _context4.sent;\n            return _context4.abrupt("return", res.data);\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4["catch"](1);\n            if (!(_context4.t0.response.status === 401 || _context4.t0.response.status === 403)) {\n              _context4.next = 14;\n              break;\n            }\n            _context4.t0.code = _context4.t0.response.status;\n            throw _context4.t0;\n          case 14:\n            return _context4.abrupt("return", undefined);\n          case 15:\n          case "end":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[1, 9]]);\n    }))();\n  }\n};\n/* harmony default export */ __webpack_exports__["default"] = ({\n  state: function state() {\n    return _state;\n  },\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///255\n')},256:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(351);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _helpers_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(35);\n\n\n\n\nvar _state = {\n  nodeStatus: {\n    syncState: \'DEFAULT\'\n  },\n  neighbors: []\n};\nvar getters = {\n  inBoundCount: function inBoundCount(state) {\n    if (state.neighbors.length === 0) return undefined;\n    var res = Object(lodash__WEBPACK_IMPORTED_MODULE_2__["countBy"])(state.neighbors, function (item) {\n      return !item.isOutbound;\n    });\n    return res.true || 0;\n  }\n};\nvar mutations = {\n  setNodeStatus: function setNodeStatus(state, node) {\n    if (!!node) {\n      state.nodeStatus = node;\n    }\n  },\n  setBeneficiaryAddr: function setBeneficiaryAddr(state, addr) {\n    state.nodeStatus.beneficiaryAddr = addr;\n  },\n  setNeighbors: function setNeighbors(state, neighbors) {\n    if (Array.isArray(neighbors)) {\n      state.neighbors = neighbors;\n    } else {\n      state.neighbors = [];\n    }\n  }\n};\nvar actions = {\n  getNodeStatus: function getNodeStatus(_ref) {\n    var _this = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n            _context.next = 4;\n            return _this.$axios.get(\'/api/node/status\');\n          case 4:\n            res = _context.sent;\n            commit(\'setNodeStatus\', res.data);\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context["catch"](1);\n            console.log(_context.t0);\n          case 11:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 8]]);\n    }))();\n  },\n  setBeneficiaryAddr: function setBeneficiaryAddr(_ref2, _ref3) {\n    var _this2 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, rootState, password, beneficiaryAddr, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref2.commit, rootState = _ref2.rootState;\n            password = _ref3.password, beneficiaryAddr = _ref3.beneficiaryAddr;\n            _context2.prev = 2;\n            _this2.$axios.setHeader("Authorization", Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* passwordHash */ "e"])(password, Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* hmacSHA256 */ "d"])(Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* authHash */ "c"])(password), rootState.token + rootState.unix)));\n            _context2.next = 6;\n            return _this2.$axios.put(\'/api/node/beneficiary\', {\n              beneficiaryAddr: beneficiaryAddr\n            });\n          case 6:\n            res = _context2.sent;\n            return _context2.abrupt("return", res.data);\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2["catch"](2);\n            if (!(_context2.t0.response.status === 400)) {\n              _context2.next = 15;\n              break;\n            }\n            _context2.t0.code = _context2.t0.response.status;\n            throw _context2.t0;\n          case 15:\n            return _context2.abrupt("return", undefined);\n          case 16:\n          case "end":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[2, 10]]);\n    }))();\n  },\n  setNodeConfig: function setNodeConfig(_ref4, _ref5) {\n    var _this3 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, rootState, password, config, res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref4.commit, rootState = _ref4.rootState;\n            password = _ref5.password, config = _ref5.config;\n            _context3.prev = 2;\n            _this3.$axios.setHeader("Authorization", Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* passwordHash */ "e"])(password, Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* hmacSHA256 */ "d"])(Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_3__[/* authHash */ "c"])(password), rootState.token + rootState.unix)));\n            _context3.next = 6;\n            return _this3.$axios.put(\'/api/node/config\', config);\n          case 6:\n            res = _context3.sent;\n            return _context3.abrupt("return", res.data);\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3["catch"](2);\n            if (!(_context3.t0.response.status === 400)) {\n              _context3.next = 15;\n              break;\n            }\n            _context3.t0.code = _context3.t0.response.status;\n            throw _context3.t0;\n          case 15:\n            return _context3.abrupt("return", undefined);\n          case 16:\n          case "end":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[2, 10]]);\n    }))();\n  },\n  getNeighbors: function getNeighbors(_ref6) {\n    var _this4 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref6.commit;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _this4.$axios.get(\'/api/node/neighbors\');\n          case 4:\n            res = _context4.sent;\n            commit(\'setNeighbors\', res.data);\n            return _context4.abrupt("return", res.data);\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4["catch"](1);\n            throw _context4.t0;\n          case 12:\n          case "end":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[1, 9]]);\n    }))();\n  }\n};\n/* harmony default export */ __webpack_exports__["default"] = ({\n  namespaced: true,\n  state: function state() {\n    return _state;\n  },\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///256\n')},257:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(527);\n/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(241);\n/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(75);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _helpers_crypto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(35);\n/* harmony import */ var _helpers_consts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(65);\n\n\n\n\n\n\n\n\n\nvar _state = {\n  currentWalletStatus: {}\n};\nvar getters = {};\nvar mutations = {\n  setCurrentWalletStatus: function setCurrentWalletStatus(state, wallet) {\n    if (!!wallet) {\n      state.currentWalletStatus = wallet;\n    }\n  }\n};\nvar actions = {\n  getCurrentWalletStatus: function getCurrentWalletStatus(_ref) {\n    var _this = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref.commit;\n            _context.prev = 1;\n            _context.next = 4;\n            return _this.$axios.get(\'/api/current-wallet/status\');\n          case 4:\n            res = _context.sent;\n            commit(\'setCurrentWalletStatus\', res.data);\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context["catch"](1);\n            console.log(_context.t0);\n          case 11:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 8]]);\n    }))();\n  },\n  getCurrentWalletDetails: function getCurrentWalletDetails(_ref2, payload) {\n    var _this2 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, rootState, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            commit = _ref2.commit, rootState = _ref2.rootState;\n            _context2.prev = 1;\n            _this2.$axios.setHeader("Authorization", Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* passwordHash */ "e"])(payload, Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* hmacSHA256 */ "d"])(Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* authHash */ "c"])(payload), rootState.token + rootState.unix)));\n            _context2.next = 5;\n            return _this2.$axios.get(\'/api/current-wallet/details\');\n          case 5:\n            res = _context2.sent;\n            return _context2.abrupt("return", res.data);\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2["catch"](1);\n            if (!(_context2.t0.response.status === 401 || _context2.t0.response.status === 403)) {\n              _context2.next = 14;\n              break;\n            }\n            _context2.t0.code = _context2.t0.response.status;\n            throw _context2.t0;\n          case 14:\n            return _context2.abrupt("return", undefined);\n          case 15:\n          case "end":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 9]]);\n    }))();\n  },\n  createWallet: function createWallet(_ref3, _ref4) {\n    var _this3 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, rootState, password, beneficiaryAddr, res;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            commit = _ref3.commit, rootState = _ref3.rootState;\n            password = _ref4.password, beneficiaryAddr = _ref4.beneficiaryAddr;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _this3.$axios.post(\'/api/wallet/create\', {\n              password: password,\n              beneficiaryAddr: beneficiaryAddr\n            });\n          case 5:\n            res = _context3.sent;\n            sessionStorage.setItem(\'seed\', Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* seedHash */ "f"])(password));\n            commit(\'syncServiceStatus\', {\n              status: _helpers_consts__WEBPACK_IMPORTED_MODULE_8__[/* ServiceStatusEnum */ "a"].SERVICE_STATUS_RUNNING\n            }, {\n              root: true\n            });\n            return _context3.abrupt("return", res.data);\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3["catch"](2);\n            if (!(_context3.t0.response.status === 400)) {\n              _context3.next = 16;\n              break;\n            }\n            _context3.t0.code = _context3.t0.response.status;\n            throw _context3.t0;\n          case 16:\n          case "end":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[2, 11]]);\n    }))();\n  },\n  openWallet: function openWallet(_ref5, payload) {\n    var _this4 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var commit, rootState, res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            commit = _ref5.commit, rootState = _ref5.rootState;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _this4.$axios.post(\'/api/wallet/open\', {\n              password: payload\n            });\n          case 4:\n            res = _context4.sent;\n            sessionStorage.setItem(\'seed\', Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* seedHash */ "f"])(payload));\n            commit(\'syncServiceStatus\', {\n              status: _helpers_consts__WEBPACK_IMPORTED_MODULE_8__[/* ServiceStatusEnum */ "a"].SERVICE_STATUS_RUNNING\n            }, {\n              root: true\n            });\n            return _context4.abrupt("return", res.data);\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4["catch"](1);\n            if (!(_context4.t0.response.status === 401 || _context4.t0.response.status === 403)) {\n              _context4.next = 15;\n              break;\n            }\n            _context4.t0.code = _context4.t0.response.status;\n            throw _context4.t0;\n          case 15:\n            return _context4.abrupt("return", undefined);\n          case 16:\n          case "end":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[1, 10]]);\n    }))();\n  },\n  downloadWallet: function downloadWallet(_ref6, payload) {\n    var _this5 = this;\n    return Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var commit, rootState, res, blob, downloadElement, href;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            commit = _ref6.commit, rootState = _ref6.rootState;\n            _context5.prev = 1;\n            _this5.$axios.setHeader("Authorization", Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* passwordHash */ "e"])(payload, Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* hmacSHA256 */ "d"])(Object(_helpers_crypto__WEBPACK_IMPORTED_MODULE_7__[/* authHash */ "c"])(payload), rootState.token + rootState.unix)));\n            _context5.next = 5;\n            return _this5.$axios.get(\'/api/wallet/download\');\n          case 5:\n            res = _context5.sent;\n            blob = new Blob([JSON.stringify(res.data)], {\n              type: res.headers[\'content-type\']\n            });\n            downloadElement = document.createElement(\'a\');\n            href = window.URL.createObjectURL(blob);\n            downloadElement.href = href;\n            downloadElement.download = \'wallet.json\';\n            document.body.appendChild(downloadElement);\n            downloadElement.click();\n            document.body.removeChild(downloadElement);\n            window.URL.revokeObjectURL(href);\n            _context5.next = 20;\n            break;\n          case 17:\n            _context5.prev = 17;\n            _context5.t0 = _context5["catch"](1);\n            throw _context5.t0;\n          case 20:\n          case "end":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[1, 17]]);\n    }))();\n  }\n};\n/* harmony default export */ __webpack_exports__["default"] = ({\n  namespaced: true,\n  state: function state() {\n    return _state;\n  },\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///257\n')},264:function(module,exports,__webpack_require__){eval("var _asyncToGenerator = __webpack_require__(545);\n__webpack_require__(75);\n__webpack_require__(3);\n__webpack_require__(33);\n__webpack_require__(38);\nfunction register() {\n  return _register.apply(this, arguments);\n}\nfunction _register() {\n  _register = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var _yield$import, Workbox, workbox;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!'serviceWorker' in navigator)) {\n            _context.next = 2;\n            break;\n          }\n          throw new Error('serviceWorker is not supported in current browser!');\n        case 2:\n          _context.next = 4;\n          return __webpack_require__.e(/* import() */ 18).then(__webpack_require__.bind(null, 598));\n        case 4:\n          _yield$import = _context.sent;\n          Workbox = _yield$import.Workbox;\n          workbox = new Workbox('/web/sw.js', {\n            scope: '/web/'\n          });\n          _context.next = 9;\n          return workbox.register();\n        case 9:\n          return _context.abrupt(\"return\", workbox);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _register.apply(this, arguments);\n}\nwindow.$workbox = register().catch(function (error) {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi8ubnV4dC93b3JrYm94LmpzPzE0OGIiXSwibmFtZXMiOlsicmVnaXN0ZXIiLCJfcmVnaXN0ZXIiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yIiwicmVnZW5lcmF0b3JSdW50aW1lIiwibWFyayIsIl9jYWxsZWUiLCJfeWllbGQkaW1wb3J0IiwiV29ya2JveCIsIndvcmtib3giLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwibmF2aWdhdG9yIiwiRXJyb3IiLCJzZW50Iiwic2NvcGUiLCJhYnJ1cHQiLCJzdG9wIiwid2luZG93IiwiJHdvcmtib3giLCJjYXRjaCIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7OztTQUFlQSxRQUFRQSxDQUFBO0VBQUEsT0FBQUMsU0FBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7QUFBQTtBQUFBLFNBQUFGLFVBQUE7RUFBQUEsU0FBQSxHQUFBRyxpQkFBQSxlQUFBQyxrQkFBQSxDQUFBQyxJQUFBLENBQXZCLFNBQUFDLFFBQUE7SUFBQSxJQUFBQyxhQUFBLEVBQUFDLE9BQUEsRUFBQUMsT0FBQTtJQUFBLE9BQUFMLGtCQUFBLENBQUFNLElBQUEsVUFBQUMsU0FBQUMsUUFBQTtNQUFBLGtCQUFBQSxRQUFBLENBQUFDLElBQUEsR0FBQUQsUUFBQSxDQUFBRSxJQUFBO1FBQUE7VUFBQSxNQUNNLENBQUMsZUFBZSxJQUFJQyxTQUFTO1lBQUFILFFBQUEsQ0FBQUUsSUFBQTtZQUFBO1VBQUE7VUFBQSxNQUN6QixJQUFJRSxLQUFLLENBQUMsb0RBQW9ELENBQUM7UUFBQTtVQUFBSixRQUFBLENBQUFFLElBQUE7VUFBQSxPQUc3QyxrRkFBeUQ7UUFBQTtVQUFBUCxhQUFBLEdBQUFLLFFBQUEsQ0FBQUssSUFBQTtVQUEzRVQsT0FBTyxHQUFBRCxhQUFBLENBQVBDLE9BQU87VUFFVEMsT0FBTyxHQUFHLElBQUlELE9BQU8sQ0FBQyxZQUFZLEVBQUU7WUFDeENVLEtBQUssRUFBRTtVQUNULENBQUMsQ0FBQztVQUFBTixRQUFBLENBQUFFLElBQUE7VUFBQSxPQUVJTCxPQUFPLENBQUNWLFFBQVEsQ0FBQyxDQUFDO1FBQUE7VUFBQSxPQUFBYSxRQUFBLENBQUFPLE1BQUEsV0FFakJWLE9BQU87UUFBQTtRQUFBO1VBQUEsT0FBQUcsUUFBQSxDQUFBUSxJQUFBO01BQUE7SUFBQSxHQUFBZCxPQUFBO0VBQUEsQ0FDZjtFQUFBLE9BQUFOLFNBQUEsQ0FBQUMsS0FBQSxPQUFBQyxTQUFBO0FBQUE7QUFFRG1CLE1BQU0sQ0FBQ0MsUUFBUSxHQUFHdkIsUUFBUSxDQUFDLENBQUMsQ0FDekJ3QixLQUFLLENBQUMsVUFBQUMsS0FBSyxFQUFJLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6IjI2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKCkge1xuICBpZiAoISdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NlcnZpY2VXb3JrZXIgaXMgbm90IHN1cHBvcnRlZCBpbiBjdXJyZW50IGJyb3dzZXIhJylcbiAgfVxuXG4gIGNvbnN0IHsgV29ya2JveCB9ID0gYXdhaXQgaW1wb3J0KCd3b3JrYm94LWNkbi93b3JrYm94L3dvcmtib3gtd2luZG93LnByb2QuZXM1Lm1qcycpXG5cbiAgY29uc3Qgd29ya2JveCA9IG5ldyBXb3JrYm94KCcvd2ViL3N3LmpzJywge1xuICAgIHNjb3BlOiAnL3dlYi8nXG4gIH0pXG5cbiAgYXdhaXQgd29ya2JveC5yZWdpc3RlcigpXG5cbiAgcmV0dXJuIHdvcmtib3hcbn1cblxud2luZG93LiR3b3JrYm94ID0gcmVnaXN0ZXIoKVxuICAuY2F0Y2goZXJyb3IgPT4ge30pXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///264\n")},323:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(430);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(20).default\nvar update = add(\"6232fb83\", content, true, {\"sourceMap\":false});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9sYXlvdXRzL2Vycm9yLnZ1ZT84YTNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLEdBQXdUO0FBQzlVO0FBQ0EsNENBQTRDLFFBQVM7QUFDckQ7QUFDQTtBQUNBLFVBQVUsbUJBQU8sQ0FBQyxFQUEwRDtBQUM1RSw2Q0FBNkMsa0JBQWtCIiwiZmlsZSI6IjMyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLW9uZU9mLTEtMSEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTMtb25lT2YtMS0yIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZXJyb3IudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MzJjNDFjNTAmcHJvZCZzY29wZWQ9dHJ1ZSZsYW5nPWNzc1wiKTtcbmlmKGNvbnRlbnQuX19lc01vZHVsZSkgY29udGVudCA9IGNvbnRlbnQuZGVmYXVsdDtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI2MjMyZmI4M1wiLCBjb250ZW50LCB0cnVlLCB7XCJzb3VyY2VNYXBcIjpmYWxzZX0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///323\n")},328:function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "img/logo.ca5a2e3.png";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdGF0aWMvaW1nL2xvZ28ucG5nPzI3MDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLHFCQUF1QiIsImZpbGUiOiIzMjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWcvbG9nby5jYTVhMmUzLnBuZ1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///328\n')},333:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(498);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(20).default\nvar update = add(\"52ccf43a\", content, true, {\"sourceMap\":false});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvc3RhdHVzLnNjc3M/YzM2NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUFpTTtBQUN2TjtBQUNBLDRDQUE0QyxRQUFTO0FBQ3JEO0FBQ0E7QUFDQSxVQUFVLG1CQUFPLENBQUMsRUFBMEQ7QUFDNUUsNkNBQTZDLGtCQUFrQiIsImZpbGUiOiIzMzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNy1vbmVPZi0xLTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTctb25lT2YtMS0yIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS03LW9uZU9mLTEtMyEuL3N0YXR1cy5zY3NzXCIpO1xuaWYoY29udGVudC5fX2VzTW9kdWxlKSBjb250ZW50ID0gY29udGVudC5kZWZhdWx0O1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjUyY2NmNDNhXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlfSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///333\n")},35:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return hmacSHA256; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return seedHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return authHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return passwordHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return aesDecrypt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return aesEncrypt; });\n/* unused harmony export cryptoHexStringParse */\n/* unused harmony export sha224 */\n/* unused harmony export sha224Hex */\n/* unused harmony export sha256 */\n/* unused harmony export sha256Hex */\n/* unused harmony export doubleSha256 */\n/* unused harmony export doubleSha256Hex */\n/* unused harmony export tripleSha256 */\n/* unused harmony export tripleSha256Hex */\n/* unused harmony export ripemd160 */\n/* unused harmony export ripemd160Hex */\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(25);\n/* harmony import */ var crypto_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction hmacSHA256(message, secret) {\n  secret = secret || message;\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.HmacSHA256(message, secret).toString();\n}\nfunction seedHash(password) {\n  return sha256(tripleSha256(password));\n}\nfunction authHash(password) {\n  return sha224(tripleSha256(password));\n}\nfunction passwordHash(password, secret) {\n  var passwordHash = sha224(tripleSha256(password));\n  return aesEncrypt(passwordHash, secret);\n}\nfunction aesDecrypt(ciphertext, prikey) {\n  var key = hmacSHA256(prikey, prikey);\n  var iv = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Hex.parse(key.slice(0, 32));\n  key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Hex.parse(key);\n  var encryptedHexStr = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Hex.parse(ciphertext);\n  var srcs = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Base64.stringify(encryptedHexStr);\n  var decrypt = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.AES.decrypt(srcs, key, {\n    iv: iv,\n    mode: crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.mode.CFB,\n    padding: crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.pad.NoPadding\n  });\n  return decrypt.toString(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Utf8);\n}\nfunction aesEncrypt(plaintext, prikey) {\n  var srcs = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Utf8.parse(plaintext);\n  var key = hmacSHA256(prikey, prikey);\n  var iv = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Hex.parse(key.slice(0, 32));\n  key = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Hex.parse(key);\n  var encrypted = crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.AES.encrypt(srcs, key, {\n    iv: iv,\n    mode: crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.mode.CFB,\n    padding: crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.pad.NoPadding\n  });\n  return encrypted.ciphertext.toString();\n}\nfunction cryptoHexStringParse(hexString) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.enc.Hex.parse(hexString);\n}\nfunction sha224(str) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA224(str).toString();\n}\nfunction sha224Hex(hexStr) {\n  return sha224(cryptoHexStringParse(hexStr));\n}\nfunction sha256(str) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(str).toString();\n}\nfunction sha256Hex(hexStr) {\n  return sha256(cryptoHexStringParse(hexStr));\n}\nfunction doubleSha256(str) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(str)).toString();\n}\nfunction doubleSha256Hex(hexStr) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(cryptoHexStringParse(hexStr))).toString();\n}\nfunction tripleSha256(str) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(str))).toString();\n}\nfunction tripleSha256Hex(hexStr) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.SHA256(cryptoHexStringParse(hexStr)))).toString();\n}\nfunction ripemd160(str) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.RIPEMD160(str).toString();\n}\nfunction ripemd160Hex(hexStr) {\n  return crypto_js__WEBPACK_IMPORTED_MODULE_3___default.a.RIPEMD160(cryptoHexStringParse(hexStr)).toString();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///35\n')},352:function(module){eval('module.exports = JSON.parse("{\\"title\\":\\"nkn-web\\",\\"meta\\":[{\\"hid\\":\\"charset\\",\\"charset\\":\\"utf-8\\"},{\\"hid\\":\\"viewport\\",\\"name\\":\\"viewport\\",\\"content\\":\\"width=device-width, initial-scale=1\\"},{\\"hid\\":\\"mobile-web-app-capable\\",\\"name\\":\\"mobile-web-app-capable\\",\\"content\\":\\"yes\\"},{\\"hid\\":\\"apple-mobile-web-app-title\\",\\"name\\":\\"apple-mobile-web-app-title\\",\\"content\\":\\"nkn-web\\"},{\\"hid\\":\\"author\\",\\"name\\":\\"author\\",\\"content\\":\\"heron\\"},{\\"hid\\":\\"description\\",\\"name\\":\\"description\\",\\"content\\":\\"nkn-web\\"},{\\"hid\\":\\"og:type\\",\\"name\\":\\"og:type\\",\\"property\\":\\"og:type\\",\\"content\\":\\"website\\"},{\\"hid\\":\\"og:title\\",\\"name\\":\\"og:title\\",\\"property\\":\\"og:title\\",\\"content\\":\\"nkn-web\\"},{\\"hid\\":\\"og:site_name\\",\\"name\\":\\"og:site_name\\",\\"property\\":\\"og:site_name\\",\\"content\\":\\"nkn-web\\"},{\\"hid\\":\\"og:description\\",\\"name\\":\\"og:description\\",\\"property\\":\\"og:description\\",\\"content\\":\\"nkn-web\\"}],\\"link\\":[{\\"hid\\":\\"shortcut-icon\\",\\"rel\\":\\"shortcut icon\\",\\"href\\":\\"/web/favicon.ico\\"},{\\"rel\\":\\"manifest\\",\\"href\\":\\"/web/_nuxt/manifest.fecaf0ed.json\\",\\"hid\\":\\"manifest\\"}],\\"htmlAttrs\\":{\\"lang\\":\\"en\\"}}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIzNTIuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///352\n')},354:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50);\n/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6);\n\n\n\n\n\n\nvar isSsrHydration = function isSsrHydration(vm) {\n  return vm.$vnode && vm.$vnode.elm && vm.$vnode.elm.dataset && vm.$vnode.elm.dataset.fetchKey;\n};\nvar nuxtState = window.__NUXT__;\n/* harmony default export */ __webpack_exports__["a"] = ({\n  beforeCreate: function beforeCreate() {\n    if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[/* hasFetch */ "l"])(this)) {\n      return;\n    }\n    this._fetchDelay = typeof this.$options.fetchDelay === \'number\' ? this.$options.fetchDelay : 200;\n    vue__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"].util.defineReactive(this, \'$fetchState\', {\n      pending: false,\n      error: null,\n      timestamp: Date.now()\n    });\n    this.$fetch = $fetch.bind(this);\n    Object(_utils__WEBPACK_IMPORTED_MODULE_5__[/* addLifecycleHook */ "a"])(this, \'created\', created);\n    Object(_utils__WEBPACK_IMPORTED_MODULE_5__[/* addLifecycleHook */ "a"])(this, \'beforeMount\', beforeMount);\n  }\n});\nfunction beforeMount() {\n  if (!this._hydrated) {\n    return this.$fetch();\n  }\n}\nfunction created() {\n  if (!isSsrHydration(this)) {\n    return;\n  }\n\n  // Hydrate component\n  this._hydrated = true;\n  this._fetchKey = this.$vnode.elm.dataset.fetchKey;\n  var data = nuxtState.fetch[this._fetchKey];\n\n  // If fetch error\n  if (data && data._error) {\n    this.$fetchState.error = data._error;\n    return;\n  }\n\n  // Merge data\n  for (var key in data) {\n    vue__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"].set(this.$data, key, data[key]);\n  }\n}\nfunction $fetch() {\n  var _this = this;\n  if (!this._fetchPromise) {\n    this._fetchPromise = $_fetch.call(this).then(function () {\n      delete _this._fetchPromise;\n    });\n  }\n  return this._fetchPromise;\n}\nfunction $_fetch() {\n  return _$_fetch.apply(this, arguments);\n}\nfunction _$_fetch() {\n  _$_fetch = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var _this2 = this;\n    var error, startTime, delayLeft;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          this.$nuxt.nbFetching++;\n          this.$fetchState.pending = true;\n          this.$fetchState.error = null;\n          this._hydrated = false;\n          error = null;\n          startTime = Date.now();\n          _context.prev = 6;\n          _context.next = 9;\n          return this.$options.fetch.call(this);\n        case 9:\n          _context.next = 15;\n          break;\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context["catch"](6);\n          if (false) {}\n          error = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[/* normalizeError */ "p"])(_context.t0);\n        case 15:\n          delayLeft = this._fetchDelay - (Date.now() - startTime);\n          if (!(delayLeft > 0)) {\n            _context.next = 19;\n            break;\n          }\n          _context.next = 19;\n          return new Promise(function (resolve) {\n            return setTimeout(resolve, delayLeft);\n          });\n        case 19:\n          this.$fetchState.error = error;\n          this.$fetchState.pending = false;\n          this.$fetchState.timestamp = Date.now();\n          this.$nextTick(function () {\n            return _this2.$nuxt.nbFetching--;\n          });\n        case 23:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee, this, [[6, 11]]);\n  }));\n  return _$_fetch.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///354\n')},376:function(Q,U,F){Q.exports=F(377)},377:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(214);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(384);\n/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(396);\n/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_promise_finally_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(397);\n/* harmony import */ var core_js_modules_es_promise_finally_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_finally_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(75);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(7);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(48);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(51);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(29);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(10);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(47);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(46);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(67);\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(37);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(26);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(8);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(23);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(36);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(68);\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(33);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(9);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(38);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(50);\n/* harmony import */ var core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_timers_js__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(2);\n/* harmony import */ var unfetch__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(348);\n/* harmony import */ var _middleware_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(162);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(6);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(97);\n/* harmony import */ var _mixins_fetch_client__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(354);\n/* harmony import */ var _components_nuxt_link_client_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(204);\n\n\n\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // should be included after ./index.js\n\n// Fetch mixin\nif (!vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].__nuxt__fetch__mixin__) {\n  vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].mixin(_mixins_fetch_client__WEBPACK_IMPORTED_MODULE_31__[/* default */ "a"]);\n  vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].__nuxt__fetch__mixin__ = true;\n}\n\n// Component: <NuxtLink>\nvue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].component(_components_nuxt_link_client_js__WEBPACK_IMPORTED_MODULE_32__[/* default */ "a"].name, _components_nuxt_link_client_js__WEBPACK_IMPORTED_MODULE_32__[/* default */ "a"]);\nvue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].component(\'NLink\', _components_nuxt_link_client_js__WEBPACK_IMPORTED_MODULE_32__[/* default */ "a"]);\nif (!global.fetch) {\n  global.fetch = unfetch__WEBPACK_IMPORTED_MODULE_27__[/* default */ "a"];\n}\n\n// Global shared references\nvar _lastPaths = [];\nvar app;\nvar router;\nvar store;\n\n// Try to rehydrate SSR data from window\nvar NUXT = window.__NUXT__ || {};\nvar $config = NUXT.config || {};\nif ($config._app) {\n  __webpack_require__.p = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* urlJoin */ "v"])($config._app.cdnURL, $config._app.assetsPath);\n}\nObject.assign(vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].config, {\n  "silent": true,\n  "performance": false\n});\nvar errorHandler = vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].config.errorHandler || console.error;\n\n// Create and mount App\nObject(_index_js__WEBPACK_IMPORTED_MODULE_30__[/* createApp */ "b"])(null, NUXT.config).then(mountApp).catch(errorHandler);\nfunction componentOption(component, key) {\n  if (!component || !component.options || !component.options[key]) {\n    return {};\n  }\n  var option = component.options[key];\n  if (typeof option === \'function\') {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return option.apply(void 0, args);\n  }\n  return option;\n}\nfunction mapTransitions(toComponents, to, from) {\n  var componentTransitions = function componentTransitions(component) {\n    var transition = componentOption(component, \'transition\', to, from) || {};\n    return typeof transition === \'string\' ? {\n      name: transition\n    } : transition;\n  };\n  var fromComponents = from ? Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getMatchedComponents */ "g"])(from) : [];\n  var maxDepth = Math.max(toComponents.length, fromComponents.length);\n  var mergedTransitions = [];\n  var _loop = function _loop() {\n    // Clone original objects to prevent overrides\n    var toTransitions = Object.assign({}, componentTransitions(toComponents[i]));\n    var transitions = Object.assign({}, componentTransitions(fromComponents[i]));\n\n    // Combine transitions & prefer `leave` properties of "from" route\n    Object.keys(toTransitions).filter(function (key) {\n      return typeof toTransitions[key] !== \'undefined\' && !key.toLowerCase().includes(\'leave\');\n    }).forEach(function (key) {\n      transitions[key] = toTransitions[key];\n    });\n    mergedTransitions.push(transitions);\n  };\n  for (var i = 0; i < maxDepth; i++) {\n    _loop();\n  }\n  return mergedTransitions;\n}\nfunction loadAsyncComponents(_x, _x2, _x3) {\n  return _loadAsyncComponents.apply(this, arguments);\n}\nfunction _loadAsyncComponents() {\n  _loadAsyncComponents = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(to, from, next) {\n    var _this3 = this;\n    var Components, startLoader, err, statusCode, message;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          // Check if route changed (this._routeChanged), only if the page is not an error (for validate())\n          this._routeChanged = Boolean(app.nuxt.err) || from.name !== to.name;\n          this._paramChanged = !this._routeChanged && from.path !== to.path;\n          this._queryChanged = !this._paramChanged && from.fullPath !== to.fullPath;\n          this._diffQuery = this._queryChanged ? Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getQueryDiff */ "i"])(to.query, from.query) : [];\n          _context2.prev = 4;\n          if (!this._queryChanged) {\n            _context2.next = 10;\n            break;\n          }\n          _context2.next = 8;\n          return Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* resolveRouteComponents */ "r"])(to, function (Component, instance) {\n            return {\n              Component: Component,\n              instance: instance\n            };\n          });\n        case 8:\n          Components = _context2.sent;\n          // Add a marker on each component that it needs to refresh or not\n          startLoader = Components.some(function (_ref2) {\n            var Component = _ref2.Component,\n              instance = _ref2.instance;\n            var watchQuery = Component.options.watchQuery;\n            if (watchQuery === true) {\n              return true;\n            }\n            if (Array.isArray(watchQuery)) {\n              return watchQuery.some(function (key) {\n                return _this3._diffQuery[key];\n              });\n            }\n            if (typeof watchQuery === \'function\') {\n              return watchQuery.apply(instance, [to.query, from.query]);\n            }\n            return false;\n          });\n        case 10:\n          // Call next()\n          next();\n          _context2.next = 24;\n          break;\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2["catch"](4);\n          err = _context2.t0 || {};\n          statusCode = err.statusCode || err.status || err.response && err.response.status || 500;\n          message = err.message || \'\'; // Handle chunk loading errors\n          // This may be due to a new deployment or a network problem\n          if (!/^Loading( CSS)? chunk (\\d)+ failed\\./.test(message)) {\n            _context2.next = 21;\n            break;\n          }\n          window.location.reload(true /* skip cache */);\n          return _context2.abrupt("return");\n        case 21:\n          this.error({\n            statusCode: statusCode,\n            message: message\n          });\n          this.$nuxt.$emit(\'routeChanged\', to, from, err);\n          next();\n        case 24:\n        case "end":\n          return _context2.stop();\n      }\n    }, _callee2, this, [[4, 13]]);\n  }));\n  return _loadAsyncComponents.apply(this, arguments);\n}\nfunction applySSRData(Component, ssrData) {\n  if (NUXT.serverRendered && ssrData) {\n    Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* applyAsyncData */ "b"])(Component, ssrData);\n  }\n  Component._Ctor = Component;\n  return Component;\n}\n\n// Get matched components\nfunction resolveComponents(route) {\n  return Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* flatMapComponents */ "d"])(route, /*#__PURE__*/function () {\n    var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(Component, _, match, key, index) {\n      var _Component;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof Component === \'function\' && !Component.options)) {\n              _context.next = 4;\n              break;\n            }\n            _context.next = 3;\n            return Component();\n          case 3:\n            Component = _context.sent;\n          case 4:\n            // Sanitize it and save it\n            _Component = applySSRData(Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* sanitizeComponent */ "s"])(Component), NUXT.data ? NUXT.data[index] : null);\n            match.components[key] = _Component;\n            return _context.abrupt("return", _Component);\n          case 7:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x4, _x5, _x6, _x7, _x8) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\nfunction callMiddleware(Components, context, layout, renderState) {\n  var _this = this;\n  var midd = ["nuxti18n"];\n  var unknownMiddleware = false;\n\n  // If layout is undefined, only call global middleware\n  if (typeof layout !== \'undefined\') {\n    midd = []; // Exclude global middleware if layout defined (already called before)\n    layout = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* sanitizeComponent */ "s"])(layout);\n    if (layout.options.middleware) {\n      midd = midd.concat(layout.options.middleware);\n    }\n    Components.forEach(function (Component) {\n      if (Component.options.middleware) {\n        midd = midd.concat(Component.options.middleware);\n      }\n    });\n  }\n  midd = midd.map(function (name) {\n    if (typeof name === \'function\') {\n      return name;\n    }\n    if (typeof _middleware_js__WEBPACK_IMPORTED_MODULE_28__[/* default */ "a"][name] !== \'function\') {\n      unknownMiddleware = true;\n      _this.error({\n        statusCode: 500,\n        message: \'Unknown middleware \' + name\n      });\n    }\n    return _middleware_js__WEBPACK_IMPORTED_MODULE_28__[/* default */ "a"][name];\n  });\n  if (unknownMiddleware) {\n    return;\n  }\n  return Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* middlewareSeries */ "o"])(midd, context, renderState);\n}\nfunction render(_x9, _x10, _x11, _x12) {\n  return _render.apply(this, arguments);\n} // Fix components format in matched, it\'s due to code-splitting of vue-router\nfunction _render() {\n  _render = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(to, from, next, renderState) {\n    var _this4 = this;\n    var spaFallback, fromMatches, nextCalled, _next, matches, Components, errorLayout, layout, _layout, isValid, _iterator, _step, Component, instances, error, _layout2;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!(this._routeChanged === false && this._paramChanged === false && this._queryChanged === false)) {\n            _context4.next = 2;\n            break;\n          }\n          return _context4.abrupt("return", next());\n        case 2:\n          // Handle first render on SPA mode\n          spaFallback = false;\n          if (to === from) {\n            _lastPaths = [];\n            spaFallback = true;\n          } else {\n            fromMatches = [];\n            _lastPaths = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getMatchedComponents */ "g"])(from, fromMatches).map(function (Component, i) {\n              return Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* compile */ "c"])(from.matched[fromMatches[i]].path)(from.params);\n            });\n          }\n\n          // nextCalled is true when redirected\n          nextCalled = false;\n          _next = function _next(path) {\n            if (nextCalled) {\n              return;\n            }\n            nextCalled = true;\n            next(path);\n          }; // Update context\n          _context4.next = 8;\n          return Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* setContext */ "t"])(app, {\n            route: to,\n            from: from,\n            error: function error(err) {\n              if (renderState.aborted) {\n                return;\n              }\n              app.nuxt.error.call(_this4, err);\n            },\n            next: _next.bind(this)\n          });\n        case 8:\n          this._dateLastError = app.nuxt.dateErr;\n          this._hadError = Boolean(app.nuxt.err);\n\n          // Get route\'s matched components\n          matches = [];\n          Components = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getMatchedComponents */ "g"])(to, matches); // If no Components matched, generate 404\n          if (Components.length) {\n            _context4.next = 33;\n            break;\n          }\n          _context4.next = 15;\n          return callMiddleware.call(this, Components, app.context, undefined, renderState);\n        case 15:\n          if (!nextCalled) {\n            _context4.next = 17;\n            break;\n          }\n          return _context4.abrupt("return");\n        case 17:\n          if (!renderState.aborted) {\n            _context4.next = 20;\n            break;\n          }\n          next(false);\n          return _context4.abrupt("return");\n        case 20:\n          // Load layout for error page\n          errorLayout = (_index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"].options || _index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"]).layout;\n          _context4.next = 23;\n          return this.loadLayout(typeof errorLayout === \'function\' ? errorLayout.call(_index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"], app.context) : errorLayout);\n        case 23:\n          layout = _context4.sent;\n          _context4.next = 26;\n          return callMiddleware.call(this, Components, app.context, layout, renderState);\n        case 26:\n          if (!nextCalled) {\n            _context4.next = 28;\n            break;\n          }\n          return _context4.abrupt("return");\n        case 28:\n          if (!renderState.aborted) {\n            _context4.next = 31;\n            break;\n          }\n          next(false);\n          return _context4.abrupt("return");\n        case 31:\n          // Show error page\n          app.context.error({\n            statusCode: 404,\n            message: \'This page could not be found\'\n          });\n          return _context4.abrupt("return", next());\n        case 33:\n          // Update ._data and other properties if hot reloaded\n          Components.forEach(function (Component) {\n            if (Component._Ctor && Component._Ctor.options) {\n              Component.options.asyncData = Component._Ctor.options.asyncData;\n              Component.options.fetch = Component._Ctor.options.fetch;\n            }\n          });\n\n          // Apply transitions\n          this.setTransitions(mapTransitions(Components, to, from));\n          _context4.prev = 35;\n          _context4.next = 38;\n          return callMiddleware.call(this, Components, app.context, undefined, renderState);\n        case 38:\n          if (!nextCalled) {\n            _context4.next = 40;\n            break;\n          }\n          return _context4.abrupt("return");\n        case 40:\n          if (!renderState.aborted) {\n            _context4.next = 43;\n            break;\n          }\n          next(false);\n          return _context4.abrupt("return");\n        case 43:\n          if (!app.context._errored) {\n            _context4.next = 45;\n            break;\n          }\n          return _context4.abrupt("return", next());\n        case 45:\n          // Set layout\n          _layout = Components[0].options.layout;\n          if (typeof _layout === \'function\') {\n            _layout = _layout(app.context);\n          }\n          _context4.next = 49;\n          return this.loadLayout(_layout);\n        case 49:\n          _layout = _context4.sent;\n          _context4.next = 52;\n          return callMiddleware.call(this, Components, app.context, _layout, renderState);\n        case 52:\n          if (!nextCalled) {\n            _context4.next = 54;\n            break;\n          }\n          return _context4.abrupt("return");\n        case 54:\n          if (!renderState.aborted) {\n            _context4.next = 57;\n            break;\n          }\n          next(false);\n          return _context4.abrupt("return");\n        case 57:\n          if (!app.context._errored) {\n            _context4.next = 59;\n            break;\n          }\n          return _context4.abrupt("return", next());\n        case 59:\n          // Call .validate()\n          isValid = true;\n          _context4.prev = 60;\n          _iterator = _createForOfIteratorHelper(Components);\n          _context4.prev = 62;\n          _iterator.s();\n        case 64:\n          if ((_step = _iterator.n()).done) {\n            _context4.next = 75;\n            break;\n          }\n          Component = _step.value;\n          if (!(typeof Component.options.validate !== \'function\')) {\n            _context4.next = 68;\n            break;\n          }\n          return _context4.abrupt("continue", 73);\n        case 68:\n          _context4.next = 70;\n          return Component.options.validate(app.context);\n        case 70:\n          isValid = _context4.sent;\n          if (isValid) {\n            _context4.next = 73;\n            break;\n          }\n          return _context4.abrupt("break", 75);\n        case 73:\n          _context4.next = 64;\n          break;\n        case 75:\n          _context4.next = 80;\n          break;\n        case 77:\n          _context4.prev = 77;\n          _context4.t0 = _context4["catch"](62);\n          _iterator.e(_context4.t0);\n        case 80:\n          _context4.prev = 80;\n          _iterator.f();\n          return _context4.finish(80);\n        case 83:\n          _context4.next = 89;\n          break;\n        case 85:\n          _context4.prev = 85;\n          _context4.t1 = _context4["catch"](60);\n          // ...If .validate() threw an error\n          this.error({\n            statusCode: _context4.t1.statusCode || \'500\',\n            message: _context4.t1.message\n          });\n          return _context4.abrupt("return", next());\n        case 89:\n          if (isValid) {\n            _context4.next = 92;\n            break;\n          }\n          this.error({\n            statusCode: 404,\n            message: \'This page could not be found\'\n          });\n          return _context4.abrupt("return", next());\n        case 92:\n          _context4.next = 94;\n          return Promise.all(Components.map( /*#__PURE__*/function () {\n            var _ref3 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(Component, i) {\n              var childPathChanged, watchParam, watchQuery, promises, hasAsyncData, hasFetch, promise, p;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    // Check if only children route changed\n                    Component._path = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* compile */ "c"])(to.matched[matches[i]].path)(to.params);\n                    Component._dataRefresh = false;\n                    childPathChanged = Component._path !== _lastPaths[i]; // Refresh component (call asyncData & fetch) when:\n                    // Route path changed part includes current component\n                    // Or route param changed part includes current component and watchParam is not `false`\n                    // Or route query is changed and watchQuery returns `true`\n                    if (_this4._routeChanged && childPathChanged) {\n                      Component._dataRefresh = true;\n                    } else if (_this4._paramChanged && childPathChanged) {\n                      watchParam = Component.options.watchParam;\n                      Component._dataRefresh = watchParam !== false;\n                    } else if (_this4._queryChanged) {\n                      watchQuery = Component.options.watchQuery;\n                      if (watchQuery === true) {\n                        Component._dataRefresh = true;\n                      } else if (Array.isArray(watchQuery)) {\n                        Component._dataRefresh = watchQuery.some(function (key) {\n                          return _this4._diffQuery[key];\n                        });\n                      } else if (typeof watchQuery === \'function\') {\n                        if (!instances) {\n                          instances = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getMatchedComponentsInstances */ "h"])(to);\n                        }\n                        Component._dataRefresh = watchQuery.apply(instances[i], [to.query, from.query]);\n                      }\n                    }\n                    if (!(!_this4._hadError && _this4._isMounted && !Component._dataRefresh)) {\n                      _context3.next = 6;\n                      break;\n                    }\n                    return _context3.abrupt("return");\n                  case 6:\n                    promises = [];\n                    hasAsyncData = Component.options.asyncData && typeof Component.options.asyncData === \'function\';\n                    hasFetch = Boolean(Component.options.fetch) && Component.options.fetch.length; // Call asyncData(context)\n                    if (hasAsyncData) {\n                      promise = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* promisify */ "q"])(Component.options.asyncData, app.context);\n                      promise.then(function (asyncDataResult) {\n                        Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* applyAsyncData */ "b"])(Component, asyncDataResult);\n                      });\n                      promises.push(promise);\n                    }\n\n                    // Check disabled page loading\n                    _this4.$loading.manual = Component.options.loading === false;\n\n                    // Call fetch(context)\n                    if (hasFetch) {\n                      p = Component.options.fetch(app.context);\n                      if (!p || !(p instanceof Promise) && typeof p.then !== \'function\') {\n                        p = Promise.resolve(p);\n                      }\n                      p.then(function (fetchResult) {});\n                      promises.push(p);\n                    }\n                    return _context3.abrupt("return", Promise.all(promises));\n                  case 13:\n                  case "end":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function (_x14, _x15) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n        case 94:\n          if (nextCalled) {\n            _context4.next = 99;\n            break;\n          }\n          if (!renderState.aborted) {\n            _context4.next = 98;\n            break;\n          }\n          next(false);\n          return _context4.abrupt("return");\n        case 98:\n          next();\n        case 99:\n          _context4.next = 118;\n          break;\n        case 101:\n          _context4.prev = 101;\n          _context4.t2 = _context4["catch"](35);\n          if (!renderState.aborted) {\n            _context4.next = 106;\n            break;\n          }\n          next(false);\n          return _context4.abrupt("return");\n        case 106:\n          error = _context4.t2 || {};\n          if (!(error.message === \'ERR_REDIRECT\')) {\n            _context4.next = 109;\n            break;\n          }\n          return _context4.abrupt("return", this.$nuxt.$emit(\'routeChanged\', to, from, error));\n        case 109:\n          _lastPaths = [];\n          Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* globalHandleError */ "k"])(error);\n\n          // Load error layout\n          _layout2 = (_index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"].options || _index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"]).layout;\n          if (typeof _layout2 === \'function\') {\n            _layout2 = _layout2(app.context);\n          }\n          _context4.next = 115;\n          return this.loadLayout(_layout2);\n        case 115:\n          this.error(error);\n          this.$nuxt.$emit(\'routeChanged\', to, from, error);\n          next();\n        case 118:\n        case "end":\n          return _context4.stop();\n      }\n    }, _callee4, this, [[35, 101], [60, 85], [62, 77, 80, 83]]);\n  }));\n  return _render.apply(this, arguments);\n}\nfunction normalizeComponents(to, ___) {\n  Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* flatMapComponents */ "d"])(to, function (Component, _, match, key) {\n    if (Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(Component) === \'object\' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].extend(Component);\n      Component._Ctor = Component;\n      match.components[key] = Component;\n    }\n    return Component;\n  });\n}\nfunction setLayoutForNextPage(to) {\n  // Set layout\n  var hasError = Boolean(this.$options.nuxt.err);\n  if (this._hadError && this._dateLastError === this.$options.nuxt.dateErr) {\n    hasError = false;\n  }\n  var layout = hasError ? (_index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"].options || _index_js__WEBPACK_IMPORTED_MODULE_30__[/* NuxtError */ "a"]).layout : to.matched[0].components.default.options.layout;\n  if (typeof layout === \'function\') {\n    layout = layout(app.context);\n  }\n  this.setLayout(layout);\n}\nfunction checkForErrors(app) {\n  // Hide error component if no error\n  if (app._hadError && app._dateLastError === app.$options.nuxt.dateErr) {\n    app.error();\n  }\n}\n\n// When navigating on a different route but the same component is used, Vue.js\n// Will not update the instance data, so we have to update $data ourselves\nfunction fixPrepatch(to, ___) {\n  var _this2 = this;\n  if (this._routeChanged === false && this._paramChanged === false && this._queryChanged === false) {\n    return;\n  }\n  var instances = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getMatchedComponentsInstances */ "h"])(to);\n  var Components = Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* getMatchedComponents */ "g"])(to);\n  var triggerScroll = false;\n  vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].nextTick(function () {\n    instances.forEach(function (instance, i) {\n      if (!instance || instance._isDestroyed) {\n        return;\n      }\n      if (instance.constructor._dataRefresh && Components[i] === instance.constructor && instance.$vnode.data.keepAlive !== true && typeof instance.constructor.options.data === \'function\') {\n        var newData = instance.constructor.options.data.call(instance);\n        for (var key in newData) {\n          vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].set(instance.$data, key, newData[key]);\n        }\n        triggerScroll = true;\n      }\n    });\n    if (triggerScroll) {\n      // Ensure to trigger scroll event after calling scrollBehavior\n      window.$nuxt.$nextTick(function () {\n        window.$nuxt.$emit(\'triggerScroll\');\n      });\n    }\n    checkForErrors(_this2);\n  });\n}\nfunction nuxtReady(_app) {\n  window.onNuxtReadyCbs.forEach(function (cb) {\n    if (typeof cb === \'function\') {\n      cb(_app);\n    }\n  });\n  // Special JSDOM\n  if (typeof window._onNuxtLoaded === \'function\') {\n    window._onNuxtLoaded(_app);\n  }\n  // Add router hooks\n  router.afterEach(function (to, from) {\n    // Wait for fixPrepatch + $data updates\n    vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].nextTick(function () {\n      return _app.$nuxt.$emit(\'routeChanged\', to, from);\n    });\n  });\n}\nfunction mountApp(_x13) {\n  return _mountApp.apply(this, arguments);\n}\nfunction _mountApp() {\n  _mountApp = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(__app) {\n    var _app, mount, Components, renderState, boundRender, clientFirstMount;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          // Set global variables\n          app = __app.app;\n          router = __app.router;\n          store = __app.store;\n\n          // Create Vue instance\n          _app = new vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"](app); // Mounts Vue app to DOM element\n          mount = function mount() {\n            _app.$mount(\'#__nuxt\');\n\n            // Add afterEach router hooks\n            router.afterEach(normalizeComponents);\n            router.afterEach(setLayoutForNextPage.bind(_app));\n            router.afterEach(fixPrepatch.bind(_app));\n\n            // Listen for first Vue update\n            vue__WEBPACK_IMPORTED_MODULE_26__[/* default */ "a"].nextTick(function () {\n              // Call window.{{globals.readyCallback}} callbacks\n              nuxtReady(_app);\n            });\n          }; // Resolve route components\n          _context5.next = 7;\n          return Promise.all(resolveComponents(app.context.route));\n        case 7:\n          Components = _context5.sent;\n          // Enable transitions\n          _app.setTransitions = _app.$options.nuxt.setTransitions.bind(_app);\n          if (Components.length) {\n            _app.setTransitions(mapTransitions(Components, router.currentRoute));\n            _lastPaths = router.currentRoute.matched.map(function (route) {\n              return Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* compile */ "c"])(route.path)(router.currentRoute.params);\n            });\n          }\n\n          // Initialize error handler\n          _app.$loading = {}; // To avoid error while _app.$nuxt does not exist\n          if (NUXT.error) {\n            _app.error(NUXT.error);\n          }\n\n          // Add beforeEach router hooks\n          router.beforeEach(loadAsyncComponents.bind(_app));\n\n          // Each new invocation of render() aborts previous invocation\n          renderState = null;\n          boundRender = render.bind(_app);\n          router.beforeEach(function (to, from, next) {\n            if (renderState) {\n              renderState.aborted = true;\n            }\n            renderState = {\n              aborted: false\n            };\n            boundRender(to, from, next, renderState);\n          });\n\n          // Fix in static: remove trailing slash to force hydration\n          // Full static, if server-rendered: hydrate, to allow custom redirect to generated page\n\n          // Fix in static: remove trailing slash to force hydration\n          if (!(NUXT.serverRendered && Object(_utils_js__WEBPACK_IMPORTED_MODULE_29__[/* isSamePath */ "n"])(NUXT.routePath, _app.context.route.path))) {\n            _context5.next = 18;\n            break;\n          }\n          return _context5.abrupt("return", mount());\n        case 18:\n          // First render on client-side\n          clientFirstMount = function clientFirstMount() {\n            normalizeComponents(router.currentRoute, router.currentRoute);\n            setLayoutForNextPage.call(_app, router.currentRoute);\n            checkForErrors(_app);\n            // Don\'t call fixPrepatch.call(_app, router.currentRoute, router.currentRoute) since it\'s first render\n            mount();\n          }; // fix: force next tick to avoid having same timestamp when an error happen on spa fallback\n          _context5.next = 21;\n          return new Promise(function (resolve) {\n            return setTimeout(resolve, 0);\n          });\n        case 21:\n          render.call(_app, router.currentRoute, router.currentRoute, function (path) {\n            // If not redirected\n            if (!path) {\n              clientFirstMount();\n              return;\n            }\n\n            // Add a one-time afterEach hook to\n            // mount the app wait for redirect and route gets resolved\n            var unregisterHook = router.afterEach(function (to, from) {\n              unregisterHook();\n              clientFirstMount();\n            });\n\n            // Push the path and let route to be resolved\n            router.push(path, undefined, function (err) {\n              if (err) {\n                errorHandler(err);\n              }\n            });\n          }, {\n            aborted: false\n          });\n        case 22:\n        case "end":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _mountApp.apply(this, arguments);\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(93)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///377\n')},412:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var vue_clipboard2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(258);\n/* harmony import */ var vue_clipboard2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vue_clipboard2__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvue_clipboard2__WEBPACK_IMPORTED_MODULE_1___default.a.config.autoSetContainer = true;\nvue__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"].use(vue_clipboard2__WEBPACK_IMPORTED_MODULE_1___default.a);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9taWRkbGV3YXJlL2NsaXBib2FyZC5qcz9iNjMzIl0sIm5hbWVzIjpbIlZ1ZUNsaXBib2FyZCIsImNvbmZpZyIsImF1dG9TZXRDb250YWluZXIiLCJWdWUiLCJ1c2UiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXFCO0FBQ29CO0FBRXpDQSxxREFBWSxDQUFDQyxNQUFNLENBQUNDLGdCQUFnQixHQUFHLElBQUk7QUFDM0NDLG1EQUFHLENBQUNDLEdBQUcsQ0FBQ0oscURBQVksQ0FBQyIsImZpbGUiOiI0MTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcbmltcG9ydCBWdWVDbGlwYm9hcmQgZnJvbSAndnVlLWNsaXBib2FyZDInXG5cblZ1ZUNsaXBib2FyZC5jb25maWcuYXV0b1NldENvbnRhaW5lciA9IHRydWVcblZ1ZS51c2UoVnVlQ2xpcGJvYXJkKVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///412\n')},429:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_3_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_error_vue_vue_type_style_index_0_id_32c41c50_prod_scoped_true_lang_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(323);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_3_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_error_vue_vue_type_style_index_0_id_32c41c50_prod_scoped_true_lang_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_3_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_error_vue_vue_type_style_index_0_id_32c41c50_prod_scoped_true_lang_css__WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9sYXlvdXRzL2Vycm9yLnZ1ZT9kNTkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI0MjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcz8/cmVmLS0zLW9uZU9mLTEtMCEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0zLW9uZU9mLTEtMSEuLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTMtb25lT2YtMS0yIS4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vZXJyb3IudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MzJjNDFjNTAmcHJvZCZzY29wZWQ9dHJ1ZSZsYW5nPWNzc1wiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///429\n")},430:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(19);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, "h1[data-v-32c41c50]{font-size:20px}", ""]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9sYXlvdXRzL2Vycm9yLnZ1ZT9lNmYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0NBQWtDLG1CQUFPLENBQUMsRUFBZ0Q7QUFDMUYsc0VBQXNFLFlBQVk7QUFDbEY7QUFDQSw4QkFBOEIsUUFBUyx1QkFBdUIsZUFBZTtBQUM3RTtBQUNBO0FBQ0EiLCJmaWxlIjoiNDMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZ1bmN0aW9uKGkpe3JldHVybiBpWzFdfSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJoMVtkYXRhLXYtMzJjNDFjNTBde2ZvbnQtc2l6ZToyMHB4fVwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7fTtcbm1vZHVsZS5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///430\n')},431:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(432);\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(20).default\nvar update = add(\"784260c3\", content, true, {\"sourceMap\":false});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvZ2xvYmFsLnNjc3M/ZWE1NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxHQUFpTTtBQUN2TjtBQUNBLDRDQUE0QyxRQUFTO0FBQ3JEO0FBQ0E7QUFDQSxVQUFVLG1CQUFPLENBQUMsRUFBMEQ7QUFDNUUsNkNBQTZDLGtCQUFrQiIsImZpbGUiOiI0MzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNy1vbmVPZi0xLTEhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTctb25lT2YtMS0yIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS03LW9uZU9mLTEtMyEuL2dsb2JhbC5zY3NzXCIpO1xuaWYoY29udGVudC5fX2VzTW9kdWxlKSBjb250ZW50ID0gY29udGVudC5kZWZhdWx0O1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjc4NDI2MGMzXCIsIGNvbnRlbnQsIHRydWUsIHtcInNvdXJjZU1hcFwiOmZhbHNlfSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///431\n")},432:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(19);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, "tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.01)}.theme--light.v-table tbody tr:not(:last-child),.theme--light.v-table thead tr:first-child{border-bottom:1px solid rgba(0,0,0,.06)!important}table.v-table thead tr{height:32px}.theme--light.v-table tbody tr:hover:not(.v-datatable__expand-row){background:#f5f5f5!important}table.v-table tbody td{font-size:14px;font-weight:300}table.v-table tbody td:first-child,table.v-table tbody td:not(:first-child),table.v-table tbody th:first-child,table.v-table tbody th:not(:first-child),table.v-table thead td:first-child,table.v-table thead td:not(:first-child),table.v-table thead th:first-child,table.v-table thead th:not(:first-child){padding:12px 8px}.v-datatable__progress{display:none}table thead tr th span{font-size:1.0625rem!important;font-weight:300}.card-tabs .v-divider{margin-left:0!important;margin-right:0!important}.card-tabs .flex{padding:0!important}.card-tabs .v-tabs__item{border-radius:3px}.card-tabs .v-tabs__slider-wrapper .white{background-color:hsla(0,0%,100%,.3)!important;border-color:hsla(0,0%,100%,.3)!important}.card-tabs .v-tabs__slider{height:1px}.card-tabs .v-list__tile__title{font-size:14px;font-weight:300;height:auto;overflow:visible;padding:0 8px;white-space:inherit}.card-tabs .v-list .v-input,.card-tabs .v-list .v-input__slot{justify-content:center}.v-alert .v-alert__dismissible .v-icon{color:hsla(0,0%,100%,.5);font-size:16px}.v-alert .v-alert__icon.v-icon{color:#fff;font-size:30px}.v-snack .v-icon:not(:first-child){color:hsla(0,0%,100%,.5);margin-left:16px}.v-snack .v-icon:first-child{font-size:30px}.v-snack .v-snack__content{height:auto;padding:15px 20px}.v-snack .v-snack__wrapper{border-radius:4px}.v-alert.info,.v-snack .v-snack__wrapper.info{box-shadow:0 12px 20px -10px rgba(0,211,238,.28),0 4px 20px 0 rgba(0,0,0,.12),0 7px 8px -5px rgba(0,211,238,.2)!important}.v-alert.success,.v-snack .v-snack__wrapper.success{box-shadow:0 12px 20px -10px rgba(76,175,80,.28),0 4px 20px 0 rgba(0,0,0,.12),0 7px 8px -5px rgba(76,175,80,.2)!important}.v-alert.error,.v-snack .v-snack__wrapper.error{box-shadow:0 12px 20px -10px rgba(244,67,54,.28),0 4px 20px 0 rgba(0,0,0,.12),0 7px 8px -5px rgba(244,67,54,.2)!important}.v-alert.warning,.v-snack .v-snack__wrapper.warning{box-shadow:0 12px 20px -10px rgba(255,152,0,.28),0 4px 20px 0 rgba(0,0,0,.12),0 7px 8px -5px rgba(255,152,0,.2)!important}.v-alert.purple,.v-snack .v-snack__wrapper.purple{box-shadow:0 12px 20px -10px rgba(156,39,176,.28),0 4px 20px 0 rgba(0,0,0,.12),0 7px 8px -5px rgba(156,39,176,.2)!important}.v-snack .v-snack__wrapper.info{background-color:#00d3ee!important;border-color:#00d3ee!important}.v-snack .v-snack__wrapper.success{background-color:#4caf50!important;border-color:#4caf50!important}.v-snack .v-snack__wrapper.error{background-color:#f44336!important;border-color:#f44336!important}.v-snack .v-snack__wrapper.warning{background-color:#ff9800!important;border-color:#ff9800!important}.v-snack .v-snack__wrapper.purple{background-color:#9c27b0!important;border-color:#9c27b0!important}.h1,.h2,.h3,.h4,body,h1,h2,h3,h4,h5,h6{font-family:\\"Roboto\\",\\"Helvetica\\",\\"Arial\\",sans-serif!important;font-weight:300!important;line-height:1.5em!important}.h1,.h2,.h3,h1,h2,h3{margin-bottom:10px;margin-top:20px}.h4,.h5,.h6,h4,h5,h6{margin-bottom:10px;margin-top:10px}.h1,h1{font-size:3.3125rem!important;line-height:1.15em!important}.h2,h2{font-size:2.25rem!important;line-height:1.5em!important}.h3,h3{font-size:1.5625rem!important;line-height:1.4em!important}.h4,h4{font-size:1.125rem!important;line-height:1.5em!important}.h5,h5{font-size:1.0625rem!important;line-height:1.55em!important;margin-bottom:15px}.h6,h6{font-size:.75rem!important;font-weight:500;text-transform:uppercase}p{font-size:14px!important;margin:0 0 10px}h2.title{margin-bottom:30px}.card-description,.description,.footer-big p{color:#999}.text-warning{color:#ff9800!important}.text-primary{color:#9c27b0!important}.text-danger{color:#f44336!important}.text-success{color:#4caf50!important}.text-info{color:#00bcd4!important}.text-gray{color:#999!important}body,html{overflow:auto}.border-right{border-right-style:solid;border-right-width:1px}.card-border{border-color:rgba(0,0,0,.12)}.text{word-break:break-all}.v-sheet--offset{position:relative;top:-18px}.v-text-field.v-text-field--enclosed .v-input__append-inner{margin-right:-10px}.v-footer{z-index:3}.divider{border:solid;border-color:rgba(0,0,0,.12);border-width:thin 0 0;display:block;flex:1 1 0px;height:0;margin:-1px auto;max-height:0;max-width:calc(100% - 30px);transition:inherit}.divider-vertical{align-self:stretch;border:solid;border-color:hsla(0,0%,100%,.12);border-width:0 thin 0 0;display:inline-flex;height:inherit;margin-top:8px;max-height:calc(100% - 16px);max-width:0;min-height:0;vertical-align:text-bottom;width:0}.theme--light.v-stepper{background-color:transparent}.v-stepper,.v-stepper__header{box-shadow:none}.theme--light.v-card .v-card__text{color:#000!important}.theme--light.v-data-table thead tr th{vertical-align:center!important}.theme--light.v-data-table thead tr th .v-icon{margin-bottom:4px}", ""]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///432\n')},498:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(19);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, ".breathe .v-badge__badge{animation-direction:alternate;animation-duration:1.5s;animation-iteration-count:infinite;animation-name:breathe;animation-timing-function:ease-in-out}.toolbar{font-size:16px;height:40px}", ""]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvc3RhdHVzLnNjc3M/MmE4NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLEVBQWdEO0FBQzFGLHNFQUFzRSxZQUFZO0FBQ2xGO0FBQ0EsOEJBQThCLFFBQVMsNEJBQTRCLDhCQUE4Qix3QkFBd0IsbUNBQW1DLHVCQUF1QixzQ0FBc0MsU0FBUyxlQUFlLFlBQVk7QUFDN1A7QUFDQTtBQUNBIiwiZmlsZSI6IjQ5OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmdW5jdGlvbihpKXtyZXR1cm4gaVsxXX0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmJyZWF0aGUgLnYtYmFkZ2VfX2JhZGdle2FuaW1hdGlvbi1kaXJlY3Rpb246YWx0ZXJuYXRlO2FuaW1hdGlvbi1kdXJhdGlvbjoxLjVzO2FuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6aW5maW5pdGU7YW5pbWF0aW9uLW5hbWU6YnJlYXRoZTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmVhc2UtaW4tb3V0fS50b29sYmFye2ZvbnQtc2l6ZToxNnB4O2hlaWdodDo0MHB4fVwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5sb2NhbHMgPSB7fTtcbm1vZHVsZS5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///498\n')},499:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(10);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(12);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(13);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(56);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(255);\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(256);\n/* harmony import */ var _wallet__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(257);\n\n\n\n\n\n\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\nvue__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"].use(vuex__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"]);\nvar store = _objectSpread({\n  modules: {\n    node: _node__WEBPACK_IMPORTED_MODULE_11__["default"],\n    wallet: _wallet__WEBPACK_IMPORTED_MODULE_12__["default"]\n  }\n}, _common__WEBPACK_IMPORTED_MODULE_10__["default"]);\n/* harmony default export */ __webpack_exports__["default"] = (store);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdG9yZS9pbmRleC5qcz85MTAxIl0sIm5hbWVzIjpbIlZ1ZSIsInVzZSIsIlZ1ZXgiLCJzdG9yZSIsIl9vYmplY3RTcHJlYWQiLCJtb2R1bGVzIiwibm9kZSIsIndhbGxldCIsImNvbW1vbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxQjtBQUNFO0FBQ007QUFDSjtBQUNJO0FBRTdCQSxtREFBRyxDQUFDQyxHQUFHLENBQUNDLG9EQUFJLENBQUM7QUFFYixJQUFNQyxLQUFLLEdBQUFDLGFBQUE7RUFDVEMsT0FBTyxFQUFFO0lBQ1BDLElBQUksRUFBSkEsOENBQUk7SUFDSkMsTUFBTSxFQUFOQSxnREFBTUE7RUFDUjtBQUFDLEdBQ0VDLGdEQUFNLENBQ1Y7QUFFY0wsb0VBQUsiLCJmaWxlIjoiNDk5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgVnVleCBmcm9tICd2dWV4J1xuaW1wb3J0IGNvbW1vbiBmcm9tICcuL2NvbW1vbidcbmltcG9ydCBub2RlIGZyb20gJy4vbm9kZSdcbmltcG9ydCB3YWxsZXQgZnJvbSAnLi93YWxsZXQnXG5cblZ1ZS51c2UoVnVleClcblxuY29uc3Qgc3RvcmUgPSB7XG4gIG1vZHVsZXM6IHtcbiAgICBub2RlLFxuICAgIHdhbGxldFxuICB9LFxuICAuLi5jb21tb25cbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RvcmVcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///499\n')},500:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT9jMzgwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUwMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///500\n")},6:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export createGetCounter */\n/* unused harmony export empty */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return globalHandleError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return interopDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return hasFetch; });\n/* unused harmony export purifyData */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return getChildrenComponentInstancesUsingFetch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return applyAsyncData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return sanitizeComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return getMatchedComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return getMatchedComponentsInstances; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return flatMapComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return resolveRouteComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return getRouteData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return setContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return middlewareSeries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return promisify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return getLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return compile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return getQueryDiff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return normalizeError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addLifecycleHook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return urlJoin; });\n/* unused harmony export stripTrailingSlash */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return isSamePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return setScrollRestoration; });\n/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(18);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(75);\n/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(29);\n/* harmony import */ var core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7);\n/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(48);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(51);\n/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(10);\n/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(46);\n/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(92);\n/* harmony import */ var core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_join_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(67);\n/* harmony import */ var core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map_js__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(37);\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(26);\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(47);\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var core_js_modules_es_object_entries_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(237);\n/* harmony import */ var core_js_modules_es_object_entries_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_entries_js__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(12);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(13);\n/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(9);\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(8);\n/* harmony import */ var core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys_js__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(3);\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(238);\n/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(23);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(36);\n/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(68);\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(33);\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var core_js_modules_es_string_repeat_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(187);\n/* harmony import */ var core_js_modules_es_string_repeat_js__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_repeat_js__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(61);\n/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_28__);\n/* harmony import */ var core_js_modules_es_string_search_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(207);\n/* harmony import */ var core_js_modules_es_string_search_js__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_search_js__WEBPACK_IMPORTED_MODULE_29__);\n/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(82);\n/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_30__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(38);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_31__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(2);\n/* harmony import */ var ufo__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(96);\n\n\n\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// window.{{globals.loadedCallback}} hook\n// Useful for jsdom testing or plugins (https://github.com/tmpvar/jsdom#dealing-with-asynchronous-script-loading)\nif (true) {\n  window.onNuxtReadyCbs = [];\n  window.onNuxtReady = function (cb) {\n    window.onNuxtReadyCbs.push(cb);\n  };\n}\nfunction createGetCounter(counterObject) {\n  var defaultKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  return function getCounter() {\n    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultKey;\n    if (counterObject[id] === undefined) {\n      counterObject[id] = 0;\n    }\n    return counterObject[id]++;\n  };\n}\nfunction empty() {}\nfunction globalHandleError(error) {\n  if (vue__WEBPACK_IMPORTED_MODULE_32__[/* default */ "a"].config.errorHandler) {\n    vue__WEBPACK_IMPORTED_MODULE_32__[/* default */ "a"].config.errorHandler(error);\n  }\n}\nfunction interopDefault(promise) {\n  return promise.then(function (m) {\n    return m.default || m;\n  });\n}\nfunction hasFetch(vm) {\n  return vm.$options && typeof vm.$options.fetch === \'function\' && !vm.$options.fetch.length;\n}\nfunction purifyData(data) {\n  if (true) {\n    return data;\n  }\n  return Object.entries(data).filter(function (_ref) {\n    var _ref2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    var valid = !(value instanceof Function) && !(value instanceof Promise);\n    if (!valid) {\n      console.warn("".concat(key, " is not able to be stringified. This will break in a production environment."));\n    }\n    return valid;\n  }).reduce(function (obj, _ref3) {\n    var _ref4 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(_ref3, 2),\n      key = _ref4[0],\n      value = _ref4[1];\n    obj[key] = value;\n    return obj;\n  }, {});\n}\nfunction getChildrenComponentInstancesUsingFetch(vm) {\n  var instances = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var children = vm.$children || [];\n  var _iterator = _createForOfIteratorHelper(children),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n      if (child.$fetch) {\n        instances.push(child);\n      }\n      if (child.$children) {\n        getChildrenComponentInstancesUsingFetch(child, instances);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return instances;\n}\nfunction applyAsyncData(Component, asyncData) {\n  if (\n  // For SSR, we once all this function without second param to just apply asyncData\n  // Prevent doing this for each SSR request\n  !asyncData && Component.options.__hasNuxtData) {\n    return;\n  }\n  var ComponentData = Component.options._originDataFn || Component.options.data || function () {\n    return {};\n  };\n  Component.options._originDataFn = ComponentData;\n  Component.options.data = function () {\n    var data = ComponentData.call(this, this);\n    if (this.$ssrContext) {\n      asyncData = this.$ssrContext.asyncData[Component.cid];\n    }\n    return _objectSpread(_objectSpread({}, data), asyncData);\n  };\n  Component.options.__hasNuxtData = true;\n  if (Component._Ctor && Component._Ctor.options) {\n    Component._Ctor.options.data = Component.options.data;\n  }\n}\nfunction sanitizeComponent(Component) {\n  // If Component already sanitized\n  if (Component.options && Component._Ctor === Component) {\n    return Component;\n  }\n  if (!Component.options) {\n    Component = vue__WEBPACK_IMPORTED_MODULE_32__[/* default */ "a"].extend(Component); // fix issue #6\n    Component._Ctor = Component;\n  } else {\n    Component._Ctor = Component;\n    Component.extendOptions = Component.options;\n  }\n  // If no component name defined, set file path as name, (also fixes #5703)\n  if (!Component.options.name && Component.options.__file) {\n    Component.options.name = Component.options.__file;\n  }\n  return Component;\n}\nfunction getMatchedComponents(route) {\n  var matches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'components\';\n  return Array.prototype.concat.apply([], route.matched.map(function (m, index) {\n    return Object.keys(m[prop]).map(function (key) {\n      matches && matches.push(index);\n      return m[prop][key];\n    });\n  }));\n}\nfunction getMatchedComponentsInstances(route) {\n  var matches = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return getMatchedComponents(route, matches, \'instances\');\n}\nfunction flatMapComponents(route, fn) {\n  return Array.prototype.concat.apply([], route.matched.map(function (m, index) {\n    return Object.keys(m.components).reduce(function (promises, key) {\n      if (m.components[key]) {\n        promises.push(fn(m.components[key], m.instances[key], m, key, index));\n      } else {\n        delete m.components[key];\n      }\n      return promises;\n    }, []);\n  }));\n}\nfunction resolveRouteComponents(route, fn) {\n  return Promise.all(flatMapComponents(route, /*#__PURE__*/function () {\n    var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(Component, instance, match, key) {\n      var timeNow, previousReloadTime;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof Component === \'function\' && !Component.options)) {\n              _context.next = 11;\n              break;\n            }\n            _context.prev = 1;\n            _context.next = 4;\n            return Component();\n          case 4:\n            Component = _context.sent;\n            _context.next = 11;\n            break;\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context["catch"](1);\n            // Handle webpack chunk loading errors\n            // This may be due to a new deployment or a network problem\n            if (_context.t0 && _context.t0.name === \'ChunkLoadError\' && typeof window !== \'undefined\' && window.sessionStorage) {\n              timeNow = Date.now();\n              previousReloadTime = parseInt(window.sessionStorage.getItem(\'nuxt-reload\')); // check for previous reload time not to reload infinitely\n              if (!previousReloadTime || previousReloadTime + 60000 < timeNow) {\n                window.sessionStorage.setItem(\'nuxt-reload\', timeNow);\n                window.location.reload(true /* skip cache */);\n              }\n            }\n            throw _context.t0;\n          case 11:\n            match.components[key] = Component = sanitizeComponent(Component);\n            return _context.abrupt("return", typeof fn === \'function\' ? fn(Component, instance, match, key) : Component);\n          case 13:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n    return function (_x, _x2, _x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }()));\n}\nfunction getRouteData(_x5) {\n  return _getRouteData.apply(this, arguments);\n}\nfunction _getRouteData() {\n  _getRouteData = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(route) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (route) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt("return");\n        case 2:\n          _context2.next = 4;\n          return resolveRouteComponents(route);\n        case 4:\n          return _context2.abrupt("return", _objectSpread(_objectSpread({}, route), {}, {\n            meta: getMatchedComponents(route).map(function (Component, index) {\n              return _objectSpread(_objectSpread({}, Component.options.meta), (route.matched[index] || {}).meta);\n            })\n          }));\n        case 5:\n        case "end":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getRouteData.apply(this, arguments);\n}\nfunction setContext(_x6, _x7) {\n  return _setContext.apply(this, arguments);\n}\nfunction _setContext() {\n  _setContext = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(app, context) {\n    var _yield$Promise$all, _yield$Promise$all2, currentRouteData, fromRouteData;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          // If context not defined, create it\n          if (!app.context) {\n            app.context = {\n              isStatic: true,\n              isDev: false,\n              isHMR: false,\n              app: app,\n              store: app.store,\n              payload: context.payload,\n              error: context.error,\n              base: app.router.options.base,\n              env: {}\n            };\n            // Only set once\n\n            if (context.req) {\n              app.context.req = context.req;\n            }\n            if (context.res) {\n              app.context.res = context.res;\n            }\n            if (context.ssrContext) {\n              app.context.ssrContext = context.ssrContext;\n            }\n            app.context.redirect = function (status, path, query) {\n              if (!status) {\n                return;\n              }\n              app.context._redirected = true;\n              // if only 1 or 2 arguments: redirect(\'/\') or redirect(\'/\', { foo: \'bar\' })\n              var pathType = Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(path);\n              if (typeof status !== \'number\' && (pathType === \'undefined\' || pathType === \'object\')) {\n                query = path || {};\n                path = status;\n                pathType = Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(path);\n                status = 302;\n              }\n              if (pathType === \'object\') {\n                path = app.router.resolve(path).route.fullPath;\n              }\n              // "/absolute/route", "./relative/route" or "../relative/route"\n              if (/(^[.]{1,2}\\/)|(^\\/(?!\\/))/.test(path)) {\n                app.context.next({\n                  path: path,\n                  query: query,\n                  status: status\n                });\n              } else {\n                path = Object(ufo__WEBPACK_IMPORTED_MODULE_33__[/* withQuery */ "d"])(path, query);\n                if (false) {}\n                if (true) {\n                  // https://developer.mozilla.org/en-US/docs/Web/API/Location/assign\n                  window.location.assign(path);\n\n                  // Throw a redirect error\n                  throw new Error(\'ERR_REDIRECT\');\n                }\n              }\n            };\n            if (false) {}\n            if (true) {\n              app.context.nuxtState = window.__NUXT__;\n            }\n          }\n\n          // Dynamic keys\n          _context3.next = 3;\n          return Promise.all([getRouteData(context.route), getRouteData(context.from)]);\n        case 3:\n          _yield$Promise$all = _context3.sent;\n          _yield$Promise$all2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"])(_yield$Promise$all, 2);\n          currentRouteData = _yield$Promise$all2[0];\n          fromRouteData = _yield$Promise$all2[1];\n          if (context.route) {\n            app.context.route = currentRouteData;\n          }\n          if (context.from) {\n            app.context.from = fromRouteData;\n          }\n          if (context.error) {\n            app.context.error = context.error;\n          }\n          app.context.next = context.next;\n          app.context._redirected = false;\n          app.context._errored = false;\n          app.context.isHMR = false;\n          app.context.params = app.context.route.params || {};\n          app.context.query = app.context.route.query || {};\n        case 16:\n        case "end":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _setContext.apply(this, arguments);\n}\nfunction middlewareSeries(promises, appContext, renderState) {\n  if (!promises.length || appContext._redirected || appContext._errored || renderState && renderState.aborted) {\n    return Promise.resolve();\n  }\n  return promisify(promises[0], appContext).then(function () {\n    return middlewareSeries(promises.slice(1), appContext, renderState);\n  });\n}\nfunction promisify(fn, context) {\n  var promise;\n  if (fn.length === 2) {\n    // fn(context, callback)\n    promise = new Promise(function (resolve) {\n      fn(context, function (err, data) {\n        if (err) {\n          context.error(err);\n        }\n        data = data || {};\n        resolve(data);\n      });\n    });\n  } else {\n    promise = fn(context);\n  }\n  if (promise && promise instanceof Promise && typeof promise.then === \'function\') {\n    return promise;\n  }\n  return Promise.resolve(promise);\n}\n\n// Imported from vue-router\nfunction getLocation(base, mode) {\n  if (mode === \'hash\') {\n    return window.location.hash.replace(/^#\\//, \'\');\n  }\n  base = decodeURI(base).slice(0, -1); // consideration is base is normalized with trailing slash\n  var path = decodeURI(window.location.pathname);\n  if (base && path.startsWith(base)) {\n    path = path.slice(base.length);\n  }\n  var fullPath = (path || \'/\') + window.location.search + window.location.hash;\n  return Object(ufo__WEBPACK_IMPORTED_MODULE_33__[/* normalizeURL */ "c"])(fullPath);\n}\n\n// Imported from path-to-regexp\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\nfunction getQueryDiff(toQuery, fromQuery) {\n  var diff = {};\n  var queries = _objectSpread(_objectSpread({}, toQuery), fromQuery);\n  for (var k in queries) {\n    if (String(toQuery[k]) !== String(fromQuery[k])) {\n      diff[k] = true;\n    }\n  }\n  return diff;\n}\nfunction normalizeError(err) {\n  var message;\n  if (!(err.message || typeof err === \'string\')) {\n    try {\n      message = JSON.stringify(err, null, 2);\n    } catch (e) {\n      message = "[".concat(err.constructor.name, "]");\n    }\n  } else {\n    message = err.message || err;\n  }\n  return _objectSpread(_objectSpread({}, err), {}, {\n    message: message,\n    statusCode: err.statusCode || err.status || err.response && err.response.status || 500\n  });\n}\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won\'t transform.\n\'(\\\\\\\\.)\',\n// Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// "/:test(\\\\d+)?" => ["/", "test", "\\d+", undefined, "?", undefined]\n// "/route(\\\\d+)"  => [undefined, undefined, undefined, "\\d+", undefined, undefined]\n// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]\n\'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))\'].join(\'|\'), \'g\');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = \'\';\n  var defaultDelimiter = options && options.delimiter || \'/\';\n  var res;\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = \'\';\n    }\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === \'+\' || modifier === \'*\';\n    var optional = modifier === \'?\' || modifier === \'*\';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || \'\',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: Boolean(asterisk),\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? \'.*\' : \'[^\' + escapeString(delimiter) + \']+?\'\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n  return tokens;\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty(str, slashAllowed) {\n  var re = slashAllowed ? /[?#]/g : /[/?#]/g;\n  return encodeURI(str).replace(re, function (c) {\n    return \'%\' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk(str) {\n  return encodeURIComponentPretty(str, true);\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \'\\\\$1\');\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$/()])/g, \'\\\\$1\');\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (Object(_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(tokens[i]) === \'object\') {\n      matches[i] = new RegExp(\'^(?:\' + tokens[i].pattern + \')$\', flags(options));\n    }\n  }\n  return function (obj, opts) {\n    var path = \'\';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n    for (var _i = 0; _i < tokens.length; _i++) {\n      var token = tokens[_i];\n      if (typeof token === \'string\') {\n        path += token;\n        continue;\n      }\n      var value = data[token.name || \'pathMatch\'];\n      var segment = void 0;\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n          continue;\n        } else {\n          throw new TypeError(\'Expected "\' + token.name + \'" to be defined\');\n        }\n      }\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError(\'Expected "\' + token.name + \'" to not repeat, but received `\' + JSON.stringify(value) + \'`\');\n        }\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError(\'Expected "\' + token.name + \'" to not be empty\');\n          }\n        }\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n          if (!matches[_i].test(segment)) {\n            throw new TypeError(\'Expected all "\' + token.name + \'" to match "\' + token.pattern + \'", but received `\' + JSON.stringify(segment) + \'`\');\n          }\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n        continue;\n      }\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n      if (!matches[_i].test(segment)) {\n        throw new TypeError(\'Expected "\' + token.name + \'" to match "\' + token.pattern + \'", but received "\' + segment + \'"\');\n      }\n      path += token.prefix + segment;\n    }\n    return path;\n  };\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags(options) {\n  return options && options.sensitive ? \'\' : \'i\';\n}\nfunction addLifecycleHook(vm, hook, fn) {\n  if (!vm.$options[hook]) {\n    vm.$options[hook] = [];\n  }\n  if (!vm.$options[hook].includes(fn)) {\n    vm.$options[hook].push(fn);\n  }\n}\nvar urlJoin = ufo__WEBPACK_IMPORTED_MODULE_33__[/* joinURL */ "b"];\nvar stripTrailingSlash = ufo__WEBPACK_IMPORTED_MODULE_33__[/* withoutTrailingSlash */ "e"];\nvar isSamePath = ufo__WEBPACK_IMPORTED_MODULE_33__[/* isSamePath */ "a"];\nfunction setScrollRestoration(newVal) {\n  try {\n    window.history.scrollRestoration = newVal;\n  } catch (e) {}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n')},65:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ServiceStatusEnum; });\nvar ServiceStatusEnum = {\n  SERVICE_STATUS_DEFAULT: 0,\n  SERVICE_STATUS_NO_BENEFICIARY: 1 << 0,\n  SERVICE_STATUS_NO_WALLET_FILE: 1 << 1,\n  SERVICE_STATUS_NO_PASSWORD: 1 << 2,\n  SERVICE_STATUS_CREATE_ID: 1 << 3,\n  SERVICE_STATUS_RUNNING: 1 << 4\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9oZWxwZXJzL2NvbnN0cy5qcz82NTM1Il0sIm5hbWVzIjpbIlNlcnZpY2VTdGF0dXNFbnVtIiwiU0VSVklDRV9TVEFUVVNfREVGQVVMVCIsIlNFUlZJQ0VfU1RBVFVTX05PX0JFTkVGSUNJQVJZIiwiU0VSVklDRV9TVEFUVVNfTk9fV0FMTEVUX0ZJTEUiLCJTRVJWSUNFX1NUQVRVU19OT19QQVNTV09SRCIsIlNFUlZJQ0VfU1RBVFVTX0NSRUFURV9JRCIsIlNFUlZJQ0VfU1RBVFVTX1JVTk5JTkciXSwibWFwcGluZ3MiOiJBQUFBO0FBQU8sSUFBTUEsaUJBQWlCLEdBQUc7RUFDL0JDLHNCQUFzQixFQUFFLENBQUM7RUFDekJDLDZCQUE2QixFQUFFLENBQUMsSUFBSSxDQUFDO0VBQ3JDQyw2QkFBNkIsRUFBRSxDQUFDLElBQUksQ0FBQztFQUNyQ0MsMEJBQTBCLEVBQUUsQ0FBQyxJQUFJLENBQUM7RUFDbENDLHdCQUF3QixFQUFFLENBQUMsSUFBSSxDQUFDO0VBQ2hDQyxzQkFBc0IsRUFBRSxDQUFDLElBQUk7QUFDL0IsQ0FBQyIsImZpbGUiOiI2NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTZXJ2aWNlU3RhdHVzRW51bSA9IHtcbiAgU0VSVklDRV9TVEFUVVNfREVGQVVMVDogMCxcbiAgU0VSVklDRV9TVEFUVVNfTk9fQkVORUZJQ0lBUlk6IDEgPDwgMCxcbiAgU0VSVklDRV9TVEFUVVNfTk9fV0FMTEVUX0ZJTEU6IDEgPDwgMSxcbiAgU0VSVklDRV9TVEFUVVNfTk9fUEFTU1dPUkQ6IDEgPDwgMixcbiAgU0VSVklDRV9TVEFUVVNfQ1JFQVRFX0lEOiAxIDw8IDMsXG4gIFNFUlZJQ0VfU1RBVFVTX1JVTk5JTkc6IDEgPDwgNFxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///65\n')},97:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ createApp; });\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ layouts_error; });\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js\nvar es_symbol = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js\nvar es_object_get_own_property_descriptor = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js\nvar es_object_get_own_property_descriptors = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js\nvar es_object_keys = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(15);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__(75);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__(67);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(26);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js\nvar es_string_replace = __webpack_require__(61);\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/vuex/dist/vuex.esm.js\nvar vuex_esm = __webpack_require__(56);\n\n// EXTERNAL MODULE: ./node_modules/vue-meta/dist/vue-meta.esm.browser.js\nvar vue_meta_esm_browser = __webpack_require__(164);\n\n// EXTERNAL MODULE: ./node_modules/vue-client-only/dist/vue-client-only.common.js\nvar vue_client_only_common = __webpack_require__(259);\nvar vue_client_only_common_default = /*#__PURE__*/__webpack_require__.n(vue_client_only_common);\n\n// EXTERNAL MODULE: ./node_modules/vue-no-ssr/dist/vue-no-ssr.common.js\nvar vue_no_ssr_common = __webpack_require__(141);\nvar vue_no_ssr_common_default = /*#__PURE__*/__webpack_require__.n(vue_no_ssr_common);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js\nvar es_string_iterator = __webpack_require__(33);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js\nvar web_dom_collections_iterator = __webpack_require__(38);\n\n// EXTERNAL MODULE: ./node_modules/vue-router/dist/vue-router.esm.js\nvar vue_router_esm = __webpack_require__(260);\n\n// EXTERNAL MODULE: ./node_modules/ufo/dist/index.mjs + 1 modules\nvar dist = __webpack_require__(96);\n\n// EXTERNAL MODULE: ./.nuxt/utils.js\nvar utils = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(28);\n\n// CONCATENATED MODULE: ./.nuxt/router.scrollBehavior.js\n\n\n\n\n\nif (true) {\n  if (\'scrollRestoration\' in window.history) {\n    Object(utils["u" /* setScrollRestoration */])(\'manual\');\n\n    // reset scrollRestoration to auto when leaving page, allowing page reload\n    // and back-navigation from other pages to use the browser to restore the\n    // scrolling position.\n    window.addEventListener(\'beforeunload\', function () {\n      Object(utils["u" /* setScrollRestoration */])(\'auto\');\n    });\n\n    // Setting scrollRestoration to manual again when returning to this page.\n    window.addEventListener(\'load\', function () {\n      Object(utils["u" /* setScrollRestoration */])(\'manual\');\n    });\n  }\n}\nfunction shouldScrollToTop(route) {\n  var Pages = Object(utils["g" /* getMatchedComponents */])(route);\n  if (Pages.length === 1) {\n    var _Pages$0$options = Pages[0].options,\n      options = _Pages$0$options === void 0 ? {} : _Pages$0$options;\n    return options.scrollToTop !== false;\n  }\n  return Pages.some(function (_ref) {\n    var options = _ref.options;\n    return options && options.scrollToTop;\n  });\n}\n/* harmony default export */ var router_scrollBehavior = (function (to, from, savedPosition) {\n  // If the returned position is falsy or an empty object, will retain current scroll position\n  var position = false;\n  var isRouteChanged = to !== from;\n\n  // savedPosition is only available for popstate navigations (back button)\n  if (savedPosition) {\n    position = savedPosition;\n  } else if (isRouteChanged && shouldScrollToTop(to)) {\n    position = {\n      x: 0,\n      y: 0\n    };\n  }\n  var nuxt = window.$nuxt;\n  if (\n  // Initial load (vuejs/vue-router#3199)\n  !isRouteChanged ||\n  // Route hash changes\n  to.path === from.path && to.hash !== from.hash) {\n    nuxt.$nextTick(function () {\n      return nuxt.$emit(\'triggerScroll\');\n    });\n  }\n  return new Promise(function (resolve) {\n    // wait for the out transition to complete (if necessary)\n    nuxt.$once(\'triggerScroll\', function () {\n      // coords will be used if no selector is provided,\n      // or if the selector didn\'t match any element.\n      if (to.hash) {\n        var hash = to.hash;\n        // CSS.escape() is not supported with IE and Edge.\n        if (typeof window.CSS !== \'undefined\' && typeof window.CSS.escape !== \'undefined\') {\n          hash = \'#\' + window.CSS.escape(hash.substr(1));\n        }\n        try {\n          var el = document.querySelector(hash);\n          if (el) {\n            var _getComputedStyle$scr;\n            // scroll to anchor by returning the selector\n            position = {\n              selector: hash\n            };\n            // Respect any scroll-margin-top set in CSS when scrolling to anchor\n            var y = Number((_getComputedStyle$scr = getComputedStyle(el)[\'scroll-margin-top\']) === null || _getComputedStyle$scr === void 0 ? void 0 : _getComputedStyle$scr.replace(\'px\', \'\'));\n            if (y) {\n              position.offset = {\n                y: y\n              };\n            }\n          }\n        } catch (e) {\n          console.warn(\'Failed to save scroll position. Please add CSS.escape() polyfill (https://github.com/mathiasbynens/CSS.escape).\');\n        }\n      }\n      resolve(position);\n    });\n  });\n});\n// CONCATENATED MODULE: ./.nuxt/router.js\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar router_5fa16f18 = function _5fa16f18() {\n  return Object(utils["m" /* interopDefault */])(__webpack_require__.e(/* import() | pages/loading */ 7).then(__webpack_require__.bind(null, 696)));\n};\nvar router_d7f7cd30 = function _d7f7cd30() {\n  return Object(utils["m" /* interopDefault */])(Promise.all(/* import() | pages/nodeStatus */[__webpack_require__.e(0), __webpack_require__.e(1), __webpack_require__.e(8)]).then(__webpack_require__.bind(null, 692)));\n};\nvar router_2d9eea66 = function _2d9eea66() {\n  return Object(utils["m" /* interopDefault */])(Promise.all(/* import() | pages/overview */[__webpack_require__.e(0), __webpack_require__.e(15), __webpack_require__.e(9)]).then(__webpack_require__.bind(null, 693)));\n};\nvar router_62def477 = function _62def477() {\n  return Object(utils["m" /* interopDefault */])(Promise.all(/* import() | pages/settings */[__webpack_require__.e(0), __webpack_require__.e(1), __webpack_require__.e(16), __webpack_require__.e(10)]).then(__webpack_require__.bind(null, 690)));\n};\nvar router_bf0106a4 = function _bf0106a4() {\n  return Object(utils["m" /* interopDefault */])(__webpack_require__.e(/* import() | pages/index */ 6).then(__webpack_require__.bind(null, 697)));\n};\nvar router_520878a4 = function _520878a4() {\n  return Object(utils["m" /* interopDefault */])(Promise.all(/* import() | pages/wallet/create */[__webpack_require__.e(0), __webpack_require__.e(11)]).then(__webpack_require__.bind(null, 698)));\n};\nvar router_79489f08 = function _79489f08() {\n  return Object(utils["m" /* interopDefault */])(Promise.all(/* import() | pages/wallet/open */[__webpack_require__.e(0), __webpack_require__.e(12)]).then(__webpack_require__.bind(null, 699)));\n};\nvar emptyFn = function emptyFn() {};\nvue_runtime_esm["a" /* default */].use(vue_router_esm["a" /* default */]);\nvar routerOptions = {\n  mode: \'history\',\n  base: \'/web/\',\n  linkActiveClass: \'nuxt-link-active\',\n  linkExactActiveClass: \'nuxt-link-exact-active\',\n  scrollBehavior: router_scrollBehavior,\n  routes: [{\n    path: "/loading",\n    component: router_5fa16f18,\n    name: "loading___en"\n  }, {\n    path: "/nodeStatus",\n    component: router_d7f7cd30,\n    name: "nodeStatus___en"\n  }, {\n    path: "/overview",\n    component: router_2d9eea66,\n    name: "overview___en"\n  }, {\n    path: "/settings",\n    component: router_62def477,\n    name: "settings___en"\n  }, {\n    path: "/zh",\n    component: router_bf0106a4,\n    name: "index___zh"\n  }, {\n    path: "/wallet/create",\n    component: router_520878a4,\n    name: "wallet-create___en"\n  }, {\n    path: "/wallet/open",\n    component: router_79489f08,\n    name: "wallet-open___en"\n  }, {\n    path: "/zh/loading",\n    component: router_5fa16f18,\n    name: "loading___zh"\n  }, {\n    path: "/zh/nodeStatus",\n    component: router_d7f7cd30,\n    name: "nodeStatus___zh"\n  }, {\n    path: "/zh/overview",\n    component: router_2d9eea66,\n    name: "overview___zh"\n  }, {\n    path: "/zh/settings",\n    component: router_62def477,\n    name: "settings___zh"\n  }, {\n    path: "/zh/wallet/create",\n    component: router_520878a4,\n    name: "wallet-create___zh"\n  }, {\n    path: "/zh/wallet/open",\n    component: router_79489f08,\n    name: "wallet-open___zh"\n  }, {\n    path: "/",\n    component: router_bf0106a4,\n    name: "index___en"\n  }],\n  fallback: false\n};\nfunction createRouter(ssrContext, config) {\n  var base = config._app && config._app.basePath || routerOptions.base;\n  var router = new vue_router_esm["a" /* default */](_objectSpread(_objectSpread({}, routerOptions), {}, {\n    base: base\n  }));\n\n  // TODO: remove in Nuxt 3\n  var originalPush = router.push;\n  router.push = function push(location) {\n    var onComplete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyFn;\n    var onAbort = arguments.length > 2 ? arguments[2] : undefined;\n    return originalPush.call(this, location, onComplete, onAbort);\n  };\n  var resolve = router.resolve.bind(router);\n  router.resolve = function (to, current, append) {\n    if (typeof to === \'string\') {\n      to = Object(dist["c" /* normalizeURL */])(to);\n    }\n    return resolve(to, current, append);\n  };\n  return router;\n}\n// CONCATENATED MODULE: ./.nuxt/components/nuxt-child.js\n\n\n/* harmony default export */ var nuxt_child = ({\n  name: \'NuxtChild\',\n  functional: true,\n  props: {\n    nuxtChildKey: {\n      type: String,\n      default: \'\'\n    },\n    keepAlive: Boolean,\n    keepAliveProps: {\n      type: Object,\n      default: undefined\n    }\n  },\n  render: function render(_, _ref) {\n    var parent = _ref.parent,\n      data = _ref.data,\n      props = _ref.props;\n    var h = parent.$createElement;\n    data.nuxtChild = true;\n    var _parent = parent;\n    var transitions = parent.$nuxt.nuxt.transitions;\n    var defaultTransition = parent.$nuxt.nuxt.defaultTransition;\n    var depth = 0;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.nuxtChild) {\n        depth++;\n      }\n      parent = parent.$parent;\n    }\n    data.nuxtChildDepth = depth;\n    var transition = transitions[depth] || defaultTransition;\n    var transitionProps = {};\n    transitionsKeys.forEach(function (key) {\n      if (typeof transition[key] !== \'undefined\') {\n        transitionProps[key] = transition[key];\n      }\n    });\n    var listeners = {};\n    listenersKeys.forEach(function (key) {\n      if (typeof transition[key] === \'function\') {\n        listeners[key] = transition[key].bind(_parent);\n      }\n    });\n    if (true) {\n      // Add triggerScroll event on beforeEnter (fix #1376)\n      var beforeEnter = listeners.beforeEnter;\n      listeners.beforeEnter = function (el) {\n        // Ensure to trigger scroll event after calling scrollBehavior\n        window.$nuxt.$nextTick(function () {\n          window.$nuxt.$emit(\'triggerScroll\');\n        });\n        if (beforeEnter) {\n          return beforeEnter.call(_parent, el);\n        }\n      };\n    }\n\n    // make sure that leave is called asynchronous (fix #5703)\n    if (transition.css === false) {\n      var leave = listeners.leave;\n\n      // only add leave listener when user didnt provide one\n      // or when it misses the done argument\n      if (!leave || leave.length < 2) {\n        listeners.leave = function (el, done) {\n          if (leave) {\n            leave.call(_parent, el);\n          }\n          _parent.$nextTick(done);\n        };\n      }\n    }\n    var routerView = h(\'routerView\', data);\n    if (props.keepAlive) {\n      routerView = h(\'keep-alive\', {\n        props: props.keepAliveProps\n      }, [routerView]);\n    }\n    return h(\'transition\', {\n      props: transitionProps,\n      on: listeners\n    }, [routerView]);\n  }\n});\nvar transitionsKeys = [\'name\', \'mode\', \'appear\', \'css\', \'type\', \'duration\', \'enterClass\', \'leaveClass\', \'appearClass\', \'enterActiveClass\', \'enterActiveClass\', \'leaveActiveClass\', \'appearActiveClass\', \'enterToClass\', \'leaveToClass\', \'appearToClass\'];\nvar listenersKeys = [\'beforeEnter\', \'enter\', \'afterEnter\', \'enterCancelled\', \'beforeLeave\', \'leave\', \'afterLeave\', \'leaveCancelled\', \'beforeAppear\', \'appear\', \'afterAppear\', \'appearCancelled\'];\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VApp/VApp.js\nvar VApp = __webpack_require__(605);\n\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./layouts/error.vue?vue&type=template&id=32c41c50&scoped=true\n\n\nvar errorvue_type_template_id_32c41c50_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(VApp["a" /* default */], [_vm.error.statusCode === 404 ? _c(\'h1\', [_vm._v("\\n    " + _vm._s(_vm.pageNotFound) + "\\n  ")]) : _c(\'h1\', [_vm._v("\\n    " + _vm._s(_vm.otherError) + "\\n  ")]), _vm._v(" "), _c(\'NuxtLink\', {\n    attrs: {\n      "to": "/web"\n    }\n  }, [_vm._v("\\n    Home\\n  ")])], 1);\n};\nvar staticRenderFns = [];\n\n// CONCATENATED MODULE: ./layouts/error.vue?vue&type=template&id=32c41c50&scoped=true\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./layouts/error.vue?vue&type=script&lang=js\n/* harmony default export */ var errorvue_type_script_lang_js = ({\n  layout: \'empty\',\n  props: {\n    error: {\n      type: Object,\n      default: null\n    }\n  },\n  head: function head() {\n    var title = this.error.statusCode === 404 ? this.pageNotFound : this.otherError;\n    return {\n      title: title\n    };\n  },\n  data: function data() {\n    return {\n      pageNotFound: \'404 Not Found\',\n      otherError: \'An error occurred\'\n    };\n  }\n});\n// CONCATENATED MODULE: ./layouts/error.vue?vue&type=script&lang=js\n /* harmony default export */ var layouts_errorvue_type_script_lang_js = (errorvue_type_script_lang_js); \n// EXTERNAL MODULE: ./layouts/error.vue?vue&type=style&index=0&id=32c41c50&prod&scoped=true&lang=css\nvar errorvue_type_style_index_0_id_32c41c50_prod_scoped_true_lang_css = __webpack_require__(429);\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(57);\n\n// CONCATENATED MODULE: ./layouts/error.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar error_component = Object(componentNormalizer["a" /* default */])(\n  layouts_errorvue_type_script_lang_js,\n  errorvue_type_template_id_32c41c50_scoped_true_render,\n  staticRenderFns,\n  false,\n  null,\n  "32c41c50",\n  null\n  \n)\n\n/* harmony default export */ var layouts_error = (error_component.exports);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__(18);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js\nvar es_regexp_to_string = __webpack_require__(36);\n\n// CONCATENATED MODULE: ./.nuxt/components/nuxt.js\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var components_nuxt = ({\n  name: \'Nuxt\',\n  components: {\n    NuxtChild: nuxt_child,\n    NuxtError: layouts_error\n  },\n  props: {\n    nuxtChildKey: {\n      type: String,\n      default: undefined\n    },\n    keepAlive: Boolean,\n    keepAliveProps: {\n      type: Object,\n      default: undefined\n    },\n    name: {\n      type: String,\n      default: \'default\'\n    }\n  },\n  errorCaptured: function errorCaptured(error) {\n    // if we receive and error while showing the NuxtError component\n    // capture the error and force an immediate update so we re-render\n    // without the NuxtError component\n    if (this.displayingNuxtError) {\n      this.errorFromNuxtError = error;\n      this.$forceUpdate();\n    }\n  },\n  computed: {\n    routerViewKey: function routerViewKey() {\n      // If nuxtChildKey prop is given or current route has children\n      if (typeof this.nuxtChildKey !== \'undefined\' || this.$route.matched.length > 1) {\n        return this.nuxtChildKey || Object(utils["c" /* compile */])(this.$route.matched[0].path)(this.$route.params);\n      }\n      var _this$$route$matched = Object(slicedToArray["a" /* default */])(this.$route.matched, 1),\n        matchedRoute = _this$$route$matched[0];\n      if (!matchedRoute) {\n        return this.$route.path;\n      }\n      var Component = matchedRoute.components.default;\n      if (Component && Component.options) {\n        var options = Component.options;\n        if (options.key) {\n          return typeof options.key === \'function\' ? options.key(this.$route) : options.key;\n        }\n      }\n      var strict = /\\/$/.test(matchedRoute.path);\n      return strict ? this.$route.path : this.$route.path.replace(/\\/$/, \'\');\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    vue_runtime_esm["a" /* default */].util.defineReactive(this, \'nuxt\', this.$root.$options.nuxt);\n  },\n  render: function render(h) {\n    var _this = this;\n    // if there is no error\n    if (!this.nuxt.err) {\n      // Directly return nuxt child\n      return h(\'NuxtChild\', {\n        key: this.routerViewKey,\n        props: this.$props\n      });\n    }\n\n    // if an error occurred within NuxtError show a simple\n    // error message instead to prevent looping\n    if (this.errorFromNuxtError) {\n      this.$nextTick(function () {\n        return _this.errorFromNuxtError = false;\n      });\n      return h(\'div\', {}, [h(\'h2\', \'An error occurred while showing the error page\'), h(\'p\', \'Unfortunately an error occurred and while showing the error page another error occurred\'), h(\'p\', "Error details: ".concat(this.errorFromNuxtError.toString())), h(\'nuxt-link\', {\n        props: {\n          to: \'/\'\n        }\n      }, \'Go back to home\')]);\n    }\n\n    // track if we are showing the NuxtError component\n    this.displayingNuxtError = true;\n    this.$nextTick(function () {\n      return _this.displayingNuxtError = false;\n    });\n    return h(layouts_error, {\n      props: {\n        error: this.nuxt.err\n      }\n    });\n  }\n});\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js\nvar es_symbol_description = __webpack_require__(48);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js\nvar es_symbol_iterator = __webpack_require__(51);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js\nvar es_array_from = __webpack_require__(47);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__(37);\n\n// EXTERNAL MODULE: ./styles/global.scss\nvar global = __webpack_require__(431);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VAppBar/VAppBar.js + 2 modules\nvar VAppBar = __webpack_require__(614);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VAvatar/VAvatar.js\nvar VAvatar = __webpack_require__(250);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VBadge/VBadge.js\nvar VBadge = __webpack_require__(608);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VBtn/VBtn.js\nvar VBtn = __webpack_require__(248);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VGrid/VContainer.js\nvar VContainer = __webpack_require__(609);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VContent/VContent.js + 1 modules\nvar VContent = __webpack_require__(615);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VGrid/VFlex.js\nvar VFlex = __webpack_require__(607);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VIcon/VIcon.js\nvar VIcon = __webpack_require__(160);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VList/VList.js\nvar VList = __webpack_require__(252);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VList/VListItem.js\nvar VListItem = __webpack_require__(161);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VList/index.js + 4 modules\nvar components_VList = __webpack_require__(78);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VMenu/VMenu.js\nvar VMenu = __webpack_require__(593);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VTabs/VTab.js\nvar VTab = __webpack_require__(606);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VTabs/VTabs.js + 3 modules\nvar VTabs = __webpack_require__(613);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VTabs/VTabsSlider.js\nvar VTabsSlider = __webpack_require__(350);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VToolbar/index.js\nvar VToolbar = __webpack_require__(202);\n\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./layouts/default.vue?vue&type=template&id=c4ade270\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultvue_type_template_id_c4ade270_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(VApp["a" /* default */], [_c(VAppBar["a" /* default */], {\n    attrs: {\n      "dark": "",\n      "app": "",\n      "color": "indigo",\n      "dense": "",\n      "fade-img-on-scroll": ""\n    },\n    scopedSlots: _vm._u([{\n      key: "extension",\n      fn: function fn() {\n        return [_vm.update ? _c(VTabs["a" /* default */], {\n          attrs: {\n            "align-with-title": "",\n            "background-color": "transparent"\n          }\n        }, [_c(VTab["a" /* default */], {\n          attrs: {\n            "href": "#nodeStatus",\n            "to": _vm.localePath(\'nodeStatus\')\n          }\n        }, [_vm._v(_vm._s(_vm.$t(\'menu.NODE_STATUS\')))]), _vm._v(" "), _c(VTab["a" /* default */], {\n          attrs: {\n            "href": "#overview",\n            "to": _vm.localePath(\'overview\')\n          }\n        }, [_vm._v(_vm._s(_vm.$t(\'menu.OVERVIEW\')))]), _vm._v(" "), _c(VTab["a" /* default */], {\n          attrs: {\n            "href": "#settings",\n            "to": _vm.localePath(\'settings\')\n          }\n        }, [_vm._v(_vm._s(_vm.$t(\'menu.SETTINGS\')))]), _vm._v(" "), _c(VTabsSlider["a" /* default */], {\n          attrs: {\n            "color": "pink accent-3"\n          }\n        })], 1) : _vm._e()];\n      },\n      proxy: true\n    }])\n  }, [_c(VToolbar["a" /* VToolbarTitle */], {\n    staticClass: "ml-2"\n  }, [_c(\'h3\', [_c(VAvatar["a" /* default */], {\n    attrs: {\n      "tile": "",\n      "size": "35"\n    }\n  }, [_c(\'img\', {\n    attrs: {\n      "src": __webpack_require__(328),\n      "alt": "avatar"\n    }\n  })]), _vm._v("\\n                NKN WEB\\n            ")], 1)]), _vm._v(" "), _c(VFlex["a" /* default */], {\n    staticClass: "toolbar",\n    attrs: {\n      "d-flex": "",\n      "align-center": "",\n      "justify-end": ""\n    }\n  }, [_c(\'span\', {\n    staticClass: "mr-1"\n  }, [_vm._v(_vm._s(_vm.$t(\'node_status.NODE_STATUS\')) + ":")]), _vm._v(" "), _c(\'NodeRunStatus\', {\n    attrs: {\n      "node-status": this.nodeStatus\n    }\n  }), _vm._v(" "), _c(\'div\', {\n    staticClass: "divider-vertical mx-3"\n  }), _vm._v(" "), _c(VBadge["a" /* default */], {\n    attrs: {\n      "color": "transparent"\n    }\n  }, [_c(\'span\', [_vm._v(_vm._s(_vm.$t(\'node_status.NODE_VERSION\')) + ": " + _vm._s(_vm.nodeStatus.version))])]), _vm._v(" "), _c(\'div\', {\n    staticClass: "divider-vertical mx-3"\n  }), _vm._v(" "), _c(VMenu["a" /* default */], {\n    attrs: {\n      "offset-y": ""\n    },\n    scopedSlots: _vm._u([{\n      key: "activator",\n      fn: function fn(_ref) {\n        var on = _ref.on;\n        return [_c(VBtn["a" /* default */], _vm._g({\n          attrs: {\n            "icon": ""\n          }\n        }, on), [_c(VIcon["a" /* default */], [_vm._v("language")])], 1)];\n      }\n    }])\n  }, [_vm._v(" "), _c(VList["a" /* default */], _vm._l(_vm.availableLocales, function (locale) {\n    return _c(VListItem["a" /* default */], {\n      key: locale.code,\n      attrs: {\n        "to": _vm.switchLocalePath(locale.code)\n      },\n      on: {\n        "click": _vm.reload\n      }\n    }, [_c(components_VList["a" /* VListItemContent */], [_c(components_VList["b" /* VListItemTitle */], [_vm._v(_vm._s(locale.name))])], 1)], 1);\n  }), 1)], 1)], 1)], 1), _vm._v(" "), _c(VContent["a" /* default */], [_c(VContainer["a" /* default */], {\n    attrs: {\n      "fluid": "",\n      "grid-list-lg": ""\n    }\n  }, [_c(\'nuxt\')], 1), _vm._v(" "), _c(\'Footer\')], 1), _vm._v(" "), _c(\'WatchOutBoundCount\')], 1);\n};\nvar defaultvue_type_template_id_c4ade270_staticRenderFns = [];\n\n// CONCATENATED MODULE: ./layouts/default.vue?vue&type=template&id=c4ade270\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.timers.js\nvar web_timers = __webpack_require__(50);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VCard/VCard.js\nvar VCard = __webpack_require__(254);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VCard/index.js\nvar components_VCard = __webpack_require__(143);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VDivider/VDivider.js\nvar VDivider = __webpack_require__(594);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VFooter/VFooter.js\nvar VFooter = __webpack_require__(610);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VTooltip/VTooltip.js\nvar VTooltip = __webpack_require__(611);\n\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./components/Footer.vue?vue&type=template&id=02bd878a\n\n\n\n\n\n\n\n\nvar Footervue_type_template_id_02bd878a_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(VFooter["a" /* default */], {\n    staticClass: "pl-0 pr-0",\n    attrs: {\n      "height": "auto"\n    }\n  }, [_c(VCard["a" /* default */], {\n    staticClass: "indigo lighten-1 text-center",\n    attrs: {\n      "flat": "",\n      "dark": "",\n      "tile": "",\n      "width": "100%"\n    }\n  }, [_c(components_VCard["b" /* VCardText */], _vm._l(_vm.icons, function (item) {\n    return _c(VTooltip["a" /* default */], {\n      key: item.icon,\n      attrs: {\n        "top": ""\n      },\n      scopedSlots: _vm._u([{\n        key: "activator",\n        fn: function fn(_ref) {\n          var on = _ref.on;\n          return [_c(VBtn["a" /* default */], _vm._g({\n            staticClass: "mx-3 white--text",\n            attrs: {\n              "href": item.url,\n              "target": "_blank",\n              "icon": ""\n            }\n          }, on), [_c(VIcon["a" /* default */], {\n            attrs: {\n              "size": "24px"\n            }\n          }, [_vm._v(_vm._s(item.icon))])], 1)];\n        }\n      }], null, true)\n    }, [_vm._v(" "), _c(\'span\', [_vm._v(_vm._s(item.tooltip))])]);\n  }), 1), _vm._v(" "), _c(components_VCard["b" /* VCardText */], {\n    staticClass: "white--text pt-0"\n  }, [_c(\'h4\', [_vm._v(_vm._s(_vm.$t(\'footer.TITLE\')))]), _vm._v("\\n      " + _vm._s(_vm.$t(\'footer.TEXT\')) + "\\n    ")]), _vm._v(" "), _c(VDivider["a" /* default */]), _vm._v(" "), _c(components_VCard["b" /* VCardText */], {\n    staticClass: "white--text"\n  }, [_vm._v("\\n      Copyright © 2019 — "), _c(\'strong\', [_vm._v("nkn-web")])])], 1)], 1);\n};\nvar Footervue_type_template_id_02bd878a_staticRenderFns = [];\n\n// CONCATENATED MODULE: ./components/Footer.vue?vue&type=template&id=02bd878a\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./components/Footer.vue?vue&type=script&lang=js\n/* harmony default export */ var Footervue_type_script_lang_js = ({\n  data: function data() {\n    return {\n      icons: [{\n        icon: \'fab fa-github\',\n        tooltip: \'GitHub\',\n        url: \'https://github.com/nknorg\'\n      }, {\n        icon: \'fab fa-discord\',\n        tooltip: \'Discord\',\n        url: \'https://discord.gg/hrZvrVa\'\n      }, {\n        icon: \'fab fa-twitter\',\n        tooltip: \'Twitter\',\n        url: \'https://twitter.com/NKN_ORG\'\n      }, {\n        icon: \'fas fa-comments\',\n        tooltip: \'Forum\',\n        url: \'https://forum.nkn.org/\'\n      }, {\n        icon: \'fab fa-youtube\',\n        tooltip: \'Youtube\',\n        url: \'http://www.youtube.com/c/NKNORG\'\n      }, {\n        icon: \'fab fa-telegram\',\n        tooltip: \'Telegram\',\n        url: \'https://t.me/nknorg\'\n      }, {\n        icon: \'fab fa-medium\',\n        tooltip: \'Medium\',\n        url: \'https://medium.com/nknetwork\'\n      }]\n    };\n  }\n});\n// CONCATENATED MODULE: ./components/Footer.vue?vue&type=script&lang=js\n /* harmony default export */ var components_Footervue_type_script_lang_js = (Footervue_type_script_lang_js); \n// CONCATENATED MODULE: ./components/Footer.vue\n\n\n\n\n\n/* normalize component */\n\nvar Footer_component = Object(componentNormalizer["a" /* default */])(\n  components_Footervue_type_script_lang_js,\n  Footervue_type_template_id_02bd878a_render,\n  Footervue_type_template_id_02bd878a_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var Footer = (Footer_component.exports);\n// EXTERNAL MODULE: ./components/status/NodeRunStatus.vue + 4 modules\nvar NodeRunStatus = __webpack_require__(193);\n\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/components/VSnackbar/VSnackbar.js\nvar VSnackbar = __webpack_require__(612);\n\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./components/widget/WatchOutBoundCount.vue?vue&type=template&id=4ae82528&scoped=true\n\n\n\nvar WatchOutBoundCountvue_type_template_id_4ae82528_scoped_true_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.inBoundCount === 0 ? _c(VSnackbar["a" /* default */], {\n    attrs: {\n      "color": "warning",\n      "multi-line": "",\n      "timeout": _vm.timeout,\n      "right": ""\n    },\n    model: {\n      value: _vm.visible,\n      callback: function callback($$v) {\n        _vm.visible = $$v;\n      },\n      expression: "visible"\n    }\n  }, [_vm._v("\\n    " + _vm._s(this.$t(\'neighbor.WARNING\')) + "\\n    "), _c(VBtn["a" /* default */], {\n    attrs: {\n      "dark": "",\n      "text": ""\n    },\n    on: {\n      "click": _vm.close\n    }\n  }, [_vm._v("\\n        Close\\n    ")])], 1) : _vm._e();\n};\nvar WatchOutBoundCountvue_type_template_id_4ae82528_scoped_true_staticRenderFns = [];\n\n// CONCATENATED MODULE: ./components/widget/WatchOutBoundCount.vue?vue&type=template&id=4ae82528&scoped=true\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./components/widget/WatchOutBoundCount.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\n\nfunction WatchOutBoundCountvue_type_script_lang_js_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction WatchOutBoundCountvue_type_script_lang_js_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? WatchOutBoundCountvue_type_script_lang_js_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : WatchOutBoundCountvue_type_script_lang_js_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n/* harmony default export */ var WatchOutBoundCountvue_type_script_lang_js = ({\n  name: "WatchOutBoundCount",\n  computed: WatchOutBoundCountvue_type_script_lang_js_objectSpread({}, Object(vuex_esm["c" /* mapGetters */])({\n    inBoundCount: \'node/inBoundCount\'\n  })),\n  data: function data() {\n    return {\n      visible: true,\n      mode: \'\',\n      timeout: 0\n      // text: this.$t(\'neighbor.WARNING\')\n    };\n  },\n  methods: {\n    close: function close() {\n      var _this = this;\n      this.visible = false;\n      setTimeout(function () {\n        _this.visible = true;\n      }, 10000);\n    }\n  }\n});\n// CONCATENATED MODULE: ./components/widget/WatchOutBoundCount.vue?vue&type=script&lang=js\n /* harmony default export */ var widget_WatchOutBoundCountvue_type_script_lang_js = (WatchOutBoundCountvue_type_script_lang_js); \n// CONCATENATED MODULE: ./components/widget/WatchOutBoundCount.vue\n\n\n\n\n\n/* normalize component */\n\nvar WatchOutBoundCount_component = Object(componentNormalizer["a" /* default */])(\n  widget_WatchOutBoundCountvue_type_script_lang_js,\n  WatchOutBoundCountvue_type_template_id_4ae82528_scoped_true_render,\n  WatchOutBoundCountvue_type_template_id_4ae82528_scoped_true_staticRenderFns,\n  false,\n  null,\n  "4ae82528",\n  null\n  \n)\n\n/* harmony default export */ var WatchOutBoundCount = (WatchOutBoundCount_component.exports);\n// EXTERNAL MODULE: ./styles/status.scss\nvar styles_status = __webpack_require__(333);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./layouts/default.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\n\nfunction defaultvue_type_script_lang_js_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction defaultvue_type_script_lang_js_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? defaultvue_type_script_lang_js_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : defaultvue_type_script_lang_js_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n/* harmony default export */ var defaultvue_type_script_lang_js = ({\n  components: {\n    Footer: Footer,\n    WatchOutBoundCount: WatchOutBoundCount,\n    NodeRunStatus: NodeRunStatus["a" /* default */]\n  },\n  data: function data() {\n    return {\n      clipped: false,\n      update: true\n    };\n  },\n  computed: defaultvue_type_script_lang_js_objectSpread(defaultvue_type_script_lang_js_objectSpread({}, Object(vuex_esm["d" /* mapState */])({\n    nodeStatus: function nodeStatus(state) {\n      return state.node.nodeStatus;\n    }\n  })), {}, {\n    availableLocales: function availableLocales() {\n      return this.$i18n.locales;\n    }\n  }),\n  methods: {\n    reload: function reload() {\n      var _this = this;\n      setTimeout(function () {\n        // prevent execution before link to\n        _this.update = false;\n        _this.$nextTick(function () {\n          _this.update = true;\n        });\n      }, 10);\n    }\n  }\n});\n// CONCATENATED MODULE: ./layouts/default.vue?vue&type=script&lang=js\n /* harmony default export */ var layouts_defaultvue_type_script_lang_js = (defaultvue_type_script_lang_js); \n// CONCATENATED MODULE: ./layouts/default.vue\n\n\n\n\n\n/* normalize component */\n\nvar default_component = Object(componentNormalizer["a" /* default */])(\n  layouts_defaultvue_type_script_lang_js,\n  defaultvue_type_template_id_c4ade270_render,\n  defaultvue_type_template_id_c4ade270_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var layouts_default = (default_component.exports);\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./layouts/null.vue?vue&type=template&id=7f92a7e4\n\n\nvar nullvue_type_template_id_7f92a7e4_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(VApp["a" /* default */], [_c(\'nuxt\')], 1);\n};\nvar nullvue_type_template_id_7f92a7e4_staticRenderFns = [];\n\n// CONCATENATED MODULE: ./layouts/null.vue?vue&type=template&id=7f92a7e4\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./layouts/null.vue?vue&type=script&lang=js\n/* harmony default export */ var nullvue_type_script_lang_js = ({\n  layout: \'null\'\n});\n// CONCATENATED MODULE: ./layouts/null.vue?vue&type=script&lang=js\n /* harmony default export */ var layouts_nullvue_type_script_lang_js = (nullvue_type_script_lang_js); \n// CONCATENATED MODULE: ./layouts/null.vue\n\n\n\n\n\n/* normalize component */\n\nvar null_component = Object(componentNormalizer["a" /* default */])(\n  layouts_nullvue_type_script_lang_js,\n  nullvue_type_template_id_7f92a7e4_render,\n  nullvue_type_template_id_7f92a7e4_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var layouts_null = (null_component.exports);\n// CONCATENATED MODULE: ./node_modules/vuetify-loader/lib/loader.js??ref--4!./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--7!./node_modules/vue-loader/lib??vue-loader-options!./layouts/sign.vue?vue&type=template&id=428f5f96\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar signvue_type_template_id_428f5f96_render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(VApp["a" /* default */], [_c(VAppBar["a" /* default */], {\n    attrs: {\n      "dark": "",\n      "app": "",\n      "color": "indigo",\n      "dense": "",\n      "fade-img-on-scroll": ""\n    }\n  }, [_c(VToolbar["a" /* VToolbarTitle */], {\n    staticClass: "ml-2"\n  }, [_c(\'h3\', {\n    staticClass: "pt-0 mt-2"\n  }, [_c(VAvatar["a" /* default */], {\n    attrs: {\n      "tile": "",\n      "size": "35"\n    }\n  }, [_c(\'img\', {\n    attrs: {\n      "src": __webpack_require__(328),\n      "alt": "avatar"\n    }\n  })]), _vm._v("\\n        NKN WEB\\n      ")], 1)]), _vm._v(" "), _c(VFlex["a" /* default */], {\n    staticClass: "toolbar",\n    attrs: {\n      "d-flex": "",\n      "align-center": "",\n      "justify-end": ""\n    }\n  }, [_c(VMenu["a" /* default */], {\n    attrs: {\n      "offset-y": ""\n    },\n    scopedSlots: _vm._u([{\n      key: "activator",\n      fn: function fn(_ref) {\n        var on = _ref.on;\n        return [_c(VBtn["a" /* default */], _vm._g({\n          attrs: {\n            "icon": ""\n          }\n        }, on), [_c(VIcon["a" /* default */], [_vm._v("language")])], 1)];\n      }\n    }])\n  }, [_vm._v(" "), _c(VList["a" /* default */], _vm._l(_vm.availableLocales, function (locale) {\n    return _c(VListItem["a" /* default */], {\n      key: locale.code,\n      attrs: {\n        "to": _vm.switchLocalePath(locale.code)\n      },\n      on: {\n        "click": _vm.reload\n      }\n    }, [_c(components_VList["a" /* VListItemContent */], [_c(components_VList["b" /* VListItemTitle */], [_vm._v(_vm._s(locale.name))])], 1)], 1);\n  }), 1)], 1)], 1)], 1), _vm._v(" "), _c(VContent["a" /* default */], [_c(VContainer["a" /* default */], {\n    attrs: {\n      "fluid": "",\n      "grid-list-lg": ""\n    }\n  }, [_c(\'nuxt\')], 1), _vm._v(" "), _c(\'Footer\')], 1)], 1);\n};\nvar signvue_type_template_id_428f5f96_staticRenderFns = [];\n\n// CONCATENATED MODULE: ./layouts/sign.vue?vue&type=template&id=428f5f96\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./layouts/sign.vue?vue&type=script&lang=js\n\n\n\n\n\n\n\n\n\nfunction signvue_type_script_lang_js_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction signvue_type_script_lang_js_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? signvue_type_script_lang_js_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : signvue_type_script_lang_js_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n/* harmony default export */ var signvue_type_script_lang_js = ({\n  components: {\n    Footer: Footer,\n    NodeRunStatus: NodeRunStatus["a" /* default */]\n  },\n  data: function data() {\n    return {\n      clipped: false,\n      update: true\n    };\n  },\n  computed: signvue_type_script_lang_js_objectSpread(signvue_type_script_lang_js_objectSpread({}, Object(vuex_esm["d" /* mapState */])({\n    nodeStatus: function nodeStatus(state) {\n      return state.node.nodeStatus;\n    }\n  })), {}, {\n    availableLocales: function availableLocales() {\n      return this.$i18n.locales;\n    }\n  }),\n  methods: {\n    reload: function reload() {\n      var _this = this;\n      setTimeout(function () {\n        // prevent execution before link to\n        _this.update = false;\n        _this.$nextTick(function () {\n          _this.update = true;\n        });\n      }, 10);\n    }\n  }\n});\n// CONCATENATED MODULE: ./layouts/sign.vue?vue&type=script&lang=js\n /* harmony default export */ var layouts_signvue_type_script_lang_js = (signvue_type_script_lang_js); \n// CONCATENATED MODULE: ./layouts/sign.vue\n\n\n\n\n\n/* normalize component */\n\nvar sign_component = Object(componentNormalizer["a" /* default */])(\n  layouts_signvue_type_script_lang_js,\n  signvue_type_template_id_428f5f96_render,\n  signvue_type_template_id_428f5f96_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var sign = (sign_component.exports);\n// CONCATENATED MODULE: ./.nuxt/App.js\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar layouts = {\n  "_default": Object(utils["s" /* sanitizeComponent */])(layouts_default),\n  "_null": Object(utils["s" /* sanitizeComponent */])(layouts_null),\n  "_sign": Object(utils["s" /* sanitizeComponent */])(sign)\n};\n/* harmony default export */ var App = ({\n  render: function render(h, props) {\n    var layoutEl = h(this.layout || \'nuxt\');\n    var templateEl = h(\'div\', {\n      domProps: {\n        id: \'__layout\'\n      },\n      key: this.layoutName\n    }, [layoutEl]);\n    var transitionEl = h(\'transition\', {\n      props: {\n        name: \'layout\',\n        mode: \'out-in\'\n      },\n      on: {\n        beforeEnter: function beforeEnter(el) {\n          // Ensure to trigger scroll event after calling scrollBehavior\n          window.$nuxt.$nextTick(function () {\n            window.$nuxt.$emit(\'triggerScroll\');\n          });\n        }\n      }\n    }, [templateEl]);\n    return h(\'div\', {\n      domProps: {\n        id: \'__nuxt\'\n      }\n    }, [transitionEl]);\n  },\n  data: function data() {\n    return {\n      isOnline: true,\n      layout: null,\n      layoutName: \'\',\n      nbFetching: 0\n    };\n  },\n  beforeCreate: function beforeCreate() {\n    vue_runtime_esm["a" /* default */].util.defineReactive(this, \'nuxt\', this.$options.nuxt);\n  },\n  created: function created() {\n    // Add this.$nuxt in child instances\n    this.$root.$options.$nuxt = this;\n    if (true) {\n      // add to window so we can listen when ready\n      window.$nuxt = this;\n      this.refreshOnlineStatus();\n      // Setup the listeners\n      window.addEventListener(\'online\', this.refreshOnlineStatus);\n      window.addEventListener(\'offline\', this.refreshOnlineStatus);\n    }\n    // Add $nuxt.error()\n    this.error = this.nuxt.error;\n    // Add $nuxt.context\n    this.context = this.$options.context;\n  },\n  watch: {\n    \'nuxt.err\': \'errorChanged\'\n  },\n  computed: {\n    isOffline: function isOffline() {\n      return !this.isOnline;\n    },\n    isFetching: function isFetching() {\n      return this.nbFetching > 0;\n    },\n    isPreview: function isPreview() {\n      return Boolean(this.$options.previewData);\n    }\n  },\n  methods: {\n    refreshOnlineStatus: function refreshOnlineStatus() {\n      if (true) {\n        if (typeof window.navigator.onLine === \'undefined\') {\n          // If the browser doesn\'t support connection status reports\n          // assume that we are online because most apps\' only react\n          // when they now that the connection has been interrupted\n          this.isOnline = true;\n        } else {\n          this.isOnline = window.navigator.onLine;\n        }\n      }\n    },\n    refresh: function refresh() {\n      var _this = this;\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var pages, promises;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              pages = Object(utils["h" /* getMatchedComponentsInstances */])(_this.$route);\n              if (pages.length) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt("return");\n            case 3:\n              promises = pages.map( /*#__PURE__*/function () {\n                var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(page) {\n                  var p, _iterator, _step, component;\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        p = []; // Old fetch\n                        if (page.$options.fetch && page.$options.fetch.length) {\n                          p.push(Object(utils["q" /* promisify */])(page.$options.fetch, _this.context));\n                        }\n                        if (page.$options.asyncData) {\n                          p.push(Object(utils["q" /* promisify */])(page.$options.asyncData, _this.context).then(function (newData) {\n                            for (var key in newData) {\n                              vue_runtime_esm["a" /* default */].set(page.$data, key, newData[key]);\n                            }\n                          }));\n                        }\n\n                        // Wait for asyncData & old fetch to finish\n                        _context.next = 5;\n                        return Promise.all(p);\n                      case 5:\n                        // Cleanup refs\n                        p = [];\n                        if (page.$fetch) {\n                          p.push(page.$fetch());\n                        }\n                        // Get all component instance to call $fetch\n                        _iterator = _createForOfIteratorHelper(Object(utils["e" /* getChildrenComponentInstancesUsingFetch */])(page.$vnode.componentInstance));\n                        try {\n                          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                            component = _step.value;\n                            p.push(component.$fetch());\n                          }\n                        } catch (err) {\n                          _iterator.e(err);\n                        } finally {\n                          _iterator.f();\n                        }\n                        return _context.abrupt("return", Promise.all(p));\n                      case 10:\n                      case "end":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n              _context2.prev = 4;\n              _context2.next = 7;\n              return Promise.all(promises);\n            case 7:\n              _context2.next = 13;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2["catch"](4);\n              Object(utils["k" /* globalHandleError */])(_context2.t0);\n              _this.error(_context2.t0);\n            case 13:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[4, 9]]);\n      }))();\n    },\n    errorChanged: function errorChanged() {\n      if (this.nuxt.err) {\n        var errorLayout = (layouts_error.options || layouts_error).layout;\n        if (typeof errorLayout === \'function\') {\n          errorLayout = errorLayout(this.context);\n        }\n        this.setLayout(errorLayout);\n      }\n    },\n    setLayout: function setLayout(layout) {\n      if (!layout || !layouts[\'_\' + layout]) {\n        layout = \'default\';\n      }\n      this.layoutName = layout;\n      this.layout = layouts[\'_\' + layout];\n      return this.layout;\n    },\n    loadLayout: function loadLayout(layout) {\n      if (!layout || !layouts[\'_\' + layout]) {\n        layout = \'default\';\n      }\n      return Promise.resolve(layouts[\'_\' + layout]);\n    }\n  }\n});\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__(46);\n\n// CONCATENATED MODULE: ./.nuxt/store.js\n\n\n\n\n\nvue_runtime_esm["a" /* default */].use(vuex_esm["a" /* default */]);\nvar VUEX_PROPERTIES = [\'state\', \'getters\', \'actions\', \'mutations\'];\nvar store_store = {};\n(function updateModules() {\n  store_store = normalizeRoot(__webpack_require__(499), \'store/index.js\');\n\n  // If store is an exported method = classic mode (deprecated)\n\n  // Enforce store modules\n  store_store.modules = store_store.modules || {};\n  resolveStoreModules(__webpack_require__(255), \'common.js\');\n  resolveStoreModules(__webpack_require__(256), \'node.js\');\n  resolveStoreModules(__webpack_require__(257), \'wallet.js\');\n\n  // If the environment supports hot reloading...\n})();\n\n// createStore\nvar createStore = store_store instanceof Function ? store_store : function () {\n  return new vuex_esm["a" /* default */].Store(Object.assign({\n    strict: "production" !== \'production\'\n  }, store_store));\n};\nfunction normalizeRoot(moduleData, filePath) {\n  moduleData = moduleData.default || moduleData;\n  if (moduleData.commit) {\n    throw new Error("[nuxt] ".concat(filePath, " should export a method that returns a Vuex instance."));\n  }\n  if (typeof moduleData !== \'function\') {\n    // Avoid TypeError: setting a property that has only a getter when overwriting top level keys\n    moduleData = Object.assign({}, moduleData);\n  }\n  return normalizeModule(moduleData, filePath);\n}\nfunction normalizeModule(moduleData, filePath) {\n  if (moduleData.state && typeof moduleData.state !== \'function\') {\n    console.warn("\'state\' should be a method that returns an object in ".concat(filePath));\n    var _state = Object.assign({}, moduleData.state);\n    // Avoid TypeError: setting a property that has only a getter when overwriting top level keys\n    moduleData = Object.assign({}, moduleData, {\n      state: function state() {\n        return _state;\n      }\n    });\n  }\n  return moduleData;\n}\nfunction resolveStoreModules(moduleData, filename) {\n  moduleData = moduleData.default || moduleData;\n  // Remove store src + extension (./foo/index.js -> foo/index)\n  var namespace = filename.replace(/\\.(js|mjs)$/, \'\');\n  var namespaces = namespace.split(\'/\');\n  var moduleName = namespaces[namespaces.length - 1];\n  var filePath = "store/".concat(filename);\n  moduleData = moduleName === \'state\' ? normalizeState(moduleData, filePath) : normalizeModule(moduleData, filePath);\n\n  // If src is a known Vuex property\n  if (VUEX_PROPERTIES.includes(moduleName)) {\n    var property = moduleName;\n    var propertyStoreModule = getStoreModule(store_store, namespaces, {\n      isProperty: true\n    });\n\n    // Replace state since it\'s a function\n    mergeProperty(propertyStoreModule, moduleData, property);\n    return;\n  }\n\n  // If file is foo/index.js, it should be saved as foo\n  var isIndexModule = moduleName === \'index\';\n  if (isIndexModule) {\n    namespaces.pop();\n    moduleName = namespaces[namespaces.length - 1];\n  }\n  var storeModule = getStoreModule(store_store, namespaces);\n  for (var _i = 0, _VUEX_PROPERTIES = VUEX_PROPERTIES; _i < _VUEX_PROPERTIES.length; _i++) {\n    var _property = _VUEX_PROPERTIES[_i];\n    mergeProperty(storeModule, moduleData[_property], _property);\n  }\n  if (moduleData.namespaced === false) {\n    delete storeModule.namespaced;\n  }\n}\nfunction normalizeState(moduleData, filePath) {\n  if (typeof moduleData !== \'function\') {\n    console.warn("".concat(filePath, " should export a method that returns an object"));\n    var state = Object.assign({}, moduleData);\n    return function () {\n      return state;\n    };\n  }\n  return normalizeModule(moduleData, filePath);\n}\nfunction getStoreModule(storeModule, namespaces) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    _ref$isProperty = _ref.isProperty,\n    isProperty = _ref$isProperty === void 0 ? false : _ref$isProperty;\n  // If ./mutations.js\n  if (!namespaces.length || isProperty && namespaces.length === 1) {\n    return storeModule;\n  }\n  var namespace = namespaces.shift();\n  storeModule.modules[namespace] = storeModule.modules[namespace] || {};\n  storeModule.modules[namespace].namespaced = true;\n  storeModule.modules[namespace].modules = storeModule.modules[namespace].modules || {};\n  return getStoreModule(storeModule.modules[namespace], namespaces, {\n    isProperty: isProperty\n  });\n}\nfunction mergeProperty(storeModule, moduleData, property) {\n  if (!moduleData) {\n    return;\n  }\n  if (property === \'state\') {\n    storeModule.state = moduleData || storeModule.state;\n  } else {\n    storeModule[property] = Object.assign({}, storeModule[property], moduleData);\n  }\n}\n// EXTERNAL MODULE: ./node_modules/vuetify/lib/framework.js + 18 modules\nvar framework = __webpack_require__(166);\n\n// CONCATENATED MODULE: ./.nuxt/vuetify/options.js\n/* harmony default export */ var vuetify_options = ({\n  "theme": {\n    "primary": "#1976d2",\n    "accent": "#424242",\n    "secondary": "#ff8f00",\n    "info": "#26a69a",\n    "warning": "#ffc107",\n    "error": "#dd2c00",\n    "success": "#00e676"\n  }\n});\n// CONCATENATED MODULE: ./.nuxt/vuetify/plugin.js\n\n\n\nvue_runtime_esm["a" /* default */].use(framework["a" /* default */], {});\n/* harmony default export */ var vuetify_plugin = (function (ctx) {\n  var vuetifyOptions = typeof vuetify_options === \'function\' ? vuetify_options(ctx) : vuetify_options;\n  vuetifyOptions.icons = vuetifyOptions.icons || {};\n  vuetifyOptions.icons.iconfont = \'mdi\';\n  var vuetify = new framework["a" /* default */](vuetifyOptions);\n  ctx.app.vuetify = vuetify;\n  ctx.$vuetify = vuetify.framework;\n});\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js\nvar es_array_concat = __webpack_require__(29);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js\nvar es_array_find = __webpack_require__(86);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js\nvar es_object_entries = __webpack_require__(237);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js\nvar es_string_includes = __webpack_require__(68);\n\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/options.js\n\n\n\nvar Constants = {\n  COMPONENT_OPTIONS_KEY: "nuxtI18n",\n  STRATEGIES: {\n    "PREFIX": "prefix",\n    "PREFIX_EXCEPT_DEFAULT": "prefix_except_default",\n    "PREFIX_AND_DEFAULT": "prefix_and_default",\n    "NO_PREFIX": "no_prefix"\n  }\n};\nvar nuxtOptions = {\n  isUniversalMode: false,\n  trailingSlash: undefined\n};\nvar options_options = {\n  vueI18n: {},\n  vueI18nLoader: false,\n  locales: [{\n    "code": "en",\n    "name": "English",\n    "iso": "en-US",\n    "file": "en/index.js"\n  }, {\n    "code": "zh",\n    "name": "简体中文",\n    "iso": "zh-CN",\n    "file": "zh/index.js"\n  }],\n  defaultLocale: "en",\n  defaultDirection: "ltr",\n  routesNameSeparator: "___",\n  defaultLocaleRouteNameSuffix: "default",\n  sortRoutes: true,\n  strategy: "prefix_except_default",\n  lazy: true,\n  langDir: "/Users/skysniper/nkn/nkn/dashboard/web/locales",\n  rootRedirect: null,\n  detectBrowserLanguage: {\n    "alwaysRedirect": false,\n    "cookieCrossOrigin": false,\n    "cookieDomain": null,\n    "cookieKey": "i18n_redirected",\n    "cookieSecure": false,\n    "fallbackLocale": "en",\n    "onlyOnNoPrefix": false,\n    "onlyOnRoot": false,\n    "useCookie": true\n  },\n  differentDomains: false,\n  seo: false,\n  baseUrl: "",\n  vuex: {\n    "moduleName": "i18n",\n    "syncLocale": false,\n    "syncMessages": false,\n    "syncRouteParams": true\n  },\n  parsePages: true,\n  pages: {},\n  skipSettingLocaleOnNavigate: false,\n  beforeLanguageSwitch: function beforeLanguageSwitch() {\n    return null;\n  },\n  onBeforeLanguageSwitch: function onBeforeLanguageSwitch() {},\n  onLanguageSwitched: function onLanguageSwitched() {\n    return null;\n  },\n  encodePaths: true,\n  normalizedLocales: [{\n    "code": "en",\n    "name": "English",\n    "iso": "en-US",\n    "file": "en/index.js"\n  }, {\n    "code": "zh",\n    "name": "简体中文",\n    "iso": "zh-CN",\n    "file": "zh/index.js"\n  }],\n  localeCodes: ["en", "zh"]\n};\nvar localeMessages = {\n  \'en/index.js\': function enIndexJs() {\n    return __webpack_require__.e(/* import() | lang-en/index.js */ 4).then(__webpack_require__.bind(null, 694));\n  },\n  \'zh/index.js\': function zhIndexJs() {\n    return __webpack_require__.e(/* import() | lang-zh/index.js */ 5).then(__webpack_require__.bind(null, 695));\n  }\n};\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js\nvar es_array_join = __webpack_require__(92);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.sort.js\nvar es_array_sort = __webpack_require__(268);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.constructor.js\nvar es_regexp_constructor = __webpack_require__(238);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.match.js\nvar es_string_match = __webpack_require__(103);\n\n// EXTERNAL MODULE: ./node_modules/cookie/index.js\nvar cookie = __webpack_require__(530);\n\n// EXTERNAL MODULE: ./node_modules/js-cookie/dist/js.cookie.js\nvar js_cookie = __webpack_require__(262);\nvar js_cookie_default = /*#__PURE__*/__webpack_require__.n(js_cookie);\n\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/utils-common.js\n\nfunction utils_common_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = utils_common_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction utils_common_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return utils_common_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return utils_common_arrayLikeToArray(o, minLen); }\nfunction utils_common_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** @typedef {import(\'../../types/internal\').ResolvedOptions} ResolvedOptions */\n\n/**\n * Formats a log message, prefixing module\'s name to it.\n *\n * @param {string} text\n * @return {string}\n */\nfunction formatMessage(text) {\n  return "[nuxt-i18n] ".concat(text);\n}\n\n/**\n * Parses locales provided from browser through `accept-language` header.\n *\n * @param {string} input\n * @return {string[]} An array of locale codes. Priority determined by order in array.\n */\nfunction parseAcceptLanguage(input) {\n  // Example input: en-US,en;q=0.9,nb;q=0.8,no;q=0.7\n  // Contains tags separated by comma.\n  // Each tag consists of locale code (2-3 letter language code) and optionally country code\n  // after dash. Tag can also contain score after semicolon, that is assumed to match order\n  // so it\'s not explicitly used.\n  return input.split(\',\').map(function (tag) {\n    return tag.split(\';\')[0];\n  });\n}\n\n/**\n * Find locale code that best matches provided list of browser locales.\n *\n * @param {ResolvedOptions[\'normalizedLocales\']} appLocales The user-configured locales that are to be matched.\n * @param {readonly string[]} browserLocales The locales to match against configured.\n * @return {string | undefined}\n */\nfunction matchBrowserLocale(appLocales, browserLocales) {\n  /** @type {{ code: string, score: number }[]} */\n  var matchedLocales = [];\n\n  // Normalise appLocales input\n  /** @type {{ code: string, iso: string }[]} */\n  var normalizedAppLocales = [];\n  var _iterator = utils_common_createForOfIteratorHelper(appLocales),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var appLocale = _step.value;\n      var code = appLocale.code;\n      var iso = appLocale.iso || code;\n      normalizedAppLocales.push({\n        code: code,\n        iso: iso\n      });\n    }\n\n    // First pass: match exact locale.\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = utils_common_createForOfIteratorHelper(browserLocales.entries()),\n    _step2;\n  try {\n    var _loop = function _loop() {\n      var _step2$value = Object(slicedToArray["a" /* default */])(_step2.value, 2),\n        index = _step2$value[0],\n        browserCode = _step2$value[1];\n      var matchedLocale = normalizedAppLocales.find(function (appLocale) {\n        return appLocale.iso.toLowerCase() === browserCode.toLowerCase();\n      });\n      if (matchedLocale) {\n        matchedLocales.push({\n          code: matchedLocale.code,\n          score: 1 - index / browserLocales.length\n        });\n        return 1; // break\n      }\n    };\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      if (_loop()) break;\n    }\n\n    // Second pass: match only locale code part of the browser locale (not including country).\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  var _iterator3 = utils_common_createForOfIteratorHelper(browserLocales.entries()),\n    _step3;\n  try {\n    var _loop2 = function _loop2() {\n      var _step3$value = Object(slicedToArray["a" /* default */])(_step3.value, 2),\n        index = _step3$value[0],\n        browserCode = _step3$value[1];\n      var languageCode = browserCode.split(\'-\')[0].toLowerCase();\n      var matchedLocale = normalizedAppLocales.find(function (appLocale) {\n        return appLocale.iso.split(\'-\')[0].toLowerCase() === languageCode;\n      });\n      if (matchedLocale) {\n        // Deduct a thousandth for being non-exact match.\n        matchedLocales.push({\n          code: matchedLocale.code,\n          score: 0.999 - index / browserLocales.length\n        });\n        return 1; // break\n      }\n    };\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      if (_loop2()) break;\n    }\n\n    // Sort the list by score (0 - lowest, 1 - highest).\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  if (matchedLocales.length > 1) {\n    matchedLocales.sort(function (localeA, localeB) {\n      if (localeA.score === localeB.score) {\n        // If scores are equal then pick more specific (longer) code.\n        return localeB.code.length - localeA.code.length;\n      }\n      return localeB.score - localeA.score;\n    });\n  }\n  return matchedLocales.length ? matchedLocales[0].code : undefined;\n}\n\n/**\n * Get locale code that corresponds to current hostname\n *\n * @param  {ResolvedOptions[\'normalizedLocales\']} locales\n * @param  {import(\'http\').IncomingMessage | undefined} req\n * @return {string} Locale code found if any\n */\nfunction getLocaleDomain(locales, req) {\n  /** @type {string | undefined} */\n  var host;\n  if (true) {\n    host = window.location.host;\n  } else { var detectedHost; }\n  if (host) {\n    var matchingLocale = locales.find(function (l) {\n      return l.domain === host;\n    });\n    if (matchingLocale) {\n      return matchingLocale.code;\n    }\n  }\n  return \'\';\n}\n\n/**\n * Creates a RegExp for route paths\n *\n * @param  {readonly string[]} localeCodes\n * @return {RegExp}\n */\nfunction getLocalesRegex(localeCodes) {\n  return new RegExp("^/(".concat(localeCodes.join(\'|\'), ")(?:/|$)"), \'i\');\n}\n\n/**\n * Creates getter for getLocaleFromRoute\n *\n * @param  {readonly string[]} localeCodes\n * @param  {Pick<ResolvedOptions, \'routesNameSeparator\' | \'defaultLocaleRouteNameSuffix\'>} options\n */\nfunction createLocaleFromRouteGetter(localeCodes, _ref) {\n  var routesNameSeparator = _ref.routesNameSeparator,\n    defaultLocaleRouteNameSuffix = _ref.defaultLocaleRouteNameSuffix;\n  var localesPattern = "(".concat(localeCodes.join(\'|\'), ")");\n  var defaultSuffixPattern = "(?:".concat(routesNameSeparator).concat(defaultLocaleRouteNameSuffix, ")?");\n  var regexpName = new RegExp("".concat(routesNameSeparator).concat(localesPattern).concat(defaultSuffixPattern, "$"), \'i\');\n  var regexpPath = getLocalesRegex(localeCodes);\n  /**\n   * Extract locale code from given route:\n   * - If route has a name, try to extract locale from it\n   * - Otherwise, fall back to using the routes\'path\n   * @param  {import(\'vue-router\').Route} route\n   * @return {string} Locale code found if any\n   */\n  var getLocaleFromRoute = function getLocaleFromRoute(route) {\n    // Extract from route name\n    if (route.name) {\n      var matches = route.name.match(regexpName);\n      if (matches && matches.length > 1) {\n        return matches[1];\n      }\n    } else if (route.path) {\n      // Extract from path\n      var _matches = route.path.match(regexpPath);\n      if (_matches && _matches.length > 1) {\n        return _matches[1];\n      }\n    }\n    return \'\';\n  };\n  return getLocaleFromRoute;\n}\n\n/**\n * @param {import(\'http\').IncomingMessage | undefined} req\n * @param {{ useCookie: boolean, cookieKey: string, localeCodes: readonly string[] }} options\n * @return {string | undefined}\n */\nfunction getLocaleCookie(req, _ref2) {\n  var useCookie = _ref2.useCookie,\n    cookieKey = _ref2.cookieKey,\n    localeCodes = _ref2.localeCodes;\n  if (useCookie) {\n    var localeCode;\n    if (true) {\n      localeCode = js_cookie_default.a.get(cookieKey);\n    } else { var cookies; }\n    if (localeCode && localeCodes.includes(localeCode)) {\n      return localeCode;\n    }\n  }\n}\n\n/**\n * @param {string} locale\n * @param {import(\'http\').ServerResponse | undefined} res\n * @param {{ useCookie: boolean, cookieDomain: string | null, cookieKey: string, cookieSecure: boolean, cookieCrossOrigin: boolean}} options\n */\nfunction setLocaleCookie(locale, res, _ref3) {\n  var useCookie = _ref3.useCookie,\n    cookieDomain = _ref3.cookieDomain,\n    cookieKey = _ref3.cookieKey,\n    cookieSecure = _ref3.cookieSecure,\n    cookieCrossOrigin = _ref3.cookieCrossOrigin;\n  if (!useCookie) {\n    return;\n  }\n  var date = new Date();\n  /** @type {import(\'cookie\').CookieSerializeOptions} */\n  var cookieOptions = {\n    expires: new Date(date.setDate(date.getDate() + 365)),\n    path: \'/\',\n    sameSite: cookieCrossOrigin ? \'none\' : \'lax\',\n    secure: cookieCrossOrigin || cookieSecure\n  };\n  if (cookieDomain) {\n    cookieOptions.domain = cookieDomain;\n  }\n  if (true) {\n    // @ts-ignore\n    js_cookie_default.a.set(cookieKey, locale, cookieOptions);\n  } else { var redirectCookie, headers; }\n}\n// EXTERNAL MODULE: ./node_modules/nuxt-i18n/node_modules/ufo/dist/index.cjs\nvar ufo_dist = __webpack_require__(117);\n\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/plugin.utils.js\n\n\n\n\n\nfunction plugin_utils_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction plugin_utils_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? plugin_utils_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : plugin_utils_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// @ts-ignore\n\n\n/** @typedef {import(\'../../types/internal\').ResolvedOptions} ResolvedOptions */\n\n/**\n * Asynchronously load messages from translation files\n *\n * @param {import(\'@nuxt/types\').Context} context\n * @param {string} locale Language code to load\n * @return {Promise<void>}\n */\nfunction loadLanguageAsync(_x, _x2) {\n  return _loadLanguageAsync.apply(this, arguments);\n}\n\n/**\n * Resolves base URL value if provided as function. Otherwise just returns verbatim.\n *\n * @param {string | ((context: import(\'@nuxt/types\').Context) => string)} baseUrl\n * @param {import(\'@nuxt/types\').Context} context\n * @param {import(\'../../types\').Locale} localeCode\n * @param {Pick<ResolvedOptions, \'differentDomains\' | \'normalizedLocales\'>} options\n * @return {string}\n */\nfunction _loadLanguageAsync() {\n  _loadLanguageAsync = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context, locale) {\n    var app, i18n, localeObject, file, messages, nuxtState, getter;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          app = context.app;\n          i18n = app.i18n;\n          if (!i18n.loadedLanguages) {\n            i18n.loadedLanguages = [];\n          }\n          if (i18n.loadedLanguages.includes(locale)) {\n            _context.next = 34;\n            break;\n          }\n          localeObject = options_options.normalizedLocales.find(function (l) {\n            return l.code === locale;\n          });\n          if (!localeObject) {\n            _context.next = 33;\n            break;\n          }\n          file = localeObject.file;\n          if (!file) {\n            _context.next = 30;\n            break;\n          }\n          /*  */\n          /** @type {import(\'vue-i18n\').LocaleMessageObject | undefined} */\n\n          if (true) {\n            nuxtState = context.nuxtState;\n            if (nuxtState && nuxtState.__i18n && nuxtState.__i18n.langs[locale]) {\n              messages = nuxtState.__i18n.langs[locale];\n              // Even if already cached in Nuxt state, trigger locale import so that HMR kicks-in on changes to that file.\n              if (context.isDev) {\n                localeMessages[file]();\n              }\n            }\n          }\n          if (messages) {\n            _context.next = 27;\n            break;\n          }\n          _context.prev = 10;\n          _context.next = 13;\n          return localeMessages[file]().then(function (m) {\n            return m.default || m;\n          });\n        case 13:\n          getter = _context.sent;\n          if (!(typeof getter === \'function\')) {\n            _context.next = 20;\n            break;\n          }\n          _context.next = 17;\n          return Promise.resolve(getter(context, locale));\n        case 17:\n          _context.t0 = _context.sent;\n          _context.next = 21;\n          break;\n        case 20:\n          _context.t0 = getter;\n        case 21:\n          messages = _context.t0;\n          _context.next = 27;\n          break;\n        case 24:\n          _context.prev = 24;\n          _context.t1 = _context["catch"](10);\n          // eslint-disable-next-line no-console\n          console.error(formatMessage("Failed loading async locale export: ".concat(_context.t1.message)));\n        case 27:\n          if (messages) {\n            i18n.setLocaleMessage(locale, messages);\n            i18n.loadedLanguages.push(locale);\n          }\n          /*  */\n          _context.next = 31;\n          break;\n        case 30:\n          console.warn(formatMessage("Could not find lang file for locale ".concat(locale)));\n        case 31:\n          _context.next = 34;\n          break;\n        case 33:\n          console.warn(formatMessage("Attempted to load messages for non-existant locale code \\"".concat(locale, "\\"")));\n        case 34:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee, null, [[10, 24]]);\n  }));\n  return _loadLanguageAsync.apply(this, arguments);\n}\nfunction resolveBaseUrl(baseUrl, context, localeCode, _ref) {\n  var differentDomains = _ref.differentDomains,\n    normalizedLocales = _ref.normalizedLocales;\n  if (typeof baseUrl === \'function\') {\n    return baseUrl(context);\n  }\n  if (differentDomains && localeCode) {\n    // Lookup the `differentDomain` origin associated with given locale.\n    var domain = getDomainFromLocale(localeCode, context.req, {\n      normalizedLocales: normalizedLocales\n    });\n    if (domain) {\n      return domain;\n    }\n  }\n  return baseUrl;\n}\n\n/**\n * Gets the `differentDomain` domain from locale.\n *\n * @param {string} localeCode\n * @param {import(\'http\').IncomingMessage | undefined} req\n * @param {Pick<ResolvedOptions, \'normalizedLocales\'>} options\n * @return {string | undefined}\n */\nfunction getDomainFromLocale(localeCode, req, _ref2) {\n  var normalizedLocales = _ref2.normalizedLocales;\n  // Lookup the `differentDomain` origin associated with given locale.\n  var lang = normalizedLocales.find(function (locale) {\n    return locale.code === localeCode;\n  });\n  if (lang && lang.domain) {\n    if (Object(ufo_dist["hasProtocol"])(lang.domain)) {\n      return lang.domain;\n    }\n    var protocol;\n    if (false) {} else {\n      protocol = window.location.protocol.split(\':\')[0];\n    }\n    return "".concat(protocol, "://").concat(lang.domain);\n  }\n\n  // eslint-disable-next-line no-console\n  console.warn(formatMessage("Could not find domain name for locale ".concat(localeCode)));\n}\n\n/**\n * @param {import(\'vuex\').Store<Record<string, boolean>>} store\n * @param {Required<import(\'../../types\').VuexOptions>} vuex\n * @param {readonly string[]} localeCodes\n */\nfunction registerStore(store, vuex, localeCodes) {\n  /** @typedef {{\n   *    locale?: string\n   *    messages?: Record<string, string>\n   *    routeParams?: Record<string, Record<string, string>>\n   * }} ModuleStore\n   *\n   * @type {import(\'vuex\').Module<ModuleStore, {}>}\n   */\n  var storeModule = {\n    namespaced: true,\n    state: function state() {\n      return plugin_utils_objectSpread(plugin_utils_objectSpread(plugin_utils_objectSpread({}, vuex.syncLocale ? {\n        locale: \'\'\n      } : {}), vuex.syncMessages ? {\n        messages: {}\n      } : {}), vuex.syncRouteParams ? {\n        routeParams: {}\n      } : {});\n    },\n    actions: plugin_utils_objectSpread(plugin_utils_objectSpread(plugin_utils_objectSpread({}, vuex.syncLocale ? {\n      setLocale: function setLocale(_ref3, locale) {\n        var commit = _ref3.commit;\n        commit(\'setLocale\', locale);\n      }\n    } : {}), vuex.syncMessages ? {\n      setMessages: function setMessages(_ref4, messages) {\n        var commit = _ref4.commit;\n        commit(\'setMessages\', messages);\n      }\n    } : {}), vuex.syncRouteParams ? {\n      setRouteParams: function setRouteParams(_ref5, params) {\n        var commit = _ref5.commit;\n        if (false) {}\n        commit(\'setRouteParams\', params);\n      }\n    } : {}),\n    mutations: plugin_utils_objectSpread(plugin_utils_objectSpread(plugin_utils_objectSpread({}, vuex.syncLocale ? {\n      setLocale: function setLocale(state, locale) {\n        state.locale = locale;\n      }\n    } : {}), vuex.syncMessages ? {\n      setMessages: function setMessages(state, messages) {\n        state.messages = messages;\n      }\n    } : {}), vuex.syncRouteParams ? {\n      setRouteParams: function setRouteParams(state, params) {\n        state.routeParams = params;\n      }\n    } : {}),\n    getters: plugin_utils_objectSpread({}, vuex.syncRouteParams ? {\n      localeRouteParams: function localeRouteParams(_ref6) {\n        var routeParams = _ref6.routeParams;\n        /** @type {(locale: string) => Record<string, string>} */\n        var paramsGetter = function paramsGetter(locale) {\n          return routeParams && routeParams[locale] || {};\n        };\n        return paramsGetter;\n      }\n    } : {})\n  };\n  store.registerModule(vuex.moduleName, storeModule, {\n    preserveState: !!store.state[vuex.moduleName]\n  });\n}\n\n/**\n * Dispatch store module actions to keep it in sync with app\'s locale data\n *\n * @param  {import(\'vuex\').Store<void>} store\n * @param  {string | null} locale The current locale\n * @param  {object | null} messages Current messages\n * @param  {ResolvedOptions[\'vuex\']} vuex\n * @return {Promise<void>}\n */\nfunction syncVuex(_x3) {\n  return _syncVuex.apply(this, arguments);\n}\n\n/**\n * Validate setRouteParams action\'s payload\n *\n * @param {object} routeParams The action\'s payload\n * @param {readonly string[]} localeCodes\n */\nfunction _syncVuex() {\n  _syncVuex = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(store) {\n    var locale,\n      messages,\n      vuex,\n      _args2 = arguments;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          locale = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;\n          messages = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : null;\n          vuex = _args2.length > 3 ? _args2[3] : undefined;\n          if (!(vuex && store)) {\n            _context2.next = 10;\n            break;\n          }\n          if (!(locale !== null && vuex.syncLocale)) {\n            _context2.next = 7;\n            break;\n          }\n          _context2.next = 7;\n          return store.dispatch(vuex.moduleName + \'/setLocale\', locale);\n        case 7:\n          if (!(messages !== null && vuex.syncMessages)) {\n            _context2.next = 10;\n            break;\n          }\n          _context2.next = 10;\n          return store.dispatch(vuex.moduleName + \'/setMessages\', messages);\n        case 10:\n        case "end":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _syncVuex.apply(this, arguments);\n}\nfunction validateRouteParams(routeParams, localeCodes) {\n  if (!isObject(routeParams)) {\n    // eslint-disable-next-line no-console\n    console.warn(formatMessage(\'Route params should be an object\'));\n    return;\n  }\n  for (var _i = 0, _Object$entries = Object.entries(routeParams); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = Object(slicedToArray["a" /* default */])(_Object$entries[_i], 2),\n      key = _Object$entries$_i[0],\n      value = _Object$entries$_i[1];\n    if (!localeCodes.includes(key)) {\n      // eslint-disable-next-line no-console\n      console.warn(formatMessage("Trying to set route params for key ".concat(key, " which is not a valid locale")));\n    } else if (!isObject(value)) {\n      // eslint-disable-next-line no-console\n      console.warn(formatMessage("Trying to set route params for locale ".concat(key, " with a non-object value")));\n    }\n  }\n}\n\n/**\n * @param {any} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return value && !Array.isArray(value) && Object(esm_typeof["a" /* default */])(value) === \'object\';\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules\nvar objectWithoutProperties = __webpack_require__(95);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js\nvar es_string_split = __webpack_require__(211);\n\n// EXTERNAL MODULE: ./.nuxt/middleware.js\nvar middleware = __webpack_require__(162);\n\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/middleware.js\n\n\n\n// @ts-ignore\n\n\n/** @type {import(\'@nuxt/types\').Middleware} */\nvar i18nMiddleware = /*#__PURE__*/function () {\n  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context) {\n    var app, isHMR, _yield$app$i18n$__onN, _yield$app$i18n$__onN2, status, redirectPath, preserveQuery, query;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          app = context.app, isHMR = context.isHMR;\n          if (!isHMR) {\n            _context.next = 3;\n            break;\n          }\n          return _context.abrupt("return");\n        case 3:\n          _context.next = 5;\n          return app.i18n.__onNavigate(context.route);\n        case 5:\n          _yield$app$i18n$__onN = _context.sent;\n          _yield$app$i18n$__onN2 = Object(slicedToArray["a" /* default */])(_yield$app$i18n$__onN, 3);\n          status = _yield$app$i18n$__onN2[0];\n          redirectPath = _yield$app$i18n$__onN2[1];\n          preserveQuery = _yield$app$i18n$__onN2[2];\n          if (status && redirectPath) {\n            query = preserveQuery ? context.route.query : undefined;\n            context.redirect(status, redirectPath, query);\n          }\n        case 11:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function i18nMiddleware(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmiddleware["a" /* default */].nuxti18n = i18nMiddleware;\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/plugin.routing.js\n\n\nvar _excluded = ["params"];\nfunction plugin_routing_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction plugin_routing_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? plugin_routing_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : plugin_routing_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// @ts-ignore\n\n\n/**\n * @this {import(\'../../types/internal\').PluginProxy}\n * @type {Vue[\'localePath\']}\n */\nfunction plugin_routing_localePath(route, locale) {\n  var localizedRoute = resolveRoute.call(this, route, locale);\n  return localizedRoute ? localizedRoute.route.fullPath : \'\';\n}\n\n/**\n * @this {import(\'../../types/internal\').PluginProxy}\n * @type {Vue[\'localeRoute\']}\n */\nfunction localeRoute(route, locale) {\n  var resolved = resolveRoute.call(this, route, locale);\n  return resolved ? resolved.route : undefined;\n}\n\n/**\n * @this {import(\'../../types/internal\').PluginProxy}\n * @type {Vue[\'localeLocation\']}\n */\nfunction localeLocation(route, locale) {\n  var resolved = resolveRoute.call(this, route, locale);\n  return resolved ? resolved.location : undefined;\n}\n\n/**\n * @this {import(\'../../types/internal\').PluginProxy}\n * @param {import(\'vue-router\').RawLocation} route\n * @param {string} [locale]\n * @return {ReturnType<import(\'vue-router\').default[\'resolve\']> | undefined}\n */\nfunction resolveRoute(route, locale) {\n  // Abort if no route or no locale\n  if (!route) {\n    return;\n  }\n  var i18n = this.i18n;\n  locale = locale || i18n.locale;\n  if (!locale) {\n    return;\n  }\n\n  // If route parameter is a string, check if it\'s a path or name of route.\n  if (typeof route === \'string\') {\n    if (route[0] === \'/\') {\n      // If route parameter is a path, create route object with path.\n      route = {\n        path: route\n      };\n    } else {\n      // Else use it as route name.\n      route = {\n        name: route\n      };\n    }\n  }\n  var localizedRoute = Object.assign({}, route);\n  if (localizedRoute.path && !localizedRoute.name) {\n    var _resolvedRoute = this.router.resolve(localizedRoute).route;\n    var resolvedRouteName = this.getRouteBaseName(_resolvedRoute);\n    if (resolvedRouteName) {\n      localizedRoute = {\n        name: getLocaleRouteName(resolvedRouteName, locale),\n        params: _resolvedRoute.params,\n        query: _resolvedRoute.query,\n        hash: _resolvedRoute.hash\n      };\n    } else {\n      var isDefaultLocale = locale === options_options.defaultLocale;\n      // if route has a path defined but no name, resolve full route using the path\n      var isPrefixed =\n      // don\'t prefix default locale\n      !(isDefaultLocale && [Constants.STRATEGIES.PREFIX_EXCEPT_DEFAULT, Constants.STRATEGIES.PREFIX_AND_DEFAULT].includes(options_options.strategy)) &&\n      // no prefix for any language\n      !(options_options.strategy === Constants.STRATEGIES.NO_PREFIX) &&\n      // no prefix for different domains\n      !i18n.differentDomains;\n      if (isPrefixed) {\n        localizedRoute.path = "/".concat(locale).concat(localizedRoute.path);\n      }\n      localizedRoute.path = nuxtOptions.trailingSlash ? Object(ufo_dist["withTrailingSlash"])(localizedRoute.path, true) : Object(ufo_dist["withoutTrailingSlash"])(localizedRoute.path, true);\n    }\n  } else {\n    if (!localizedRoute.name && !localizedRoute.path) {\n      localizedRoute.name = this.getRouteBaseName();\n    }\n    localizedRoute.name = getLocaleRouteName(localizedRoute.name, locale);\n    var _localizedRoute = localizedRoute,\n      params = _localizedRoute.params;\n    if (params && params[\'0\'] === undefined && params.pathMatch) {\n      params[\'0\'] = params.pathMatch;\n    }\n  }\n  var resolvedRoute = this.router.resolve(localizedRoute);\n  if (resolvedRoute.route.name) {\n    return resolvedRoute;\n  }\n  // If didn\'t resolve to an existing route then just return resolved route based on original input.\n  return this.router.resolve(route);\n}\n\n/**\n * @this {import(\'../../types/internal\').PluginProxy}\n * @type {Vue[\'switchLocalePath\']}\n */\nfunction switchLocalePath(locale) {\n  var name = this.getRouteBaseName();\n  if (!name) {\n    return \'\';\n  }\n  var i18n = this.i18n,\n    route = this.route,\n    store = this.store;\n  var params = route.params,\n    routeCopy = Object(objectWithoutProperties["a" /* default */])(route, _excluded);\n  var langSwitchParams = {};\n  if (options_options.vuex && options_options.vuex.syncRouteParams && store) {\n    langSwitchParams = store.getters["".concat(options_options.vuex.moduleName, "/localeRouteParams")](locale);\n  }\n  var baseRoute = Object.assign({}, routeCopy, {\n    name: name,\n    params: plugin_routing_objectSpread(plugin_routing_objectSpread(plugin_routing_objectSpread({}, params), langSwitchParams), {}, {\n      0: params.pathMatch\n    })\n  });\n  var path = this.localePath(baseRoute, locale);\n\n  // Handle different domains\n  if (i18n.differentDomains) {\n    var getDomainOptions = {\n      differentDomains: i18n.differentDomains,\n      normalizedLocales: options_options.normalizedLocales\n    };\n    var domain = getDomainFromLocale(locale, this.req, getDomainOptions);\n    if (domain) {\n      path = domain + path;\n    }\n  }\n  return path;\n}\n\n/**\n * @this {import(\'../../types/internal\').PluginProxy}\n * @type {Vue[\'getRouteBaseName\']}\n */\nfunction getRouteBaseName(givenRoute) {\n  var route = givenRoute !== undefined ? givenRoute : this.route;\n  if (!route || !route.name) {\n    return;\n  }\n  return route.name.split(options_options.routesNameSeparator)[0];\n}\n\n/**\n * @param {string | undefined} routeName\n * @param {string} locale\n */\nfunction getLocaleRouteName(routeName, locale) {\n  var name = routeName + (options_options.strategy === Constants.STRATEGIES.NO_PREFIX ? \'\' : options_options.routesNameSeparator + locale);\n  if (locale === options_options.defaultLocale && options_options.strategy === Constants.STRATEGIES.PREFIX_AND_DEFAULT) {\n    name += options_options.routesNameSeparator + options_options.defaultLocaleRouteNameSuffix;\n  }\n  return name;\n}\n\n/**\n * @template {(...args: any[]) => any} T\n * @param {T} targetFunction\n * @return {(this: Vue, ...args: Parameters<T>) => ReturnType<T>}\n */\nvar VueInstanceProxy = function VueInstanceProxy(targetFunction) {\n  return function () {\n    var proxy = {\n      getRouteBaseName: this.getRouteBaseName,\n      i18n: this.$i18n,\n      localePath: this.localePath,\n      localeRoute: this.localeRoute,\n      localeLocation: this.localeLocation,\n      req:  false ? undefined : null,\n      route: this.$route,\n      router: this.$router,\n      store: this.$store\n    };\n    return targetFunction.call.apply(targetFunction, [proxy].concat(Array.prototype.slice.call(arguments)));\n  };\n};\n\n/**\n * @template {(...args: any[]) => any} T\n * @param {import(\'@nuxt/types\').Context} context\n * @param {T} targetFunction\n * @return {(...args: Parameters<T>) => ReturnType<T>}\n */\nvar NuxtContextProxy = function NuxtContextProxy(context, targetFunction) {\n  return function () {\n    var app = context.app,\n      req = context.req,\n      route = context.route,\n      store = context.store;\n    var proxy = {\n      getRouteBaseName: app.getRouteBaseName,\n      i18n: app.i18n,\n      localePath: app.localePath,\n      localeLocation: app.localeLocation,\n      localeRoute: app.localeRoute,\n      req:  false ? undefined : null,\n      route: route,\n      router: app.router,\n      store: store\n    };\n    return targetFunction.call.apply(targetFunction, [proxy].concat(Array.prototype.slice.call(arguments)));\n  };\n};\n\n/** @type {import(\'vue\').PluginObject<void>} */\nvar plugin_routing_plugin = {\n  install: function install(Vue) {\n    Vue.mixin({\n      methods: {\n        localePath: VueInstanceProxy(plugin_routing_localePath),\n        localeRoute: VueInstanceProxy(localeRoute),\n        localeLocation: VueInstanceProxy(localeLocation),\n        switchLocalePath: VueInstanceProxy(switchLocalePath),\n        getRouteBaseName: VueInstanceProxy(getRouteBaseName)\n      }\n    });\n  }\n};\n\n/** @type {import(\'@nuxt/types\').Plugin} */\n/* harmony default export */ var plugin_routing = (function (context) {\n  vue_runtime_esm["a" /* default */].use(plugin_routing_plugin);\n  var app = context.app,\n    store = context.store;\n  app.localePath = context.localePath = NuxtContextProxy(context, plugin_routing_localePath);\n  app.localeRoute = context.localeRoute = NuxtContextProxy(context, localeRoute);\n  app.localeLocation = context.localeLocation = NuxtContextProxy(context, localeLocation);\n  app.switchLocalePath = context.switchLocalePath = NuxtContextProxy(context, switchLocalePath);\n  app.getRouteBaseName = context.getRouteBaseName = NuxtContextProxy(context, getRouteBaseName);\n  if (store) {\n    store.localePath = app.localePath;\n    store.localeRoute = app.localeRoute;\n    store.localeLocation = app.localeLocation;\n    store.switchLocalePath = app.switchLocalePath;\n    store.getRouteBaseName = app.getRouteBaseName;\n  }\n});\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.starts-with.js\nvar es_string_starts_with = __webpack_require__(82);\n\n// EXTERNAL MODULE: ./node_modules/vue-i18n/dist/vue-i18n.esm.js\nvar vue_i18n_esm = __webpack_require__(263);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__(62);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.map.js\nvar es_map = __webpack_require__(360);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.delete-all.js\nvar esnext_map_delete_all = __webpack_require__(361);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.every.js\nvar esnext_map_every = __webpack_require__(362);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.filter.js\nvar esnext_map_filter = __webpack_require__(363);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.find.js\nvar esnext_map_find = __webpack_require__(364);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.find-key.js\nvar esnext_map_find_key = __webpack_require__(365);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.includes.js\nvar esnext_map_includes = __webpack_require__(366);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.key-of.js\nvar esnext_map_key_of = __webpack_require__(367);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.map-keys.js\nvar esnext_map_map_keys = __webpack_require__(368);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.map-values.js\nvar esnext_map_map_values = __webpack_require__(369);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.merge.js\nvar esnext_map_merge = __webpack_require__(370);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.reduce.js\nvar esnext_map_reduce = __webpack_require__(371);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.some.js\nvar esnext_map_some = __webpack_require__(372);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.map.update.js\nvar esnext_map_update = __webpack_require__(373);\n\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/head-meta.js\n\n\n\nfunction head_meta_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction head_meta_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? head_meta_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : head_meta_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction head_meta_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = head_meta_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction head_meta_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return head_meta_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return head_meta_arrayLikeToArray(o, minLen); }\nfunction head_meta_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @this {import(\'vue/types/vue\').Vue}\n * @return {import(\'vue-meta\').MetaInfo}\n */\nfunction nuxtI18nHead() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$addDirAttribute = _ref.addDirAttribute,\n    addDirAttribute = _ref$addDirAttribute === void 0 ? true : _ref$addDirAttribute,\n    _ref$addSeoAttributes = _ref.addSeoAttributes,\n    addSeoAttributes = _ref$addSeoAttributes === void 0 ? false : _ref$addSeoAttributes;\n  // Can happen when using from a global mixin.\n  if (!this.$i18n) {\n    return {};\n  }\n\n  /** @type {import(\'../../types/vue\').NuxtI18nMeta} */\n  var metaObject = {\n    htmlAttrs: {},\n    link: [],\n    meta: []\n  };\n  var currentLocale = this.$i18n.localeProperties;\n  var currentLocaleIso = currentLocale.iso;\n  var currentLocaleDir = currentLocale.dir || options_options.defaultDirection;\n\n  /**\n   * Adding Direction Attribute:\n   */\n  if (addDirAttribute) {\n    metaObject.htmlAttrs.dir = currentLocaleDir;\n  }\n\n  /**\n   * Adding SEO Meta:\n   */\n  if (addSeoAttributes && (\n  // @ts-ignore\n  vue_meta_esm_browser["a" /* default */].hasMetaInfo ? vue_meta_esm_browser["a" /* default */].hasMetaInfo(this) : this._hasMetaInfo) && this.$i18n.locale && this.$i18n.locales && this.$options[Constants.COMPONENT_OPTIONS_KEY] !== false &&\n  // @ts-ignore\n  !(this.$options[Constants.COMPONENT_OPTIONS_KEY] && this.$options[Constants.COMPONENT_OPTIONS_KEY].seo === false)) {\n    if (currentLocaleIso) {\n      metaObject.htmlAttrs.lang = currentLocaleIso; // TODO: simple lang or "specific" lang with territory?\n    }\n    var locales = /** @type {import(\'../../types\').LocaleObject[]} */this.$i18n.locales;\n    addHreflangLinks.bind(this)(locales, this.$i18n.__baseUrl, metaObject.link);\n    addCanonicalLinks.bind(this)(this.$i18n.__baseUrl, metaObject.link);\n    addCurrentOgLocale.bind(this)(currentLocale, currentLocaleIso, metaObject.meta);\n    addAlternateOgLocales.bind(this)(locales, currentLocaleIso, metaObject.meta);\n  }\n\n  /**\n   * Internals:\n   */\n\n  /**\n   * @this {import(\'vue/types/vue\').Vue}\n   *\n   * @param {import(\'../../types\').LocaleObject[]} locales\n   * @param {string} baseUrl\n   * @param {import(\'../../types/vue\').NuxtI18nMeta[\'link\']} link\n   */\n  function addHreflangLinks(locales, baseUrl, link) {\n    if (options_options.strategy === Constants.STRATEGIES.NO_PREFIX) {\n      return;\n    }\n    /** @type {Map<string, import(\'../../types\').LocaleObject>} */\n    var localeMap = new Map();\n    var _iterator = head_meta_createForOfIteratorHelper(locales),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var locale = _step.value;\n        var localeIso = locale.iso;\n        if (!localeIso) {\n          // eslint-disable-next-line no-console\n          console.warn(formatMessage(\'Locale ISO code is required to generate alternate link\'));\n          continue;\n        }\n        var _localeIso$split = localeIso.split(\'-\'),\n          _localeIso$split2 = Object(slicedToArray["a" /* default */])(_localeIso$split, 2),\n          language = _localeIso$split2[0],\n          region = _localeIso$split2[1];\n        if (language && region && (locale.isCatchallLocale || !localeMap.has(language))) {\n          localeMap.set(language, locale);\n        }\n        localeMap.set(localeIso, locale);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    var _iterator2 = head_meta_createForOfIteratorHelper(localeMap.entries()),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = Object(slicedToArray["a" /* default */])(_step2.value, 2),\n          iso = _step2$value[0],\n          mapLocale = _step2$value[1];\n        var _localePath = this.switchLocalePath(mapLocale.code);\n        if (_localePath) {\n          link.push({\n            hid: "i18n-alt-".concat(iso),\n            rel: \'alternate\',\n            href: toAbsoluteUrl(_localePath, baseUrl),\n            hreflang: iso\n          });\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    if (options_options.defaultLocale) {\n      var localePath = this.switchLocalePath(options_options.defaultLocale);\n      if (localePath) {\n        link.push({\n          hid: \'i18n-xd\',\n          rel: \'alternate\',\n          href: toAbsoluteUrl(localePath, baseUrl),\n          hreflang: \'x-default\'\n        });\n      }\n    }\n  }\n\n  /**\n   * @this {import(\'vue/types/vue\').Vue}\n   *\n   * @param {string} baseUrl\n   * @param {import(\'../../types/vue\').NuxtI18nMeta[\'link\']} link\n   */\n  function addCanonicalLinks(baseUrl, link) {\n    var currentRoute = this.localeRoute(head_meta_objectSpread(head_meta_objectSpread({}, this.$route), {}, {\n      name: this.getRouteBaseName()\n    }));\n    var canonicalPath = currentRoute ? currentRoute.path : null;\n    if (canonicalPath) {\n      link.push({\n        hid: \'i18n-can\',\n        rel: \'canonical\',\n        href: toAbsoluteUrl(canonicalPath, baseUrl)\n      });\n    }\n  }\n\n  /**\n   * @this {import(\'vue/types/vue\').Vue}\n   *\n   * @param {import(\'../../types\').LocaleObject} currentLocale\n   * @param {string | undefined} currentLocaleIso\n   * @param {import(\'../../types/vue\').NuxtI18nMeta[\'meta\']} meta\n   */\n  function addCurrentOgLocale(currentLocale, currentLocaleIso, meta) {\n    var hasCurrentLocaleAndIso = currentLocale && currentLocaleIso;\n    if (!hasCurrentLocaleAndIso) {\n      return;\n    }\n    meta.push({\n      hid: \'i18n-og\',\n      property: \'og:locale\',\n      // Replace dash with underscore as defined in spec: language_TERRITORY\n      content: hypenToUnderscore(currentLocaleIso)\n    });\n  }\n\n  /**\n   * @this {import(\'vue/types/vue\').Vue}\n   *\n   * @param {import(\'../../types\').LocaleObject[]} locales\n   * @param {string | undefined} currentLocaleIso\n   * @param {import(\'../../types/vue\').NuxtI18nMeta[\'meta\']} meta\n   */\n  function addAlternateOgLocales(locales, currentLocaleIso, meta) {\n    var localesWithoutCurrent = locales.filter(function (locale) {\n      var localeIso = locale.iso;\n      return localeIso && localeIso !== currentLocaleIso;\n    });\n    if (localesWithoutCurrent.length) {\n      var alternateLocales = localesWithoutCurrent.map(function (locale) {\n        return {\n          hid: "i18n-og-alt-".concat(locale.iso),\n          property: \'og:locale:alternate\',\n          content: hypenToUnderscore(locale.iso)\n        };\n      });\n      meta.push.apply(meta, Object(toConsumableArray["a" /* default */])(alternateLocales));\n    }\n  }\n\n  /**\n   * @param {string | undefined} str\n   * @return {string}\n   */\n  function hypenToUnderscore(str) {\n    return (str || \'\').replace(/-/g, \'_\');\n  }\n\n  /**\n   * @param {string} urlOrPath\n   * @param {string} baseUrl\n   */\n  function toAbsoluteUrl(urlOrPath, baseUrl) {\n    if (urlOrPath.match(/^https?:\\/\\//)) {\n      return urlOrPath;\n    }\n    return baseUrl + urlOrPath;\n  }\n  return metaObject;\n}\n\n/**\n * @deprecated Use `nuxtI18nHead()` instead.\n * @this {import(\'vue/types/vue\').Vue}\n */\nfunction nuxtI18nSeo() {\n  return nuxtI18nHead.call(this, {\n    addDirAttribute: false,\n    addSeoAttributes: true\n  });\n}\n// EXTERNAL MODULE: ./node_modules/klona/full/index.mjs\nvar full = __webpack_require__(142);\n\n// CONCATENATED MODULE: ./.nuxt/nuxt-i18n/plugin.main.js\n\n\n\nfunction plugin_main_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = plugin_main_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction plugin_main_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return plugin_main_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return plugin_main_arrayLikeToArray(o, minLen); }\nfunction plugin_main_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// @ts-ignore\n\n// @ts-ignore\n\nvue_runtime_esm["a" /* default */].use(vue_i18n_esm["a" /* default */]);\n\n/** @type {import(\'@nuxt/types\').Plugin} */\n/* harmony default export */ var plugin_main = (/*#__PURE__*/(function () {\n  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(context) {\n    var app, route, store, req, res, redirect, lazy, injectInNuxtState, devalue, _options$detectBrowse, alwaysRedirect, fallbackLocale, onlyOnNoPrefix, onlyOnRoot, useCookie, cookieKey, cookieDomain, cookieSecure, cookieCrossOrigin, loadAndSetLocale, getLocaleFromRoute, getRedirectPathForLocale, onNavigate, finalizePendingLocaleChange, waitForPendingLocaleChange, getBrowserLocale, doDetectBrowserLanguage, extendVueI18nInstance, vueI18nOptions, resolveBaseUrlOptions, _iterator, _step, locale, finalLocale, vuex, domainLocale, routeLocale, _yield$onNavigate, _yield$onNavigate2, _, redirectTo;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          app = context.app, route = context.route, store = context.store, req = context.req, res = context.res, redirect = context.redirect;\n          if (options_options.vuex && store) {\n            registerStore(store, options_options.vuex, options_options.localeCodes);\n          }\n          lazy = options_options.lazy;\n          injectInNuxtState = lazy && (lazy === true || lazy.skipNuxtState !== true);\n          if (true) {\n            _context5.next = 9;\n            break;\n          }\n          _context5.next = 7;\n          return __webpack_require__.e(/* import() */ 17).then(__webpack_require__.bind(null, 689));\n        case 7:\n          devalue = _context5.sent.default;\n          context.beforeNuxtRender(function (_ref2) {\n            var nuxtState = _ref2.nuxtState;\n            /** @type {Record<string, import(\'vue-i18n\').LocaleMessageObject>} */\n            var langs = {};\n            var _app$i18n = app.i18n,\n              fallbackLocale = _app$i18n.fallbackLocale,\n              locale = _app$i18n.locale;\n            if (locale && locale !== fallbackLocale) {\n              // @ts-ignore Using internal API to avoid unnecessary cloning.\n              var messages = app.i18n._getMessages()[locale];\n              if (messages) {\n                try {\n                  devalue(messages);\n                  langs[locale] = messages;\n                } catch (_unused) {\n                  // Ignore - client-side will load the chunk asynchronously.\n                }\n              }\n            }\n            nuxtState.__i18n = {\n              langs: langs\n            };\n          });\n        case 9:\n          _options$detectBrowse = /** @type {Required<import(\'../../types\').DetectBrowserLanguageOptions>} */options_options.detectBrowserLanguage, alwaysRedirect = _options$detectBrowse.alwaysRedirect, fallbackLocale = _options$detectBrowse.fallbackLocale, onlyOnNoPrefix = _options$detectBrowse.onlyOnNoPrefix, onlyOnRoot = _options$detectBrowse.onlyOnRoot, useCookie = _options$detectBrowse.useCookie, cookieKey = _options$detectBrowse.cookieKey, cookieDomain = _options$detectBrowse.cookieDomain, cookieSecure = _options$detectBrowse.cookieSecure, cookieCrossOrigin = _options$detectBrowse.cookieCrossOrigin;\n          /**\n           * @param {string | undefined} newLocale\n           * @param {{ initialSetup?: boolean }} [options=false]\n           */\n          loadAndSetLocale = /*#__PURE__*/function () {\n            var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(newLocale) {\n              var _ref4,\n                _ref4$initialSetup,\n                initialSetup,\n                oldLocale,\n                localeOverride,\n                i18nFallbackLocale,\n                localesToLoadPromises,\n                newLocaleProperties,\n                _i,\n                _Object$keys,\n                key,\n                _i2,\n                _Object$entries,\n                _Object$entries$_i,\n                _key,\n                value,\n                route,\n                redirectPath,\n                _args = arguments;\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _ref4 = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, _ref4$initialSetup = _ref4.initialSetup, initialSetup = _ref4$initialSetup === void 0 ? false : _ref4$initialSetup;\n                    if (newLocale) {\n                      _context.next = 3;\n                      break;\n                    }\n                    return _context.abrupt("return");\n                  case 3:\n                    if (!(!initialSetup && app.i18n.differentDomains)) {\n                      _context.next = 5;\n                      break;\n                    }\n                    return _context.abrupt("return");\n                  case 5:\n                    oldLocale = app.i18n.locale;\n                    if (!(newLocale === oldLocale)) {\n                      _context.next = 8;\n                      break;\n                    }\n                    return _context.abrupt("return");\n                  case 8:\n                    localeOverride = app.i18n.onBeforeLanguageSwitch(oldLocale, newLocale, initialSetup, context);\n                    if (!(localeOverride && app.i18n.localeCodes.includes(localeOverride))) {\n                      _context.next = 13;\n                      break;\n                    }\n                    if (!(localeOverride === oldLocale)) {\n                      _context.next = 12;\n                      break;\n                    }\n                    return _context.abrupt("return");\n                  case 12:\n                    newLocale = localeOverride;\n                  case 13:\n                    if (!initialSetup) {\n                      app.i18n.beforeLanguageSwitch(oldLocale, newLocale);\n                    }\n                    if (useCookie) {\n                      app.i18n.setLocaleCookie(newLocale);\n                    }\n                    if (!options_options.langDir) {\n                      _context.next = 29;\n                      break;\n                    }\n                    i18nFallbackLocale = app.i18n.fallbackLocale;\n                    if (!options_options.lazy) {\n                      _context.next = 27;\n                      break;\n                    }\n                    if (!i18nFallbackLocale) {\n                      _context.next = 23;\n                      break;\n                    }\n                    /** @type {Promise<void>[]} */\n                    localesToLoadPromises = [];\n                    if (Array.isArray(i18nFallbackLocale)) {\n                      localesToLoadPromises = i18nFallbackLocale.map(function (fbLocale) {\n                        return loadLanguageAsync(context, fbLocale);\n                      });\n                    } else if (Object(esm_typeof["a" /* default */])(i18nFallbackLocale) === \'object\') {\n                      if (i18nFallbackLocale[newLocale]) {\n                        localesToLoadPromises = localesToLoadPromises.concat(i18nFallbackLocale[newLocale].map(function (fbLocale) {\n                          return loadLanguageAsync(context, fbLocale);\n                        }));\n                      }\n                      if (i18nFallbackLocale.default) {\n                        localesToLoadPromises = localesToLoadPromises.concat(i18nFallbackLocale.default.map(function (fbLocale) {\n                          return loadLanguageAsync(context, fbLocale);\n                        }));\n                      }\n                    } else if (newLocale !== i18nFallbackLocale) {\n                      localesToLoadPromises.push(loadLanguageAsync(context, i18nFallbackLocale));\n                    }\n                    _context.next = 23;\n                    return Promise.all(localesToLoadPromises);\n                  case 23:\n                    _context.next = 25;\n                    return loadLanguageAsync(context, newLocale);\n                  case 25:\n                    _context.next = 29;\n                    break;\n                  case 27:\n                    _context.next = 29;\n                    return Promise.all(options_options.localeCodes.map(function (locale) {\n                      return loadLanguageAsync(context, locale);\n                    }));\n                  case 29:\n                    app.i18n.locale = newLocale;\n                    /** @type {import(\'../../types\').LocaleObject} */\n                    newLocaleProperties = options_options.normalizedLocales.find(function (l) {\n                      return l.code === newLocale;\n                    }) || {\n                      code: newLocale\n                    }; // In case certain locale has more properties than another, reset all the properties.\n                    for (_i = 0, _Object$keys = Object.keys(app.i18n.localeProperties); _i < _Object$keys.length; _i++) {\n                      key = _Object$keys[_i];\n                      app.i18n.localeProperties[key] = undefined;\n                    }\n                    // Copy properties of the new locale\n                    for (_i2 = 0, _Object$entries = Object.entries(newLocaleProperties); _i2 < _Object$entries.length; _i2++) {\n                      _Object$entries$_i = Object(slicedToArray["a" /* default */])(_Object$entries[_i2], 2), _key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n                      vue_runtime_esm["a" /* default */].set(app.i18n.localeProperties, _key, Object(full["a" /* klona */])(value));\n                    }\n                    if (!options_options.vuex) {\n                      _context.next = 36;\n                      break;\n                    }\n                    _context.next = 36;\n                    return syncVuex(store, newLocale, app.i18n.getLocaleMessage(newLocale), options_options.vuex);\n                  case 36:\n                    // Must retrieve from context as it might have changed since plugin initialization.\n                    route = context.route;\n                    redirectPath = getRedirectPathForLocale(route, newLocale);\n                    if (initialSetup) {\n                      // Redirect will be delayed until middleware runs as redirecting from plugin does not\n                      // work in SPA (https://github.com/nuxt/nuxt.js/issues/4491).\n                      app.i18n.__redirect = redirectPath;\n                    } else {\n                      app.i18n.onLanguageSwitched(oldLocale, newLocale);\n                      if (redirectPath) {\n                        redirect(redirectPath);\n                      }\n                    }\n                  case 39:\n                  case "end":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function loadAndSetLocale(_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }();\n          getLocaleFromRoute = createLocaleFromRouteGetter(options_options.localeCodes, {\n            routesNameSeparator: options_options.routesNameSeparator,\n            defaultLocaleRouteNameSuffix: options_options.defaultLocaleRouteNameSuffix\n          });\n          /**\n           * Gets the redirect path for locale.\n           *\n           * @param {import("vue-router").Route} route\n           * @param {string | undefined} locale\n           * @return {string} The redirect path for locale.\n           */\n          getRedirectPathForLocale = function getRedirectPathForLocale(route, locale) {\n            // Redirects are ignored if it is a nuxt generate.\n            if (false) {}\n            if (!locale || app.i18n.differentDomains || options_options.strategy === Constants.STRATEGIES.NO_PREFIX) {\n              return \'\';\n            }\n            if (getLocaleFromRoute(route) === locale) {\n              // If "onlyOnRoot" or "onlyOnNoPrefix" is set and strategy is "prefix_and_default", prefer unprefixed route for\n              // default locale.\n              if (!(onlyOnRoot || onlyOnNoPrefix) || locale !== options_options.defaultLocale || options_options.strategy !== Constants.STRATEGIES.PREFIX_AND_DEFAULT) {\n                return \'\';\n              }\n            }\n\n            // At this point we are left with route that either has no or different locale.\n            var redirectPath = app.switchLocalePath(locale);\n            if (!redirectPath) {\n              // Current route could be 404 in which case attempt to find matching route for given locale.\n              redirectPath = app.localePath(route.fullPath, locale);\n            }\n            if (!redirectPath || redirectPath === route.fullPath || redirectPath.startsWith(\'//\')) {\n              return \'\';\n            }\n            return redirectPath;\n          };\n          /**\n           * Called by middleware on navigation (also on the initial one).\n           *\n           * @type {import(\'../../types/internal\').onNavigateInternal}\n           */\n          onNavigate = /*#__PURE__*/function () {\n            var _ref5 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(route) {\n              var statusCode, path, storedRedirect, resolveBaseUrlOptions, finalLocale;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(route.path === \'/\' && options_options.rootRedirect)) {\n                      _context2.next = 5;\n                      break;\n                    }\n                    statusCode = 302;\n                    path = options_options.rootRedirect;\n                    if (typeof options_options.rootRedirect !== \'string\') {\n                      statusCode = options_options.rootRedirect.statusCode;\n                      path = options_options.rootRedirect.path;\n                    }\n                    return _context2.abrupt("return", [statusCode, "/".concat(path), /* preserve query */true]);\n                  case 5:\n                    storedRedirect = app.i18n.__redirect;\n                    if (!storedRedirect) {\n                      _context2.next = 9;\n                      break;\n                    }\n                    app.i18n.__redirect = null;\n                    return _context2.abrupt("return", [302, storedRedirect]);\n                  case 9:\n                    resolveBaseUrlOptions = {\n                      differentDomains: options_options.differentDomains,\n                      normalizedLocales: options_options.normalizedLocales\n                    };\n                    app.i18n.__baseUrl = resolveBaseUrl(options_options.baseUrl, context, app.i18n.locale, resolveBaseUrlOptions);\n                    finalLocale = options_options.detectBrowserLanguage && doDetectBrowserLanguage(route) || getLocaleFromRoute(route) || app.i18n.locale || app.i18n.defaultLocale || \'\';\n                    if (!options_options.skipSettingLocaleOnNavigate) {\n                      _context2.next = 17;\n                      break;\n                    }\n                    app.i18n.__pendingLocale = finalLocale;\n                    app.i18n.__pendingLocalePromise = new Promise(function (resolve) {\n                      app.i18n.__resolvePendingLocalePromise = resolve;\n                    });\n                    _context2.next = 19;\n                    break;\n                  case 17:\n                    _context2.next = 19;\n                    return app.i18n.setLocale(finalLocale);\n                  case 19:\n                    return _context2.abrupt("return", [null, null]);\n                  case 20:\n                  case "end":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return function onNavigate(_x3) {\n              return _ref5.apply(this, arguments);\n            };\n          }();\n          finalizePendingLocaleChange = /*#__PURE__*/function () {\n            var _ref6 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (app.i18n.__pendingLocale) {\n                      _context3.next = 2;\n                      break;\n                    }\n                    return _context3.abrupt("return");\n                  case 2:\n                    _context3.next = 4;\n                    return app.i18n.setLocale(app.i18n.__pendingLocale);\n                  case 4:\n                    app.i18n.__resolvePendingLocalePromise(\'\');\n                    app.i18n.__pendingLocale = null;\n                  case 6:\n                  case "end":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return function finalizePendingLocaleChange() {\n              return _ref6.apply(this, arguments);\n            };\n          }();\n          waitForPendingLocaleChange = /*#__PURE__*/function () {\n            var _ref7 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!app.i18n.__pendingLocale) {\n                      _context4.next = 3;\n                      break;\n                    }\n                    _context4.next = 3;\n                    return app.i18n.__pendingLocalePromise;\n                  case 3:\n                  case "end":\n                    return _context4.stop();\n                }\n              }, _callee4);\n            }));\n            return function waitForPendingLocaleChange() {\n              return _ref7.apply(this, arguments);\n            };\n          }();\n          getBrowserLocale = function getBrowserLocale() {\n            if ( true && typeof navigator !== \'undefined\' && navigator.languages) {\n              // Get browser language either from navigator if running on client side, or from the headers\n              return matchBrowserLocale(options_options.normalizedLocales, navigator.languages);\n            } else if (req && typeof req.headers[\'accept-language\'] !== \'undefined\') {\n              return matchBrowserLocale(options_options.normalizedLocales, parseAcceptLanguage(req.headers[\'accept-language\']));\n            } else {\n              return undefined;\n            }\n          };\n          /**\n           * @param {import(\'vue-router\').Route} route\n           * @return {string} Returns the browser locale that was detected or an empty string otherwise.\n           */\n          doDetectBrowserLanguage = function doDetectBrowserLanguage(route) {\n            // Browser detection is ignored if it is a nuxt generate.\n            if (false) {}\n            if (options_options.strategy !== Constants.STRATEGIES.NO_PREFIX) {\n              if (onlyOnRoot) {\n                if (route.path !== \'/\') {\n                  return \'\';\n                }\n              } else if (onlyOnNoPrefix) {\n                if (!alwaysRedirect && route.path.match(getLocalesRegex(options_options.localeCodes))) {\n                  return \'\';\n                }\n              }\n            }\n            var matchedLocale;\n            if (useCookie && (matchedLocale = app.i18n.getLocaleCookie())) {\n              // Get preferred language from cookie if present and enabled\n            } else {\n              // Try to get locale from either navigator or header detection\n              matchedLocale = getBrowserLocale();\n            }\n            var finalLocale = matchedLocale || fallbackLocale;\n\n            // Handle cookie option to prevent multiple redirections\n            if (finalLocale && (!useCookie || alwaysRedirect || !app.i18n.getLocaleCookie())) {\n              if (finalLocale !== app.i18n.locale) {\n                return finalLocale;\n              }\n            }\n            return \'\';\n          };\n          /**\n           * Extends the newly created vue-i18n instance with nuxt-i18n properties.\n           *\n           * @param {import(\'vue-i18n\').IVueI18n} i18n\n           */\n          extendVueI18nInstance = function extendVueI18nInstance(i18n) {\n            i18n.locales = Object(full["a" /* klona */])(options_options.locales);\n            i18n.localeCodes = Object(full["a" /* klona */])(options_options.localeCodes);\n            i18n.localeProperties = vue_runtime_esm["a" /* default */].observable(Object(full["a" /* klona */])(options_options.normalizedLocales.find(function (l) {\n              return l.code === i18n.locale;\n            }) || {\n              code: i18n.locale\n            }));\n            i18n.defaultLocale = options_options.defaultLocale;\n            i18n.differentDomains = options_options.differentDomains;\n            i18n.beforeLanguageSwitch = options_options.beforeLanguageSwitch;\n            i18n.onBeforeLanguageSwitch = options_options.onBeforeLanguageSwitch;\n            i18n.onLanguageSwitched = options_options.onLanguageSwitched;\n            i18n.setLocaleCookie = function (locale) {\n              return setLocaleCookie(locale, res, {\n                useCookie: useCookie,\n                cookieDomain: cookieDomain,\n                cookieKey: cookieKey,\n                cookieSecure: cookieSecure,\n                cookieCrossOrigin: cookieCrossOrigin\n              });\n            };\n            i18n.getLocaleCookie = function () {\n              return getLocaleCookie(req, {\n                useCookie: useCookie,\n                cookieKey: cookieKey,\n                localeCodes: options_options.localeCodes\n              });\n            };\n            i18n.setLocale = function (locale) {\n              return loadAndSetLocale(locale);\n            };\n            i18n.getBrowserLocale = function () {\n              return getBrowserLocale();\n            };\n            i18n.finalizePendingLocaleChange = finalizePendingLocaleChange;\n            i18n.waitForPendingLocaleChange = waitForPendingLocaleChange;\n            i18n.__baseUrl = app.i18n.__baseUrl;\n            i18n.__pendingLocale = app.i18n.__pendingLocale;\n            i18n.__pendingLocalePromise = app.i18n.__pendingLocalePromise;\n            i18n.__resolvePendingLocalePromise = app.i18n.__resolvePendingLocalePromise;\n          }; // Set instance options\n          if (!(typeof options_options.vueI18n === \'function\')) {\n            _context5.next = 25;\n            break;\n          }\n          _context5.next = 22;\n          return options_options.vueI18n(context);\n        case 22:\n          _context5.t0 = _context5.sent;\n          _context5.next = 26;\n          break;\n        case 25:\n          _context5.t0 = Object(full["a" /* klona */])(options_options.vueI18n);\n        case 26:\n          vueI18nOptions = _context5.t0;\n          vueI18nOptions.componentInstanceCreatedListener = extendVueI18nInstance;\n          // @ts-ignore\n          app.i18n = context.i18n = new vue_i18n_esm["a" /* default */](vueI18nOptions);\n          // Initialize locale and fallbackLocale as vue-i18n defaults those to \'en-US\' if falsey\n          app.i18n.locale = \'\';\n          app.i18n.fallbackLocale = vueI18nOptions.fallbackLocale || \'\';\n          extendVueI18nInstance(app.i18n);\n          resolveBaseUrlOptions = {\n            differentDomains: options_options.differentDomains,\n            normalizedLocales: options_options.normalizedLocales\n          };\n          app.i18n.__baseUrl = resolveBaseUrl(options_options.baseUrl, context, \'\', resolveBaseUrlOptions);\n          app.i18n.__onNavigate = onNavigate;\n          vue_runtime_esm["a" /* default */].prototype.$nuxtI18nSeo = nuxtI18nSeo;\n          vue_runtime_esm["a" /* default */].prototype.$nuxtI18nHead = nuxtI18nHead;\n          if (!store) {\n            _context5.next = 58;\n            break;\n          }\n          // Inject in store.\n          store.$i18n = app.i18n;\n          if (!store.state.localeDomains) {\n            _context5.next = 58;\n            break;\n          }\n          _iterator = plugin_main_createForOfIteratorHelper(app.i18n.locales);\n          _context5.prev = 41;\n          _iterator.s();\n        case 43:\n          if ((_step = _iterator.n()).done) {\n            _context5.next = 50;\n            break;\n          }\n          locale = _step.value;\n          if (!(typeof locale === \'string\')) {\n            _context5.next = 47;\n            break;\n          }\n          return _context5.abrupt("continue", 48);\n        case 47:\n          locale.domain = store.state.localeDomains[locale.code];\n        case 48:\n          _context5.next = 43;\n          break;\n        case 50:\n          _context5.next = 55;\n          break;\n        case 52:\n          _context5.prev = 52;\n          _context5.t1 = _context5["catch"](41);\n          _iterator.e(_context5.t1);\n        case 55:\n          _context5.prev = 55;\n          _iterator.f();\n          return _context5.finish(55);\n        case 58:\n          /** @type {string | undefined} */\n          finalLocale = options_options.detectBrowserLanguage ? doDetectBrowserLanguage(route) : \'\';\n          if (!finalLocale) {\n            vuex = options_options.vuex;\n            if (vuex && vuex.syncLocale && store && store.state[vuex.moduleName].locale !== \'\') {\n              finalLocale = store.state[vuex.moduleName].locale;\n            } else if (app.i18n.differentDomains) {\n              domainLocale = getLocaleDomain(options_options.normalizedLocales, req);\n              finalLocale = domainLocale;\n            } else if (options_options.strategy !== Constants.STRATEGIES.NO_PREFIX) {\n              routeLocale = getLocaleFromRoute(route);\n              finalLocale = routeLocale;\n            }\n          }\n          if (!finalLocale && useCookie) {\n            finalLocale = app.i18n.getLocaleCookie();\n          }\n          if (!finalLocale) {\n            finalLocale = app.i18n.defaultLocale || \'\';\n          }\n          _context5.next = 64;\n          return loadAndSetLocale(finalLocale, {\n            initialSetup: true\n          });\n        case 64:\n          if (!( true && nuxtOptions.isUniversalMode)) {\n            _context5.next = 72;\n            break;\n          }\n          _context5.next = 67;\n          return onNavigate(context.route);\n        case 67:\n          _yield$onNavigate = _context5.sent;\n          _yield$onNavigate2 = Object(slicedToArray["a" /* default */])(_yield$onNavigate, 2);\n          _ = _yield$onNavigate2[0];\n          redirectTo = _yield$onNavigate2[1];\n          if (redirectTo) {\n            location.assign(Object(ufo_dist["joinURL"])(context.base, redirectTo));\n          }\n        case 72:\n        case "end":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[41, 52, 55, 58]]);\n  }));\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})());\n// EXTERNAL MODULE: ./.nuxt/workbox.js\nvar workbox = __webpack_require__(264);\nvar workbox_default = /*#__PURE__*/__webpack_require__.n(workbox);\n\n// CONCATENATED MODULE: ./.nuxt/pwa/meta.utils.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction meta_utils_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = meta_utils_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction meta_utils_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return meta_utils_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return meta_utils_arrayLikeToArray(o, minLen); }\nfunction meta_utils_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction mergeMeta(to, from) {\n  if (typeof to === \'function\') {\n    // eslint-disable-next-line no-console\n    console.warn(\'Cannot merge meta. Avoid using head as a function!\');\n    return;\n  }\n  for (var key in from) {\n    var value = from[key];\n    if (Array.isArray(value)) {\n      to[key] = to[key] || [];\n      var _iterator = meta_utils_createForOfIteratorHelper(value),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          // Avoid duplicates\n          if (item.hid && hasMeta(to[key], \'hid\', item.hid) || item.name && hasMeta(to[key], \'name\', item.name)) {\n            continue;\n          }\n          // Add meta\n          to[key].push(item);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else if (Object(esm_typeof["a" /* default */])(value) === \'object\') {\n      to[key] = to[key] || {};\n      for (var attr in value) {\n        to[key][attr] = value[attr];\n      }\n    } else if (to[key] === undefined) {\n      to[key] = value;\n    }\n  }\n}\nfunction hasMeta(arr, key, val) {\n  return arr.find(function (obj) {\n    return val ? obj[key] === val : obj[key];\n  });\n}\n// EXTERNAL MODULE: ./.nuxt/pwa/meta.json\nvar pwa_meta = __webpack_require__(352);\n\n// CONCATENATED MODULE: ./.nuxt/pwa/meta.plugin.js\n\n\n/* harmony default export */ var meta_plugin = (function (_ref) {\n  var app = _ref.app;\n  mergeMeta(app.head, pwa_meta);\n});\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar node_modules_axios = __webpack_require__(167);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(node_modules_axios);\n\n// EXTERNAL MODULE: ./node_modules/defu/dist/defu.mjs\nvar defu = __webpack_require__(353);\n\n// CONCATENATED MODULE: ./.nuxt/axios.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction axios_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction axios_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? axios_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : axios_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\nfunction axios_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = axios_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction axios_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return axios_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return axios_arrayLikeToArray(o, minLen); }\nfunction axios_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n// Axios.prototype cannot be modified\nvar axiosExtra = {\n  setBaseURL: function setBaseURL(baseURL) {\n    this.defaults.baseURL = baseURL;\n  },\n  setHeader: function setHeader(name, value) {\n    var scopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'common\';\n    var _iterator = axios_createForOfIteratorHelper(Array.isArray(scopes) ? scopes : [scopes]),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var scope = _step.value;\n        if (!value) {\n          delete this.defaults.headers[scope][name];\n          continue;\n        }\n        this.defaults.headers[scope][name] = value;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  },\n  setToken: function setToken(token, type) {\n    var scopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \'common\';\n    var value = !token ? null : (type ? type + \' \' : \'\') + token;\n    this.setHeader(\'Authorization\', value, scopes);\n  },\n  onRequest: function onRequest(fn) {\n    this.interceptors.request.use(function (config) {\n      return fn(config) || config;\n    });\n  },\n  onResponse: function onResponse(fn) {\n    this.interceptors.response.use(function (response) {\n      return fn(response) || response;\n    });\n  },\n  onRequestError: function onRequestError(fn) {\n    this.interceptors.request.use(undefined, function (error) {\n      return fn(error) || Promise.reject(error);\n    });\n  },\n  onResponseError: function onResponseError(fn) {\n    this.interceptors.response.use(undefined, function (error) {\n      return fn(error) || Promise.reject(error);\n    });\n  },\n  onError: function onError(fn) {\n    this.onRequestError(fn);\n    this.onResponseError(fn);\n  },\n  create: function create(options) {\n    return axios_createAxiosInstance(Object(defu["a" /* default */])(options, this.defaults));\n  }\n};\n\n// Request helpers ($get, $post, ...)\nvar axios_loop = function _loop() {\n  var method = _arr[axios_i];\n  axiosExtra[\'$\' + method] = function () {\n    return this[method].apply(this, arguments).then(function (res) {\n      return res && res.data;\n    });\n  };\n};\nfor (var axios_i = 0, _arr = [\'request\', \'delete\', \'get\', \'head\', \'options\', \'post\', \'put\', \'patch\']; axios_i < _arr.length; axios_i++) {\n  axios_loop();\n}\nvar extendAxiosInstance = function extendAxiosInstance(axios) {\n  for (var key in axiosExtra) {\n    axios[key] = axiosExtra[key].bind(axios);\n  }\n};\nvar axios_createAxiosInstance = function createAxiosInstance(axiosOptions) {\n  // Create new axios instance\n  var axios = axios_default.a.create(axiosOptions);\n  axios.CancelToken = axios_default.a.CancelToken;\n  axios.isCancel = axios_default.a.isCancel;\n\n  // Extend axios proto\n  extendAxiosInstance(axios);\n\n  // Intercept to apply default headers\n  axios.onRequest(function (config) {\n    config.headers = axios_objectSpread(axios_objectSpread({}, axios.defaults.headers.common), config.headers);\n  });\n\n  // Setup interceptors\n\n  axios_setupProgress(axios);\n  return axios;\n};\nvar axios_setupProgress = function setupProgress(axios) {\n  if (false) {}\n\n  // A noop loading inteterface for when $nuxt is not yet ready\n  var noopLoading = {\n    finish: function finish() {},\n    start: function start() {},\n    fail: function fail() {},\n    set: function set() {}\n  };\n  var $loading = function $loading() {\n    var $nuxt = typeof window !== \'undefined\' && window[\'$nuxt\'];\n    return $nuxt && $nuxt.$loading && $nuxt.$loading.set ? $nuxt.$loading : noopLoading;\n  };\n  var currentRequests = 0;\n  axios.onRequest(function (config) {\n    if (config && config.progress === false) {\n      return;\n    }\n    currentRequests++;\n  });\n  axios.onResponse(function (response) {\n    if (response && response.config && response.config.progress === false) {\n      return;\n    }\n    currentRequests--;\n    if (currentRequests <= 0) {\n      currentRequests = 0;\n      $loading().finish();\n    }\n  });\n  axios.onError(function (error) {\n    if (error && error.config && error.config.progress === false) {\n      return;\n    }\n    currentRequests--;\n    if (axios_default.a.isCancel(error)) {\n      if (currentRequests <= 0) {\n        currentRequests = 0;\n        $loading().finish();\n      }\n      return;\n    }\n    $loading().fail();\n    $loading().finish();\n  });\n  var onProgress = function onProgress(e) {\n    if (!currentRequests || !e.total) {\n      return;\n    }\n    var progress = e.loaded * 100 / (e.total * currentRequests);\n    $loading().set(Math.min(100, progress));\n  };\n  axios.defaults.onUploadProgress = onProgress;\n  axios.defaults.onDownloadProgress = onProgress;\n};\n/* harmony default export */ var _nuxt_axios = (function (ctx, inject) {\n  // runtimeConfig\n  var runtimeConfig = ctx.$config && ctx.$config.axios || {};\n  // baseURL\n  var baseURL =  true ? runtimeConfig.browserBaseURL || runtimeConfig.browserBaseUrl || runtimeConfig.baseURL || runtimeConfig.baseUrl || \'/\' : undefined;\n\n  // Create fresh objects for all default header scopes\n  // Axios creates only one which is shared across SSR requests!\n  // https://github.com/mzabriskie/axios/blob/master/lib/defaults.js\n  var headers = {\n    "common": {\n      "Accept": "application/json, text/plain, */*"\n    },\n    "delete": {},\n    "get": {},\n    "head": {},\n    "post": {},\n    "put": {},\n    "patch": {}\n  };\n  var axiosOptions = {\n    baseURL: baseURL,\n    headers: headers\n  };\n\n  // Proxy SSR request headers headers\n  if (false) { var h, _i2, _arr2, reqHeaders; }\n  if (false) {}\n  var axios = axios_createAxiosInstance(axiosOptions);\n\n  // Inject axios to the context as $axios\n  ctx.$axios = axios;\n  inject(\'axios\', axios);\n});\n// EXTERNAL MODULE: ./node_modules/material-design-icons-iconfont/dist/material-design-icons.css\nvar material_design_icons = __webpack_require__(568);\n\n// EXTERNAL MODULE: ./node_modules/@fortawesome/fontawesome-free/css/all.css\nvar css_all = __webpack_require__(574);\n\n// EXTERNAL MODULE: ./node_modules/@mdi/font/css/materialdesignicons.css\nvar materialdesignicons = __webpack_require__(584);\n\n// CONCATENATED MODULE: ./plugins/vuetify.js\n\n\n\n\n\nvue_runtime_esm["a" /* default */].use(framework["a" /* default */]);\n/* harmony default export */ var plugins_vuetify = (new framework["a" /* default */]({\n  icons: {\n    iconfont: \'fa\'\n  }\n}));\n// EXTERNAL MODULE: ./helpers/crypto.js\nvar helpers_crypto = __webpack_require__(35);\n\n// CONCATENATED MODULE: ./plugins/axios.js\n\n\n/* harmony default export */ var plugins_axios = (function (_ref) {\n  var $axios = _ref.$axios,\n    redirect = _ref.redirect,\n    store = _ref.store;\n  $axios.onRequest(function (config) {\n    config.withCredentials = true;\n    config.headers[\'Unix\'] = Math.floor(Date.now() / 1000);\n    if (config.data !== undefined && !(config.data instanceof FormData)) {\n      var seed = sessionStorage.getItem(\'seed\');\n      var secret = Object(helpers_crypto["d" /* hmacSHA256 */])(seed, store.state.token + store.state.unix);\n      config.data = {\n        data: Object(helpers_crypto["b" /* aesEncrypt */])(JSON.stringify(config.data), secret)\n      };\n    }\n  });\n  $axios.onResponse(function (resp) {\n    if (resp.data.data !== undefined) {\n      var padding = 20;\n      var tick = store.state.unix;\n      for (var i = tick - padding; i < tick + padding; i++) {\n        var seed = sessionStorage.getItem(\'seed\');\n        var secret = Object(helpers_crypto["d" /* hmacSHA256 */])(seed, store.state.token + i);\n        try {\n          var data = Object(helpers_crypto["a" /* aesDecrypt */])(resp.data.data, secret);\n          resp.data = JSON.parse(data);\n          return;\n        } catch (e) {}\n      }\n      throw new Error(\'data can not decrypt\');\n    }\n  });\n  $axios.onError(function (error) {\n    var code = parseInt(error.response && error.response.status);\n    // if (code === 500) {\n    //   redirect(\'/error\')\n    // }\n  });\n});\n// CONCATENATED MODULE: ./plugins/i18n.js\n/* harmony default export */ var plugins_i18n = (function (_ref) {\n  var app = _ref.app;\n  // beforeLanguageSwitch called right before setting a new locale\n  app.i18n.beforeLanguageSwitch = function (oldLocale, newLocale) {};\n  // onLanguageSwitched called right after a new locale has been set\n  app.i18n.onLanguageSwitched = function (oldLocale, newLocale) {};\n});\n// CONCATENATED MODULE: ./helpers/task.js\n\nfunction startLoopTask(func, timeout) {\n  setInterval(func, timeout);\n  func();\n}\n// EXTERNAL MODULE: ./helpers/consts.js\nvar consts = __webpack_require__(65);\n\n// CONCATENATED MODULE: ./plugins/task.js\n\n\nvar loopInterval = 2000;\nvar syncUnixInterval = 5000;\nvar tickInterval = 1000;\n/* harmony default export */ var task = (function (_ref) {\n  var store = _ref.store;\n  startLoopTask(function () {\n    store.dispatch(\'getServiceStatus\');\n  }, loopInterval);\n  startLoopTask(function () {\n    store.dispatch(\'getToken\');\n  }, syncUnixInterval);\n  startLoopTask(function () {\n    store.commit(\'tick\');\n  }, tickInterval);\n  startLoopTask(function () {\n    if ((store.state.serviceStatus & consts["a" /* ServiceStatusEnum */].SERVICE_STATUS_CREATE_ID) > 0 || (store.state.serviceStatus & consts["a" /* ServiceStatusEnum */].SERVICE_STATUS_RUNNING) > 0) {\n      store.dispatch(\'wallet/getCurrentWalletStatus\');\n      store.dispatch(\'node/getNodeStatus\');\n      store.dispatch(\'node/getNeighbors\');\n    }\n  }, loopInterval);\n});\n// CONCATENATED MODULE: ./plugins/router.js\n\n/* harmony default export */ var plugins_router = (function (_ref) {\n  var app = _ref.app,\n    redirect = _ref.redirect,\n    store = _ref.store;\n  app.router.beforeEach(function (to, from, next) {\n    if (to.path === \'/loading\') {\n      return next();\n    }\n    next();\n  });\n  app.router.afterEach(function (to, from) {\n    var status = store.state.serviceStatus;\n    if (status === consts["a" /* ServiceStatusEnum */].SERVICE_STATUS_DEFAULT) {\n      redirect(app.localePath(\'loading\'));\n    } else if ((status & consts["a" /* ServiceStatusEnum */].SERVICE_STATUS_NO_WALLET_FILE) > 0) {\n      if (!~to.path.indexOf(\'/wallet/create\')) {\n        redirect(app.localePath(\'wallet-create\'));\n      }\n    } else if ((status & consts["a" /* ServiceStatusEnum */].SERVICE_STATUS_NO_PASSWORD) > 0) {\n      if (!~to.path.indexOf(\'/wallet/open\')) {\n        redirect(app.localePath(\'wallet-open\'));\n      }\n    } else {\n      var seed = sessionStorage.getItem(\'seed\');\n      if (!seed) {\n        redirect(app.localePath(\'wallet-open\'));\n      }\n    }\n  });\n});\n// CONCATENATED MODULE: ./.nuxt/index.js\n\n\n\n\n\n\n\n\n\nfunction _nuxt_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _nuxt_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _nuxt_ownKeys(Object(t), !0).forEach(function (r) { Object(defineProperty["a" /* default */])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : _nuxt_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Plugins */\n\n // Source: ./vuetify/plugin.js (mode: \'all\')\n // Source: ./nuxt-i18n/plugin.utils.js (mode: \'all\')\n // Source: ./nuxt-i18n/plugin.routing.js (mode: \'all\')\n // Source: ./nuxt-i18n/plugin.main.js (mode: \'all\')\n // Source: ./workbox.js (mode: \'client\')\n // Source: ./pwa/meta.plugin.js (mode: \'all\')\n // Source: ./axios.js (mode: \'all\')\n // Source: ../plugins/vuetify (mode: \'all\')\n // Source: ../plugins/axios (mode: \'all\')\n // Source: ../plugins/i18n (mode: \'all\')\n // Source: ../plugins/task (mode: \'all\')\n // Source: ../plugins/router (mode: \'all\')\n\n// Component: <ClientOnly>\nvue_runtime_esm["a" /* default */].component(vue_client_only_common_default.a.name, vue_client_only_common_default.a);\n\n// TODO: Remove in Nuxt 3: <NoSsr>\nvue_runtime_esm["a" /* default */].component(vue_no_ssr_common_default.a.name, _nuxt_objectSpread(_nuxt_objectSpread({}, vue_no_ssr_common_default.a), {}, {\n  render: function render(h, ctx) {\n    if ( true && !vue_no_ssr_common_default.a._warned) {\n      vue_no_ssr_common_default.a._warned = true;\n      console.warn(\'<no-ssr> has been deprecated and will be removed in Nuxt 3, please use <client-only> instead\');\n    }\n    return vue_no_ssr_common_default.a.render(h, ctx);\n  }\n}));\n\n// Component: <NuxtChild>\nvue_runtime_esm["a" /* default */].component(nuxt_child.name, nuxt_child);\nvue_runtime_esm["a" /* default */].component(\'NChild\', nuxt_child);\n\n// Component NuxtLink is imported in server.js or client.js\n\n// Component: <Nuxt>\nvue_runtime_esm["a" /* default */].component(components_nuxt.name, components_nuxt);\nObject.defineProperty(vue_runtime_esm["a" /* default */].prototype, \'$nuxt\', {\n  get: function get() {\n    var globalNuxt = this.$root ? this.$root.$options.$nuxt : null;\n    if ( true && !globalNuxt && typeof window !== \'undefined\') {\n      return window.$nuxt;\n    }\n    return globalNuxt;\n  },\n  configurable: true\n});\nvue_runtime_esm["a" /* default */].use(vue_meta_esm_browser["a" /* default */], {\n  "keyName": "head",\n  "attribute": "data-n-head",\n  "ssrAttribute": "data-n-head-ssr",\n  "tagIDKeyName": "hid"\n});\nvar defaultTransition = {\n  "name": "page",\n  "mode": "out-in",\n  "appear": true,\n  "appearClass": "appear",\n  "appearActiveClass": "appear-active",\n  "appearToClass": "appear-to"\n};\nvar originalRegisterModule = vuex_esm["a" /* default */].Store.prototype.registerModule;\nfunction registerModule(path, rawModule) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var preserveState =  true && (Array.isArray(path) ? !!path.reduce(function (namespacedState, path) {\n    return namespacedState && namespacedState[path];\n  }, this.state) : path in this.state);\n  return originalRegisterModule.call(this, path, rawModule, _nuxt_objectSpread({\n    preserveState: preserveState\n  }, options));\n}\nfunction createApp(_x) {\n  return _createApp.apply(this, arguments);\n}\nfunction _createApp() {\n  _createApp = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(ssrContext) {\n    var config,\n      store,\n      router,\n      app,\n      next,\n      route,\n      path,\n      inject,\n      _args2 = arguments;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          inject = function _inject(key, value) {\n            if (!key) {\n              throw new Error(\'inject(key, value) has no key provided\');\n            }\n            if (value === undefined) {\n              throw new Error("inject(\'".concat(key, "\', value) has no value provided"));\n            }\n            key = \'$\' + key;\n            // Add into app\n            app[key] = value;\n            // Add into context\n            if (!app.context[key]) {\n              app.context[key] = value;\n            }\n\n            // Add into store\n            store[key] = app[key];\n\n            // Check if plugin not already installed\n            var installKey = \'__nuxt_\' + key + \'_installed__\';\n            if (vue_runtime_esm["a" /* default */][installKey]) {\n              return;\n            }\n            vue_runtime_esm["a" /* default */][installKey] = true;\n            // Call Vue.use() to install the plugin into vm\n            vue_runtime_esm["a" /* default */].use(function () {\n              if (!Object.prototype.hasOwnProperty.call(vue_runtime_esm["a" /* default */].prototype, key)) {\n                Object.defineProperty(vue_runtime_esm["a" /* default */].prototype, key, {\n                  get: function get() {\n                    return this.$root.$options[key];\n                  }\n                });\n              }\n            });\n          };\n          config = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n          store = createStore(ssrContext);\n          _context2.next = 5;\n          return createRouter(ssrContext, config, {\n            store: store\n          });\n        case 5:\n          router = _context2.sent;\n          // Add this.$router into store actions/mutations\n          store.$router = router;\n\n          // Create Root instance\n\n          // here we inject the router and store to all child components,\n          // making them available everywhere as `this.$router` and `this.$store`.\n          app = _nuxt_objectSpread({\n            head: {\n              "titleTemplate": "%s - nkn-web",\n              "title": "nkn-web",\n              "meta": [{\n                "name": "theme-color",\n                "content": "#3f51b5"\n              }, {\n                "charset": "utf-8"\n              }, {\n                "name": "viewport",\n                "content": "width=device-width, initial-scale=1"\n              }, {\n                "hid": "description",\n                "name": "description",\n                "content": "nkn-web"\n              }, {\n                "hid": "charset",\n                "charset": "utf-8"\n              }, {\n                "hid": "mobile-web-app-capable",\n                "name": "mobile-web-app-capable",\n                "content": "yes"\n              }, {\n                "hid": "apple-mobile-web-app-title",\n                "name": "apple-mobile-web-app-title",\n                "content": "nkn-web"\n              }, {\n                "hid": "author",\n                "name": "author",\n                "content": "heron"\n              }, {\n                "hid": "og:type",\n                "name": "og:type",\n                "property": "og:type",\n                "content": "website"\n              }, {\n                "hid": "og:title",\n                "name": "og:title",\n                "property": "og:title",\n                "content": "nkn-web"\n              }, {\n                "hid": "og:site_name",\n                "name": "og:site_name",\n                "property": "og:site_name",\n                "content": "nkn-web"\n              }, {\n                "hid": "og:description",\n                "name": "og:description",\n                "property": "og:description",\n                "content": "nkn-web"\n              }],\n              "link": [{\n                "rel": "icon",\n                "type": "image/x-icon",\n                "href": "/web/favicon.ico"\n              }, {\n                "hid": "shortcut-icon",\n                "rel": "shortcut icon",\n                "href": "/web/favicon.ico"\n              }, {\n                "rel": "manifest",\n                "href": "/web/_nuxt/manifest.fecaf0ed.json",\n                "hid": "manifest"\n              }, {\n                "rel": "stylesheet",\n                "type": "text/css",\n                "href": "https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900&display=swap"\n              }, {\n                "rel": "stylesheet",\n                "type": "text/css",\n                "href": "https://cdn.jsdelivr.net/npm/@mdi/font@latest/css/materialdesignicons.min.css"\n              }],\n              "style": [],\n              "script": [],\n              "htmlAttrs": {\n                "lang": "en"\n              }\n            },\n            store: store,\n            router: router,\n            nuxt: {\n              defaultTransition: defaultTransition,\n              transitions: [defaultTransition],\n              setTransitions: function setTransitions(transitions) {\n                if (!Array.isArray(transitions)) {\n                  transitions = [transitions];\n                }\n                transitions = transitions.map(function (transition) {\n                  if (!transition) {\n                    transition = defaultTransition;\n                  } else if (typeof transition === \'string\') {\n                    transition = Object.assign({}, defaultTransition, {\n                      name: transition\n                    });\n                  } else {\n                    transition = Object.assign({}, defaultTransition, transition);\n                  }\n                  return transition;\n                });\n                this.$options.nuxt.transitions = transitions;\n                return transitions;\n              },\n              err: null,\n              dateErr: null,\n              error: function error(err) {\n                err = err || null;\n                app.context._errored = Boolean(err);\n                err = err ? Object(utils["p" /* normalizeError */])(err) : null;\n                var nuxt = app.nuxt; // to work with @vue/composition-api, see https://github.com/nuxt/nuxt.js/issues/6517#issuecomment-573280207\n                if (this) {\n                  nuxt = this.nuxt || this.$options.nuxt;\n                }\n                nuxt.dateErr = Date.now();\n                nuxt.err = err;\n                // Used in src/server.js\n                if (ssrContext) {\n                  ssrContext.nuxt.error = err;\n                }\n                return err;\n              }\n            }\n          }, App); // Make app available into store via this.app\n          store.app = app;\n          next = ssrContext ? ssrContext.next : function (location) {\n            return app.router.push(location);\n          }; // Resolve route\n          if (ssrContext) {\n            route = router.resolve(ssrContext.url).route;\n          } else {\n            path = Object(utils["f" /* getLocation */])(router.options.base, router.options.mode);\n            route = router.resolve(path).route;\n          }\n\n          // Set context to app.context\n          _context2.next = 13;\n          return Object(utils["t" /* setContext */])(app, {\n            store: store,\n            route: route,\n            next: next,\n            error: app.nuxt.error.bind(app),\n            payload: ssrContext ? ssrContext.payload : undefined,\n            req: ssrContext ? ssrContext.req : undefined,\n            res: ssrContext ? ssrContext.res : undefined,\n            beforeRenderFns: ssrContext ? ssrContext.beforeRenderFns : undefined,\n            beforeSerializeFns: ssrContext ? ssrContext.beforeSerializeFns : undefined,\n            ssrContext: ssrContext\n          });\n        case 13:\n          // Inject runtime config as $config\n          inject(\'config\', config);\n          if (true) {\n            // Replace store state before plugins execution\n            if (window.__NUXT__ && window.__NUXT__.state) {\n              store.replaceState(window.__NUXT__.state);\n            }\n          }\n\n          // Add enablePreview(previewData = {}) in context for plugins\n          if (true) {\n            app.context.enablePreview = function () {\n              var previewData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n              app.previewData = Object.assign({}, previewData);\n              inject(\'preview\', previewData);\n            };\n          }\n          // Plugin execution\n          if (!(typeof vuetify_plugin === \'function\')) {\n            _context2.next = 19;\n            break;\n          }\n          _context2.next = 19;\n          return vuetify_plugin(app.context, inject);\n        case 19:\n          if (!(typeof /* Cannot get final name for export "default" in "./.nuxt/nuxt-i18n/plugin.utils.js" (known exports: loadLanguageAsync resolveBaseUrl getDomainFromLocale registerStore syncVuex validateRouteParams, known reexports: ) */ undefined === \'function\')) {\n            _context2.next = 22;\n            break;\n          }\n          _context2.next = 22;\n          return /* Cannot get final name for export "default" in "./.nuxt/nuxt-i18n/plugin.utils.js" (known exports: loadLanguageAsync resolveBaseUrl getDomainFromLocale registerStore syncVuex validateRouteParams, known reexports: ) */ undefined(app.context, inject);\n        case 22:\n          if (!(typeof plugin_routing === \'function\')) {\n            _context2.next = 25;\n            break;\n          }\n          _context2.next = 25;\n          return plugin_routing(app.context, inject);\n        case 25:\n          if (!(typeof plugin_main === \'function\')) {\n            _context2.next = 28;\n            break;\n          }\n          _context2.next = 28;\n          return plugin_main(app.context, inject);\n        case 28:\n          if (!( true && typeof workbox_default.a === \'function\')) {\n            _context2.next = 31;\n            break;\n          }\n          _context2.next = 31;\n          return workbox_default()(app.context, inject);\n        case 31:\n          if (!(typeof meta_plugin === \'function\')) {\n            _context2.next = 34;\n            break;\n          }\n          _context2.next = 34;\n          return meta_plugin(app.context, inject);\n        case 34:\n          if (!(typeof _nuxt_axios === \'function\')) {\n            _context2.next = 37;\n            break;\n          }\n          _context2.next = 37;\n          return _nuxt_axios(app.context, inject);\n        case 37:\n          if (!(typeof plugins_vuetify === \'function\')) {\n            _context2.next = 40;\n            break;\n          }\n          _context2.next = 40;\n          return plugins_vuetify(app.context, inject);\n        case 40:\n          if (!(typeof plugins_axios === \'function\')) {\n            _context2.next = 43;\n            break;\n          }\n          _context2.next = 43;\n          return plugins_axios(app.context, inject);\n        case 43:\n          if (!(typeof plugins_i18n === \'function\')) {\n            _context2.next = 46;\n            break;\n          }\n          _context2.next = 46;\n          return plugins_i18n(app.context, inject);\n        case 46:\n          if (!(typeof task === \'function\')) {\n            _context2.next = 49;\n            break;\n          }\n          _context2.next = 49;\n          return task(app.context, inject);\n        case 49:\n          if (!(typeof plugins_router === \'function\')) {\n            _context2.next = 52;\n            break;\n          }\n          _context2.next = 52;\n          return plugins_router(app.context, inject);\n        case 52:\n          // Lock enablePreview in context\n          if (true) {\n            app.context.enablePreview = function () {\n              console.warn(\'You cannot call enablePreview() outside a plugin.\');\n            };\n          }\n\n          // Wait for async component to be resolved first\n          _context2.next = 55;\n          return new Promise(function (resolve, reject) {\n            // Ignore 404s rather than blindly replacing URL in browser\n            if (true) {\n              var _router$resolve = router.resolve(app.context.route.fullPath),\n                _route = _router$resolve.route;\n              if (!_route.matched.length) {\n                return resolve();\n              }\n            }\n            router.replace(app.context.route.fullPath, resolve, function (err) {\n              // https://github.com/vuejs/vue-router/blob/v3.4.3/src/util/errors.js\n              if (!err._isRouter) return reject(err);\n              if (err.type !== 2 /* NavigationFailureType.redirected */) return resolve();\n\n              // navigated to a different route in router guard\n              var unregister = router.afterEach( /*#__PURE__*/function () {\n                var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from) {\n                  return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (false) {}\n                        _context.next = 3;\n                        return Object(utils["j" /* getRouteData */])(to);\n                      case 3:\n                        app.context.route = _context.sent;\n                        app.context.params = to.params || {};\n                        app.context.query = to.query || {};\n                        unregister();\n                        resolve();\n                      case 8:\n                      case "end":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function (_x2, _x3) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            });\n          });\n        case 55:\n          return _context2.abrupt("return", {\n            store: store,\n            app: app,\n            router: router\n          });\n        case 56:\n        case "end":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _createApp.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///97\n')}},[[376,13,3,14]]]);