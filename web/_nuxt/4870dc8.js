(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{694:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./locales/en/menu.js\n/* harmony default export */ var menu = ({\n  NODE_STATUS: 'Node status',\n  OVERVIEW: 'Neighbors',\n  SETTINGS: 'settings'\n});\n// CONCATENATED MODULE: ./locales/en/node.js\n/* harmony default export */ var node = ({\n  state: {\n    DEFAULT: 'not started',\n    WAIT_FOR_SYNCING: 'wait for chain db syncing',\n    SYNC_STARTED: 'chain db sync started',\n    SYNC_FINISHED: 'chain db sync finished',\n    PERSIST_FINISHED: 'mining'\n  },\n  serviceStatus: {\n    SERVICE_STATUS_CREATE_ID: 'creating ID'\n  }\n});\n// CONCATENATED MODULE: ./locales/en/settings.js\n/* harmony default export */ var settings = ({\n  TITLE: 'Settings',\n  RESTART_NKN: 'Restart NKN.',\n  BENEFICIARY_TITLE: 'Input a beneficiary address for auto transfer.',\n  BENEFICIARY_HINT: 'New amount will auto transfer to this address.',\n  BENEFICIARY_REQUIRED: 'Beneficiary is required',\n  BENEFICIARY_ERROR: 'Invalid Beneficiary.',\n  BENEFICIARY_WARING: 'Need restart NKN for enabled beneficiary address. (New beneficiary address: {beneficiaryAddr})',\n  CONFIG_TITLE: 'Node configure',\n  UPDATE_CONFIG_SUCCESS: 'Update node configure success.',\n  UPDATE_CONFIG_ERROR: 'Update node configure error.'\n});\n// CONCATENATED MODULE: ./locales/en/neighbor.js\n/* harmony default export */ var neighbor = ({\n  TITLE: 'Neighbors',\n  WARNING: 'Warning: Local node has no inbound neighbor, it\\'s possible that local node is unreachable from outside, e.g. behind firewall or NAT.',\n  OUT_BOUND: 'out',\n  IN_BOUND: 'in',\n  header: {\n    ID: 'ID',\n    IP: 'IP',\n    STATE: 'State',\n    BOUND: 'Direction',\n    PING: 'Ping'\n  }\n});\n// CONCATENATED MODULE: ./locales/en/config.js\n/* harmony default export */ var config = ({\n  Register_ID_Txn_Fee: 'Generate ID txn fee',\n  Low_Fee_Txn_Size_Per_Block: 'Low fee txn size per block',\n  Num_Low_Fee_Txn_Per_Block: 'Num low fee txn per block',\n  Low_Txn_Fee: 'Low txn fee',\n  Low_Txn_Fee_Per_Size: 'Low txn fee per byte'\n});\n// CONCATENATED MODULE: ./locales/en/tooltip.js\n/* harmony default export */ var tooltip = ({\n  BENEFICIARY_TOOLTIP: 'Mining rewards will be deposited to this address.',\n  Register_ID_Txn_Fee_TOOLTIP: 'Generate ID transaction fee.',\n  Low_Fee_Txn_Size_Per_Block_TOOLTIP: 'Total transaction size per block of low fee transactions.',\n  Num_Low_Fee_Txn_Per_Block_TOOLTIP: 'The number of low fee transactions per block.',\n  Low_Txn_Fee_TOOLTIP: 'Transaction fee threshold of low fee transactions.',\n  Low_Txn_Fee_Per_Size_TOOLTIP: 'Transaction fee per byte threshold of low fee transactions.'\n});\n// CONCATENATED MODULE: ./locales/en/index.js\n\n\n\n\n\n\n/* harmony default export */ var en = __webpack_exports__[\"default\"] = ({\n  language: 'English',\n  menu: menu,\n  node: node,\n  settings: settings,\n  neighbor: neighbor,\n  config: config,\n  tooltip: tooltip,\n  LOADING: 'loading',\n  SEARCH: 'Search',\n  NEXT: 'Next',\n  CLOSE: 'Close',\n  CANCEL: 'Cancel',\n  RESTART: 'Restart',\n  START: 'Start',\n  STOP: 'Stop',\n  SUBMIT: 'Submit',\n  RESET: 'Reset',\n  BENEFICIARY: 'Beneficiary',\n  BALANCE: 'Balance',\n  WALLET_ADDRESS: 'Wallet address',\n  PUBLIC_KEY: 'Public key',\n  SECRET_SEED: 'Secret seed',\n  PASSWORD: 'Password',\n  PASSWORD_ERROR: 'Invalid password.',\n  PASSWORD_REQUIRED: 'Password is required.',\n  PASSWORD_HINT: 'Please enter wallet password.',\n  FIELD_REQUIRED: 'This field is required.',\n  NUMBER_FIELD_ERROR: 'This field must be a number.',\n  POSITIVE_NUMBER_FIELD_ERROR: 'This field cannot be negative.',\n  NUMBER_MIN_ERROR: 'This field must be greater than {min}',\n  NUMBER_MAX_ERROR: 'This field must be less than {max}',\n  NUMBER_DP_ERROR: 'The number of decimal places cannot exceed {dp} digits',\n  PASSWORD_CONFIRM: 'Please enter password again',\n  PASSWORD_CONFIRM_ERROR: 'Password does not match.',\n  PASSWORD_CONFIRM_REQUIRED: 'Please enter password again.',\n  PASSWORD_CONFIRM_HINT: 'Please enter password confirm.',\n  WALLET_CREATE: 'Create wallet',\n  WALLET_OPEN: 'Open wallet',\n  CREATE: 'Create',\n  OPEN: 'Open',\n  WALLET_DOWNLOAD: 'Download wallet',\n  WALLET_UPLOAD: 'Upload wallet',\n  NO_DATA: 'No data available',\n  PER_PAGE_TEXT: 'Rows per pages',\n  footer: {\n    TITLE: 'NKN: Network Infra for Decentralized Internet',\n    TEXT: 'NKN is the new kind of P2P network connectivity protocol & ecosystem powered by a novel public blockchain. We use economic incentives to motivate Internet users to share network connection and utilize unused bandwidth. NKN\\'s open, efficient, and robust networking infrastructure enables application developers to build the decentralized Internet so everyone can enjoy secure, low cost, and universally accessible connectivity.'\n  },\n  node_status: {\n    TITLE: 'Node status',\n    NODE_STATUS: 'Node status',\n    NODE_VERSION: 'Node version',\n    ID: 'ID',\n    RELAY_MESSAGE_COUNT: 'Message relayed by node',\n    HEIGHT: 'NKN node block height',\n    BENEFICIARY_ADDR: 'Beneficiary address'\n  },\n  current_wallet_status: {\n    TITLE: 'Current wallet status'\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///694\n")}}]);